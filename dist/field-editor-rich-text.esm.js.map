{"version":3,"file":"field-editor-rich-text.esm.js","sources":["../src/ContentfulEditorProvider.ts","../src/plugins/Break/createSoftBreakPlugin.ts","../src/plugins/Break/createExitBreakPlugin.ts","../src/plugins/Break/createResetNodePlugin.ts","../src/plugins/DragAndDrop/index.tsx","../src/helpers/environment.ts","../src/helpers/editor.ts","../src/plugins/links-tracking.tsx","../src/SdkProvider.tsx","../src/plugins/shared/useFetchedEntity.ts","../src/plugins/shared/FetchingWrappedAssetCard.tsx","../src/plugins/shared/FetchingWrappedEntryCard.tsx","../src/plugins/EmbeddedEntityBlock/LinkedEntityBlock.tsx","../../../node_modules/regenerator-runtime/runtime.js","../src/helpers/getLinkedContentTypeIdsForNodeType.ts","../src/helpers/newEntitySelectorConfigFromRichTextField.ts","../src/plugins/EmbeddedEntityBlock/Util.ts","../src/plugins/EmbeddedEntityBlock/ToolbarIcon.tsx","../src/plugins/EmbeddedEntityBlock/index.tsx","../src/plugins/EmbeddedEntityInline/FetchingWrappedInlineEntryCard.tsx","../src/plugins/EmbeddedEntityInline/Util.ts","../src/plugins/EmbeddedEntityInline/index.tsx","../src/helpers/validations.ts","../src/plugins/Heading/components/ToolbarHeadingButton.tsx","../src/helpers/extractNodes.ts","../src/helpers/transformers.ts","../src/plugins/Heading/components/Heading.tsx","../src/plugins/Heading/createHeadingPlugin.ts","../src/plugins/shared/ToolbarButton.tsx","../src/plugins/Hr/index.tsx","../src/plugins/Hyperlink/HyperlinkModal.tsx","../src/plugins/Hyperlink/components/ToolbarHyperlinkButton.tsx","../src/plugins/Hyperlink/utils.ts","../src/plugins/Hyperlink/useEntityInfo.ts","../src/plugins/Hyperlink/components/styles.ts","../src/plugins/Hyperlink/components/EntityHyperlink.tsx","../src/plugins/Hyperlink/components/UrlHyperlink.tsx","../src/plugins/Hyperlink/createHyperlinkPlugin.ts","../src/plugins/List/components/List.tsx","../src/plugins/List/components/ListItem.tsx","../src/plugins/List/transforms/moveListItemDown.ts","../src/plugins/List/transforms/moveListItems.ts","../src/plugins/List/transforms/unwrapList.ts","../src/plugins/List/transforms/toggleList.ts","../src/plugins/List/onKeyDownList.ts","../src/plugins/List/utils.ts","../src/plugins/List/transforms/insertListItem.ts","../src/plugins/List/insertListBreak.ts","../src/plugins/List/insertListFragment.ts","../src/plugins/List/transforms/deleteBackwardList.ts","../src/plugins/List/withList.ts","../src/plugins/List/createListPlugin.ts","../src/plugins/List/components/ToolbarListButton.tsx","../src/plugins/Marks/components/MarkToolbarButton.tsx","../src/plugins/Marks/helpers.ts","../src/plugins/Marks/Bold.tsx","../src/plugins/Marks/Code.tsx","../src/plugins/Marks/Italic.tsx","../src/plugins/Marks/Underline.tsx","../src/plugins/Marks/index.ts","../src/plugins/Normalizer/baseRules.ts","../src/plugins/Normalizer/utils.ts","../src/plugins/Normalizer/withNormalizer.ts","../src/plugins/Normalizer/createNormalizerPlugin.ts","../src/plugins/Paragraph/Paragraph.tsx","../src/plugins/Paragraph/utils.ts","../src/plugins/Paragraph/createParagraphPlugin.ts","../src/plugins/PasteHTML/utils/sanitizeSheets.ts","../src/plugins/PasteHTML/utils/sanitizeHTML.ts","../src/plugins/PasteHTML/createPasteHTMLPlugin.ts","../src/plugins/Quote/components/Quote.tsx","../src/plugins/Quote/shouldResetQuote.ts","../src/plugins/Quote/toggleQuote.ts","../src/plugins/Quote/withQuote.ts","../src/plugins/Quote/createQuotePlugin.ts","../src/plugins/Quote/components/ToolbarQuoteButton.tsx","../src/plugins/SelectOnBackspace/createSelectOnBackspacePlugin.ts","../src/plugins/SlashCommands/helpers.ts","../src/plugins/SlashCommands/createSlashCommandsPlugin.tsx","../src/plugins/SlashCommands/SlashCommandsPalette.tsx","../src/plugins/Table/actions/addRow.ts","../src/plugins/Table/actions/addColumn.ts","../src/plugins/Table/actions/setHeader.ts","../src/plugins/Table/helpers.ts","../src/plugins/Table/components/TableActions.tsx","../src/plugins/Table/components/Cell.tsx","../src/plugins/Table/components/HeaderCell.tsx","../src/plugins/Table/components/Row.tsx","../src/plugins/Table/components/Table.tsx","../src/plugins/Table/insertTableFragment.ts","../src/plugins/Table/onKeyDownTable.ts","../src/constants/Schema.ts","../src/plugins/Tracking/utils.ts","../src/plugins/Tracking/createTrackingPlugin.ts","../src/plugins/Table/tableTracking.ts","../src/plugins/Table/createTablePlugin.ts","../src/plugins/Table/components/ToolbarButton.tsx","../src/plugins/Text/createTextPlugin.ts","../src/plugins/TrailingParagraph/index.ts","../src/plugins/Voids/createVoidsPlugin.ts","../src/plugins/index.ts","../src/helpers/sanitizeIncomingSlateDoc.ts","../src/prepareDocument.ts","../src/RichTextEditor.styles.ts","../src/Toolbar/components/EmbeddedEntityDropdownButton.tsx","../src/Toolbar/components/EmbedEntityWidget.tsx","../src/Toolbar/index.tsx","../src/Toolbar/components/StickyToolbarWrapper.tsx","../src/useOnValueChanged.ts","../src/RichTextEditor.tsx","../src/dialogs/HypelinkDialog/HyperlinkDialog.jsx","../src/dialogs/openRichTextDialog.tsx","../src/dialogs/renderRichTextDialog.tsx"],"sourcesContent":["import { createContext, useContext } from 'react';\n\nimport { FieldExtensionSDK } from '@contentful/app-sdk';\nimport { usePlateEditorRef, usePlateEditorState } from '@udecode/plate-core';\n\nimport { RichTextEditor } from './types';\n\nexport function getContentfulEditorId(sdk: FieldExtensionSDK) {\n  const { entry, field } = sdk;\n  const sys = entry.getSys();\n\n  return `rich-text-editor-${sys.id}-${field.id}-${field.locale}`;\n}\n\nexport const editorContext = createContext('');\n\nexport const ContentfulEditorIdProvider = editorContext.Provider;\n\nexport function useContentfulEditorId(id?: string) {\n  const contextId = useContext(editorContext);\n\n  if (id) {\n    return id;\n  }\n\n  if (!contextId) {\n    throw new Error(\n      'could not find editor id. Please ensure the component is wrapped in <ContentfulEditorIdProvider> '\n    );\n  }\n\n  return contextId;\n}\n\n// This hook re-renders when the value changes\n// Use case: Toolbar icons, for example\nexport function useContentfulEditor(id?: string) {\n  const editorId = useContentfulEditorId(id);\n  const editor = usePlateEditorState<RichTextEditor>(editorId);\n\n  return editor;\n}\n\n// This doesn't re-render when the value changes\nexport function useContentfulEditorRef(id?: string) {\n  const editorId = useContentfulEditorId(id);\n  const editor = usePlateEditorRef<RichTextEditor>(editorId);\n\n  return editor;\n}\n","import {\n  createSoftBreakPlugin as createDefaultSoftBreakPlugin,\n  SoftBreakRule,\n} from '@udecode/plate-break';\n\nimport { RichTextPlugin } from '../../types';\n\nexport const createSoftBreakPlugin = (): RichTextPlugin =>\n  createDefaultSoftBreakPlugin({\n    then: (editor) => {\n      const rules: SoftBreakRule[] = editor.plugins.flatMap((p) => {\n        return (p as RichTextPlugin).softBreak || [];\n      });\n\n      return {\n        options: { rules },\n      };\n    },\n  });\n","import {\n  createExitBreakPlugin as createDefaultExitBreakPlugin,\n  ExitBreakRule,\n} from '@udecode/plate-break';\n\nimport { RichTextPlugin } from '../../types';\n\nexport const createExitBreakPlugin = (): RichTextPlugin =>\n  createDefaultExitBreakPlugin({\n    options: {\n      rules: [],\n    },\n    then: (editor) => {\n      const rules: ExitBreakRule[] = editor.plugins.flatMap((p) => {\n        return (p as RichTextPlugin).exitBreak || [];\n      });\n\n      return {\n        options: { rules },\n      };\n    },\n  });\n","import { BLOCKS } from '@contentful/rich-text-types';\nimport {\n  createResetNodePlugin as createDefaultResetNodePlugin,\n  ResetNodePluginRule,\n} from '@udecode/plate-reset-node';\n\nimport { RichTextPlugin } from '../../types';\n\nexport const createResetNodePlugin = (): RichTextPlugin =>\n  createDefaultResetNodePlugin({\n    options: {\n      rules: [],\n    },\n    then: (editor) => {\n      const rules: ResetNodePluginRule[] = editor.plugins.flatMap((p) => {\n        return (p as RichTextPlugin).resetNode || [];\n      });\n\n      // set defaultType to Paragraph if not set\n      for (const rule of rules) {\n        if (!rule.defaultType) {\n          rule.defaultType = BLOCKS.PARAGRAPH;\n        }\n      }\n\n      return {\n        options: { rules },\n      };\n    },\n  });\n","import { BLOCKS, INLINES } from '@contentful/rich-text-types';\nimport { getNodes } from '@udecode/plate-core';\n\nimport { RichTextPlugin } from '../../types';\n\nexport function createDragAndDropPlugin(): RichTextPlugin {\n  const DRAGGABLE_TYPES: string[] = [\n    BLOCKS.EMBEDDED_ENTRY,\n    BLOCKS.EMBEDDED_ASSET,\n    BLOCKS.HR,\n    INLINES.EMBEDDED_ENTRY,\n  ];\n\n  /**\n   * HTML node names where dropping should be allowed\n   * Usually for elements where `Transforms.removeNodes` is needed\n   * TODO: looking up for html nodes is not the best solution and it won't scale but it works fine for our current cases/elements\n   */\n  const ON_DROP_ALLOWED_TYPES = {\n    TABLE: [INLINES.EMBEDDED_ENTRY],\n  };\n\n  return {\n    key: 'DragAndDropPlugin',\n    handlers: {\n      // If true, the next handlers will be skipped.\n      onDrop: (editor) => (event) => {\n        const [draggingBlock] = Array.from(\n          getNodes(editor, {\n            match: (node) => DRAGGABLE_TYPES.includes(node?.type),\n          })\n        );\n        if (!draggingBlock) return false;\n\n        const [draggingNode] = draggingBlock;\n\n        if (!event.nativeEvent.target) return false;\n\n        // TODO: looking up for html nodes is not the best solution and it won't scale, we need to find a way to know the dropping target slate element\n        const dropDisallowed = getParents(event.nativeEvent.target as Node).some((node) => {\n          return ON_DROP_ALLOWED_TYPES[node.nodeName]\n            ? !ON_DROP_ALLOWED_TYPES[node.nodeName]?.includes(draggingNode.type)\n            : false;\n        });\n\n        if (!dropDisallowed) {\n          // Move the drop event to a new undo batch mitigating the bug where undo not only moves it back,\n          // but also undoes a previous action: https://github.com/ianstormtaylor/slate/issues/4694\n          editor.history.undos.push([]);\n        }\n\n        return dropDisallowed;\n      },\n    },\n  };\n}\n\nfunction getParents(el: Node): Node[] {\n  const parents: Node[] = [];\n\n  parents.push(el);\n  while (el.parentNode) {\n    parents.unshift(el.parentNode);\n    el = el.parentNode;\n  }\n\n  return parents;\n}\n","export const IS_SAFARI =\n  typeof navigator !== 'undefined' && /Version\\/[\\d.]+.*Safari/.test(navigator.userAgent);\n\nexport const IS_CHROME = /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9.]+)(:?\\s|$)/.test(\n  navigator.userAgent\n);\n","import { Link } from '@contentful/field-editor-reference/dist/types';\nimport { BLOCKS, INLINES } from '@contentful/rich-text-types';\nimport {\n  EditorNodesOptions,\n  getText,\n  PlateEditor,\n  toggleNodeType,\n  ToggleNodeTypeOptions,\n} from '@udecode/plate-core';\nimport { Text, Editor, Element, Transforms, Path, Range, Node } from 'slate';\nimport { ReactEditor } from 'slate-react';\n\nimport { CustomElement, RichTextEditor } from '../types';\nimport { IS_SAFARI } from './environment';\n\nexport const LINK_TYPES: INLINES[] = [\n  INLINES.HYPERLINK,\n  INLINES.ENTRY_HYPERLINK,\n  INLINES.ASSET_HYPERLINK,\n];\n\nconst LIST_TYPES: BLOCKS[] = [BLOCKS.OL_LIST, BLOCKS.UL_LIST];\n\nexport function isBlockSelected(editor: PlateEditor, type: string): boolean {\n  const [match] = Array.from(\n    Editor.nodes(editor, {\n      match: (node) => Element.isElement(node) && (node as CustomElement).type === type,\n    })\n  );\n  return !!match;\n}\n\nexport function isRootLevel(path: Path): boolean {\n  return path.length === 1;\n}\n\ntype NodeEntry = [CustomElement, Path];\ntype NodeType = BLOCKS | INLINES;\nexport function getNodeEntryFromSelection(\n  editor: RichTextEditor,\n  nodeTypeOrTypes: NodeType | NodeType[],\n  path?: Path\n): NodeEntry | [] {\n  path = path ?? editor.selection?.focus.path;\n  if (!path) return [];\n  const nodeTypes = Array.isArray(nodeTypeOrTypes) ? nodeTypeOrTypes : [nodeTypeOrTypes];\n  for (let i = 0; i < path.length; i++) {\n    const nodeEntry = Editor.node(editor, path.slice(0, i + 1)) as NodeEntry;\n    if (nodeTypes.includes(nodeEntry[0].type as NodeType)) return nodeEntry;\n  }\n  return [];\n}\n\nexport function isNodeTypeSelected(editor: RichTextEditor, nodeType: BLOCKS | INLINES): boolean {\n  if (!editor) return false;\n  const [node] = getNodeEntryFromSelection(editor, nodeType);\n  return !!node;\n}\n\nexport function moveToTheNextLine(editor: RichTextEditor) {\n  Transforms.move(editor, { distance: 1, unit: 'line' });\n}\n\nexport function moveToTheNextChar(editor: RichTextEditor) {\n  Transforms.move(editor, { distance: 1, unit: 'offset' });\n}\n\nexport function insertEmptyParagraph(editor: RichTextEditor, options?) {\n  const emptyParagraph: CustomElement = {\n    type: BLOCKS.PARAGRAPH,\n    children: [{ text: '' }],\n    data: {},\n    isVoid: false,\n  };\n  Transforms.insertNodes(editor, emptyParagraph, options);\n}\n\nexport function getElementFromCurrentSelection(editor: RichTextEditor) {\n  if (!editor.selection) return [];\n\n  return Array.from(\n    Editor.nodes(editor, {\n      /**\n       * editor.select is a Range, which includes anchor and focus, the beginning and the end of a selection\n       * when using only editor.selection.focus, we might get only the end of the selection, or where the text cursor is\n       * and in some cases getting the next element instead of the one we want\n       **/\n      at: editor.selection,\n      match: (node) => Element.isElement(node),\n    })\n  ).flat();\n}\n\nexport function isList(editor?: RichTextEditor) {\n  if (!editor) {\n    return false;\n  }\n\n  const element = getElementFromCurrentSelection(editor);\n\n  return element.some(\n    (element) =>\n      Element.isElement(element) && LIST_TYPES.includes((element as CustomElement).type as BLOCKS)\n  );\n}\n\nexport function getTableSize(\n  table: CustomElement\n): Record<'numRows' | 'numColumns', number> | null {\n  const numRows = table.children.length;\n  if (!numRows) return null;\n  const [firstRow] = table.children;\n  const numColumns = (firstRow as CustomElement).children?.length;\n  return { numRows, numColumns };\n}\n\ninterface InsertLinkOptions {\n  text: string;\n  type: INLINES.HYPERLINK | INLINES.ENTRY_HYPERLINK | INLINES.ASSET_HYPERLINK;\n  url?: string;\n  target?: Link;\n  path?: Path;\n}\n\n// TODO: move to hyperlink plugin\nexport function insertLink(editor, options: InsertLinkOptions) {\n  if (editor.selection) {\n    wrapLink(editor, options);\n  }\n}\n\n// TODO: move to hyperlink plugin\nexport function isLinkActive(editor?: RichTextEditor) {\n  if (!editor) {\n    return false;\n  }\n\n  const [link] = Array.from(\n    Editor.nodes(editor, {\n      match: (node) =>\n        !Editor.isEditor(node) &&\n        Element.isElement(node) &&\n        LINK_TYPES.includes((node as CustomElement).type as INLINES),\n    })\n  );\n  return !!link;\n}\n\n// TODO: move to hyperlink plugin\nexport function unwrapLink(editor) {\n  Transforms.unwrapNodes(editor, {\n    match: (node) =>\n      !Editor.isEditor(node) &&\n      Element.isElement(node) &&\n      LINK_TYPES.includes((node as CustomElement).type as INLINES),\n  });\n}\n\n// TODO: move to hyperlink plugin\nexport function wrapLink(editor, { text, url, target, type, path }: InsertLinkOptions) {\n  if (isLinkActive(editor) && !path) {\n    unwrapLink(editor);\n  }\n\n  const { selection } = editor;\n  const isCollapsed = selection && Range.isCollapsed(selection);\n  const link = {\n    type,\n    data: {},\n    children: isCollapsed ? [{ text }] : [],\n  };\n\n  if (url) {\n    link.data = { uri: url };\n  }\n\n  if (target) {\n    link.data = { target };\n  }\n\n  // TODO: always set the selection to the end of the inserted link\n  if (path) {\n    Transforms.setNodes(editor, link, { at: path });\n    Transforms.insertText(editor, text, { at: path });\n    Transforms.select(editor, path);\n  } else if (isCollapsed) {\n    Transforms.insertNodes(editor, link);\n  } else {\n    Transforms.wrapNodes(editor, link, { split: true });\n    Transforms.delete(editor);\n    Transforms.insertText(editor, text);\n    Transforms.collapse(editor, { edge: 'end' });\n  }\n}\n\nexport function getAncestorPathFromSelection(editor: RichTextEditor) {\n  if (!editor.selection) return undefined;\n\n  return Path.levels(editor.selection.focus.path).find((level) => level.length === 1);\n}\n\nexport const isAtEndOfTextSelection = (editor: RichTextEditor) =>\n  editor.selection?.focus.offset === getText(editor, editor.selection?.focus.path).length;\n\n/**\n * This traversal strategy is unfortunately necessary because Slate doesn't\n * expose something like Node.next(editor).\n */\nexport function getNextNode(editor: RichTextEditor): CustomElement | null {\n  if (!editor.selection) {\n    return null;\n  }\n  const descendants = Node.descendants(editor, { from: editor.selection.focus.path });\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const { done, value } = descendants.next();\n    if (done) {\n      return null;\n    }\n    const [node, path] = value as NodeEntry;\n    if (Path.isCommon(path, editor.selection.focus.path)) {\n      continue;\n    }\n    return node as CustomElement;\n  }\n}\n\nexport const INLINE_TYPES = Object.values(INLINES) as string[];\n\nexport const isInlineOrText = (node: Node) => {\n  // either text or inline elements\n  return Text.isText(node) || (Element.isElement(node) && INLINE_TYPES.includes(node.type));\n};\n\nexport const focus = (editor: RichTextEditor) => {\n  const x = window.scrollX;\n  const y = window.scrollY;\n\n  ReactEditor.focus(editor);\n\n  // Safari has issues with `editor.focus({ preventScroll: true })`, it ignores the option `preventScroll`\n  if (IS_SAFARI) {\n    setTimeout(function () {\n      window.scrollTo(x, y); // restore position\n    }, 0);\n  }\n};\n\nexport function toggleElement(\n  editor: RichTextEditor,\n  options: ToggleNodeTypeOptions,\n  editorOptions?: Omit<EditorNodesOptions, 'match'>\n) {\n  toggleNodeType(editor, options, editorOptions);\n\n  // We must reset `data` from one element to another\n  Transforms.setNodes(editor, { data: {} });\n}\n","import React, { ComponentProps } from 'react';\n\nimport { useContentfulEditorRef } from '../ContentfulEditorProvider';\n\ntype WithEntityFetchProps = {\n  onEntityFetchComplete: VoidFunction;\n} & JSX.IntrinsicAttributes;\n\nexport function withLinkTracking(Component: React.ComponentType<WithEntityFetchProps>) {\n  return function ComponentWithTracking(props: ComponentProps<typeof Component>) {\n    const editor = useContentfulEditorRef();\n    const onEntityFetchComplete = React.useCallback(\n      () => editor.tracking.onViewportAction('linkRendered'),\n      [editor]\n    );\n\n    return <Component {...props} onEntityFetchComplete={onEntityFetchComplete} />;\n  };\n}\n","import * as React from 'react';\n\nimport { FieldExtensionSDK } from '@contentful/app-sdk';\nimport constate from 'constate';\n\ninterface SdkProviderProps {\n  sdk: FieldExtensionSDK;\n}\n\nfunction useSdk({ sdk }: SdkProviderProps) {\n  const sdkMemo = React.useMemo<FieldExtensionSDK>(() => sdk, []); // eslint-disable-line\n\n  return sdkMemo;\n}\n\nexport const [SdkProvider, useSdkContext] = constate(useSdk);\n","import { useEffect, useState } from 'react';\n\nimport { Entry, Asset } from '@contentful/app-sdk';\nimport { useEntities } from '@contentful/field-editor-reference';\nimport areEqual from 'fast-deep-equal';\n\ninterface FetchedEntityProps {\n  type: 'Entry' | 'Asset';\n  id: string;\n  onEntityFetchComplete?: VoidFunction;\n}\n\nexport function useFetchedEntity({ type, id, onEntityFetchComplete }: FetchedEntityProps) {\n  const { entries, assets, getOrLoadEntry, getOrLoadAsset } = useEntities();\n\n  const store = type === 'Entry' ? entries : assets;\n  const [entity, setEntity] = useState<Entry | Asset | 'failed' | undefined>(store[id]);\n\n  // Deep compare the entity value to keep re-rendering to minimal\n  useEffect(() => {\n    const newValue = store[id];\n\n    if (!areEqual(entity, newValue)) {\n      setEntity(newValue);\n    }\n  }, [store, entity, id]);\n\n  // Fetch the entity if needed\n  useEffect(() => {\n    (type === 'Entry' ? getOrLoadEntry : getOrLoadAsset)(id);\n\n    // \"getOrLoadEntry\" and \"getOrLoadAsset\" instances change with every\n    // entity store update causing page lag on initial load\n    // TODO: consider rewriting useEntities() hook to avoid that happening in\n    // first place.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [type, id]);\n\n  useEffect(() => {\n    if (entity) {\n      onEntityFetchComplete?.();\n    }\n  }, [onEntityFetchComplete, entity]);\n\n  return entity;\n}\n","import * as React from 'react';\n\nimport { Asset, FieldExtensionSDK, ScheduledAction } from '@contentful/app-sdk';\nimport { AssetCard } from '@contentful/f36-components';\nimport {\n  useEntities,\n  MissingEntityCard,\n  WrappedAssetCard,\n} from '@contentful/field-editor-reference';\nimport areEqual from 'fast-deep-equal';\n\nimport { useFetchedEntity } from './useFetchedEntity';\n\ninterface InternalAssetCardProps {\n  asset?: Asset | 'failed';\n  isDisabled: boolean;\n  isSelected: boolean;\n  locale: string;\n  onEdit?: () => void;\n  onRemove?: () => unknown;\n  sdk: FieldExtensionSDK;\n  loadEntityScheduledActions: (entityType: string, entityId: string) => Promise<ScheduledAction[]>;\n}\n\nconst InternalAssetCard = React.memo((props: InternalAssetCardProps) => {\n  if (props.asset === undefined) {\n    return <AssetCard size=\"default\" isLoading />;\n  }\n\n  if (props.asset === 'failed') {\n    return (\n      <MissingEntityCard\n        entityType=\"Asset\"\n        isDisabled={props.isDisabled}\n        onRemove={props.onRemove}\n      />\n    );\n  }\n\n  return (\n    <WrappedAssetCard\n      getEntityScheduledActions={props.loadEntityScheduledActions}\n      size=\"small\"\n      isSelected={props.isSelected}\n      isDisabled={props.isDisabled}\n      localeCode={props.locale}\n      defaultLocaleCode={props.sdk.locales.default}\n      asset={props.asset}\n      onEdit={props.onEdit}\n      onRemove={props.isDisabled ? undefined : props.onRemove}\n      isClickable={false}\n    />\n  );\n}, areEqual);\n\nInternalAssetCard.displayName = 'InternalAssetCard';\n\ninterface FetchingWrappedAssetCardProps {\n  assetId: string;\n  isDisabled: boolean;\n  isSelected: boolean;\n  locale: string;\n  onEdit?: () => void;\n  onRemove?: () => unknown;\n  sdk: FieldExtensionSDK;\n  onEntityFetchComplete?: VoidFunction;\n}\n\nexport function FetchingWrappedAssetCard(props: FetchingWrappedAssetCardProps) {\n  const { onEntityFetchComplete, assetId } = props;\n  const { loadEntityScheduledActions } = useEntities();\n\n  const asset = useFetchedEntity({\n    type: 'Asset',\n    id: assetId,\n    onEntityFetchComplete,\n  });\n\n  return (\n    <InternalAssetCard\n      asset={asset as Asset | 'failed' | undefined}\n      sdk={props.sdk}\n      isDisabled={props.isDisabled}\n      isSelected={props.isSelected}\n      loadEntityScheduledActions={loadEntityScheduledActions}\n      locale={props.locale}\n      onEdit={props.onEdit}\n      onRemove={props.onRemove}\n    />\n  );\n}\n","import * as React from 'react';\n\nimport { FieldExtensionSDK } from '@contentful/app-sdk';\nimport { ScheduledAction, Entry } from '@contentful/app-sdk';\nimport { EntryCard } from '@contentful/f36-components';\nimport {\n  useEntities,\n  MissingEntityCard,\n  WrappedEntryCard,\n} from '@contentful/field-editor-reference';\nimport areEqual from 'fast-deep-equal';\n\nimport { useFetchedEntity } from './useFetchedEntity';\n\ninterface InternalEntryCard {\n  isDisabled: boolean;\n  isSelected: boolean;\n  locale: string;\n  sdk: FieldExtensionSDK;\n  loadEntityScheduledActions: (entityType: string, entityId: string) => Promise<ScheduledAction[]>;\n  entry?: Entry | 'failed';\n  onEdit?: VoidFunction;\n  onRemove?: VoidFunction;\n}\n\nconst InternalEntryCard = React.memo((props: InternalEntryCard) => {\n  const { entry, sdk, loadEntityScheduledActions } = props;\n\n  if (entry === undefined) {\n    return <EntryCard isLoading />;\n  }\n\n  if (entry === 'failed') {\n    return (\n      <MissingEntityCard\n        entityType=\"Entry\"\n        isDisabled={props.isDisabled}\n        onRemove={props.onRemove}\n      />\n    );\n  }\n\n  const contentType = sdk.space\n    .getCachedContentTypes()\n    .find((contentType) => contentType.sys.id === entry.sys.contentType.sys.id);\n\n  return (\n    <WrappedEntryCard\n      size=\"default\"\n      getAsset={props.sdk.space.getAsset}\n      getEntityScheduledActions={loadEntityScheduledActions}\n      isSelected={props.isSelected}\n      isDisabled={props.isDisabled}\n      localeCode={props.locale}\n      defaultLocaleCode={props.sdk.locales.default}\n      contentType={contentType}\n      entry={entry}\n      onEdit={props.onEdit}\n      onRemove={props.isDisabled ? undefined : props.onRemove}\n      isClickable={false}\n    />\n  );\n}, areEqual);\n\nInternalEntryCard.displayName = 'ReferenceCard';\n\ninterface FetchingWrappedEntryCardProps {\n  entryId: string;\n  isDisabled: boolean;\n  isSelected: boolean;\n  locale: string;\n  sdk: FieldExtensionSDK;\n  onEntityFetchComplete?: VoidFunction;\n  onEdit?: VoidFunction;\n  onRemove?: VoidFunction;\n}\n\nexport const FetchingWrappedEntryCard = (props: FetchingWrappedEntryCardProps) => {\n  const { entryId, onEntityFetchComplete } = props;\n  const { loadEntityScheduledActions } = useEntities();\n\n  const entry = useFetchedEntity({\n    type: 'Entry',\n    id: entryId,\n    onEntityFetchComplete,\n  });\n\n  return (\n    <InternalEntryCard\n      entry={entry}\n      sdk={props.sdk}\n      locale={props.locale}\n      isDisabled={props.isDisabled}\n      isSelected={props.isSelected}\n      onEdit={props.onEdit}\n      onRemove={props.onRemove}\n      loadEntityScheduledActions={loadEntityScheduledActions}\n    />\n  );\n};\n","import React from 'react';\n\nimport { css } from 'emotion';\nimport { Transforms } from 'slate';\nimport { ReactEditor, useSelected, useReadOnly } from 'slate-react';\n\nimport { useContentfulEditor } from '../../ContentfulEditorProvider';\nimport { IS_CHROME } from '../../helpers/environment';\nimport { useSdkContext } from '../../SdkProvider';\nimport { CustomRenderElementProps } from '../../types';\nimport { FetchingWrappedAssetCard } from '../shared/FetchingWrappedAssetCard';\nimport { FetchingWrappedEntryCard } from '../shared/FetchingWrappedEntryCard';\n\nconst styles = {\n  root: css({\n    marginBottom: '1.25rem !important',\n    display: 'block',\n  }),\n  container: css({\n    // The next 2 properties ensure Entity card won't be aligned above\n    // a list item marker (i.e. bullet)\n    display: 'inline-block',\n    verticalAlign: 'text-top',\n    width: '100%',\n  }),\n};\n\ntype LinkedEntityBlockProps = CustomRenderElementProps<{\n  target: {\n    sys: {\n      id: string;\n      linkType: 'Entry' | 'Asset';\n      type: 'Link';\n    };\n  };\n}> & {\n  onEntityFetchComplete: VoidFunction;\n};\n\nexport function LinkedEntityBlock(props: LinkedEntityBlockProps) {\n  const { attributes, children, element, onEntityFetchComplete } = props;\n  const isSelected = useSelected();\n  const editor = useContentfulEditor();\n  const sdk = useSdkContext();\n  const isDisabled = useReadOnly();\n  const { id: entityId, linkType: entityType } = element.data.target.sys;\n\n  const handleEditClick = React.useCallback(() => {\n    const openEntity = entityType === 'Asset' ? sdk.navigator.openAsset : sdk.navigator.openEntry;\n    return openEntity(entityId, { slideIn: true });\n  }, [sdk, entityId, entityType]);\n\n  const handleRemoveClick = React.useCallback(() => {\n    if (!editor) return;\n    const pathToElement = ReactEditor.findPath(editor, element);\n    Transforms.removeNodes(editor, { at: pathToElement });\n  }, [editor, element]);\n\n  return (\n    <div\n      {...attributes}\n      className={styles.root}\n      data-entity-type={entityType}\n      data-entity-id={entityId}\n      // COMPAT: This makes copy & paste work for Firefox\n      contentEditable={IS_CHROME ? undefined : false}\n      draggable={IS_CHROME ? true : undefined}>\n      <div\n        // COMPAT: This makes copy & paste work for Chromium/Blink browsers and Safari\n        contentEditable={IS_CHROME ? false : undefined}\n        draggable={IS_CHROME ? true : undefined}\n        className={styles.container}>\n        {entityType === 'Entry' && (\n          <FetchingWrappedEntryCard\n            sdk={sdk}\n            entryId={entityId}\n            locale={sdk.field.locale}\n            isDisabled={isDisabled}\n            isSelected={isSelected}\n            onRemove={handleRemoveClick}\n            onEdit={handleEditClick}\n            onEntityFetchComplete={onEntityFetchComplete}\n          />\n        )}\n        {entityType === 'Asset' && (\n          <FetchingWrappedAssetCard\n            sdk={sdk}\n            assetId={entityId}\n            locale={sdk.field.locale}\n            isDisabled={isDisabled}\n            isSelected={isSelected}\n            onRemove={handleRemoveClick}\n            onEdit={handleEditClick}\n            onEntityFetchComplete={onEntityFetchComplete}\n          />\n        )}\n      </div>\n      {children}\n    </div>\n  );\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/* eslint-disable you-dont-need-lodash-underscore/find */\nimport find from 'lodash/find';\nimport flow from 'lodash/flow';\nimport get from 'lodash/get';\n\n/**\n * Given a field object and a rich text node type, return a list of valid\n * content type IDs associated with the node type, based on that node type's\n * `linkContentType` validation.\n *\n * If there is no such validation or the validation is empty, return an empty\n * array.\n *\n * The navigation here is explained by the `nodes` validation having signature:\n * { nodes: { [nodeType]: validationObject[] } }\n *\n * We defensively navigate through this object because\n * 1) the field may not have a `validations` array,\n * 2) the `validations` array may be empty,\n * 3) the `validations` array may not have a `nodes` validation,\n * 4) the `nodes` validation may not validate the `nodeType`, and\n * 5) the `nodeType` validations may not have a `linkContentType` validation.\n *\n * Note that passing an empty array will result in all possible content types\n * being whitelisted.\n *\n * @param {object} field\n * @param {string} nodeType\n * @returns {string[]}\n */\nexport default function getLinkedContentTypeIdsForNodeType(field, nodeType): string[] {\n  return flow(\n    (v) => find(v, 'nodes'),\n    (v) => get(v, ['nodes', nodeType]),\n    (v) => find(v, 'linkContentType'),\n    (v) => get(v, 'linkContentType', [])\n  )(field.validations);\n}\n","import getLinkedContentTypeIdsForNodeType from './getLinkedContentTypeIdsForNodeType';\n\n/**\n * Returns a config for the entity selector based on a given rich text field and a\n * rich text node type that the entity should be picked for. Takes the field\n * validations for the given node type into account.\n *\n * @param {object} field\n * @param {string} nodeType\n * @returns {object}\n */\nexport default function newEntitySelectorConfigFromRichTextField(field, nodeType) {\n  return {\n    entityType: getEntityTypeFromRichTextNode(nodeType),\n    locale: field.locale || null, // Will fall back to default locale.\n    contentTypes: getLinkedContentTypeIdsForNodeType(field, nodeType),\n  };\n}\n\nfunction getEntityTypeFromRichTextNode(nodeType): 'Entry' | 'Asset' | never {\n  const words = nodeType.split('-');\n  if (words.indexOf('entry') !== -1) {\n    return 'Entry';\n  }\n  if (words.indexOf('asset') !== -1) {\n    return 'Asset';\n  }\n  throw new Error(`RichText node type \\`${nodeType}\\` has no associated \\`entityType\\``);\n}\n","import { BLOCKS, TEXT_CONTAINERS } from '@contentful/rich-text-types';\nimport { getText } from '@udecode/plate-core';\nimport { Editor, Element, Path, Transforms } from 'slate';\nimport { RichTextEditor } from 'types';\n\nimport { focus, insertEmptyParagraph, moveToTheNextChar } from '../../helpers/editor';\nimport newEntitySelectorConfigFromRichTextField from '../../helpers/newEntitySelectorConfigFromRichTextField';\nimport { TrackingPluginActions } from '../../plugins/Tracking';\n\nexport async function selectEntityAndInsert(\n  nodeType,\n  sdk,\n  editor,\n  logAction: TrackingPluginActions['onToolbarAction'] | TrackingPluginActions['onShortcutAction']\n) {\n  logAction('openCreateEmbedDialog', { nodeType });\n\n  const { field, dialogs } = sdk;\n  const baseConfig = newEntitySelectorConfigFromRichTextField(field, nodeType);\n  const selectEntity =\n    baseConfig.entityType === 'Asset' ? dialogs.selectSingleAsset : dialogs.selectSingleEntry;\n  const config = { ...baseConfig, withCreate: true };\n\n  const { selection } = editor;\n  const entity = await selectEntity(config);\n  if (!entity) {\n    logAction('cancelCreateEmbedDialog', { nodeType });\n    return;\n  }\n\n  Transforms.select(editor, selection);\n  insertBlock(editor, nodeType, entity);\n  ensureFollowingParagraph(editor);\n  logAction('insert', { nodeType });\n}\n\nfunction ensureFollowingParagraph(editor: RichTextEditor) {\n  /* \n     If the new block isn't followed by a sibling paragraph we insert a new empty one\n   */\n  const next = Editor.next(editor);\n  if (!next) {\n    return insertEmptyParagraph(editor);\n  }\n\n  const parent = Editor.above(editor, {\n    voids: false,\n    match: (e) =>\n      !Element.isElement(e) ||\n      ![BLOCKS.EMBEDDED_ASSET, BLOCKS.EMBEDDED_ENTRY].includes(e.type as BLOCKS),\n  });\n\n  if (Editor.isEditor(parent)) {\n    // at level 0, a following paragraph is handled by the tralingParagraph plugin\n    moveToTheNextChar(editor);\n    return;\n  }\n\n  const paragraph = Editor.above(editor, {\n    at: next[1],\n    match: (e) => Element.isElement(e) && TEXT_CONTAINERS.includes(e.type as BLOCKS),\n  });\n\n  if (!paragraph || !parent || !Path.isChild(paragraph[1], parent[1])) {\n    return insertEmptyParagraph(editor);\n  }\n\n  moveToTheNextChar(editor);\n}\nconst createNode = (nodeType, entity) => ({\n  type: nodeType,\n  data: {\n    target: {\n      sys: {\n        id: entity.sys.id,\n        type: 'Link',\n        linkType: entity.sys.type,\n      },\n    },\n  },\n  children: [{ text: '' }],\n  isVoid: true,\n});\n\n// TODO: DRY up copied code from HR\nexport function insertBlock(editor, nodeType, entity) {\n  if (!editor?.selection) return;\n\n  const linkedEntityBlock = createNode(nodeType, entity);\n\n  const hasText = editor.selection && !!getText(editor, editor.selection.focus.path);\n\n  if (hasText) {\n    Transforms.insertNodes(editor, linkedEntityBlock);\n  } else {\n    Transforms.setNodes(editor, linkedEntityBlock);\n  }\n\n  focus(editor);\n}\n","import React from 'react';\n\nimport { FieldExtensionSDK } from '@contentful/app-sdk';\nimport { Flex, Icon, Menu } from '@contentful/f36-components';\nimport { AssetIcon, EmbeddedEntryBlockIcon } from '@contentful/f36-icons';\nimport { css } from 'emotion';\n\nimport { useContentfulEditor } from '../../ContentfulEditorProvider';\nimport { useSdkContext } from '../../SdkProvider';\nimport { selectEntityAndInsert } from './Util';\n\nexport const styles = {\n  icon: css({\n    marginRight: '10px',\n  }),\n};\n\ninterface EmbeddedEntityBlockToolbarIconProps {\n  isDisabled: boolean;\n  nodeType: string;\n  onClose: () => void;\n}\n\nexport function EmbeddedEntityBlockToolbarIcon({\n  isDisabled,\n  nodeType,\n  onClose,\n}: EmbeddedEntityBlockToolbarIconProps) {\n  const editor = useContentfulEditor();\n  const sdk: FieldExtensionSDK = useSdkContext();\n\n  const handleClick = async (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n\n    onClose();\n    await selectEntityAndInsert(nodeType, sdk, editor, editor.tracking.onToolbarAction);\n  };\n\n  const type = getEntityTypeFromNodeType(nodeType);\n  const baseClass = `rich-text__${nodeType}`;\n  return (\n    <Menu.Item\n      disabled={isDisabled}\n      className={`${baseClass}-list-item`}\n      onClick={handleClick}\n      testId={`toolbar-toggle-${nodeType}`}>\n      <Flex alignItems=\"center\" flexDirection=\"row\">\n        <Icon\n          as={type === 'Asset' ? AssetIcon : EmbeddedEntryBlockIcon}\n          className={`rich-text__embedded-entry-list-icon ${styles.icon}`}\n          variant=\"secondary\"\n        />\n        <span>{type}</span>\n      </Flex>\n    </Menu.Item>\n  );\n}\n\nfunction getEntityTypeFromNodeType(nodeType: string): string | never {\n  const words = nodeType.toLowerCase().split('-');\n  if (words.includes('entry')) {\n    return 'Entry';\n  }\n  if (words.includes('asset')) {\n    return 'Asset';\n  }\n  throw new Error(`Node type \\`${nodeType}\\` has no associated \\`entityType\\``);\n}\n","import { FieldExtensionSDK } from '@contentful/app-sdk';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { KeyboardHandler, HotkeyPlugin } from '@udecode/plate-core';\nimport isHotkey from 'is-hotkey';\nimport { Transforms } from 'slate';\n\nimport { getNodeEntryFromSelection } from '../../helpers/editor';\nimport { RichTextPlugin, CustomElement, RichTextEditor } from '../../types';\nimport { withLinkTracking } from '../links-tracking';\nimport { LinkedEntityBlock } from './LinkedEntityBlock';\nimport { selectEntityAndInsert } from './Util';\n\nexport { EmbeddedEntityBlockToolbarIcon as ToolbarIcon } from './ToolbarIcon';\n\nconst entityTypes = {\n  [BLOCKS.EMBEDDED_ENTRY]: 'Entry',\n  [BLOCKS.EMBEDDED_ASSET]: 'Asset',\n};\n\nfunction getWithEmbeddedEntityEvents(\n  nodeType: BLOCKS.EMBEDDED_ENTRY | BLOCKS.EMBEDDED_ASSET,\n  sdk: FieldExtensionSDK\n): KeyboardHandler<RichTextEditor, HotkeyPlugin> {\n  return (editor, { options: { hotkey } }) =>\n    (event) => {\n      const [, pathToSelectedElement] = getNodeEntryFromSelection(editor, nodeType);\n\n      if (pathToSelectedElement) {\n        const isDelete = event.key === 'Delete';\n        const isBackspace = event.key === 'Backspace';\n\n        if (isDelete || isBackspace) {\n          event.preventDefault();\n          Transforms.removeNodes(editor, { at: pathToSelectedElement });\n        }\n\n        return;\n      }\n\n      if (hotkey && isHotkey(hotkey, event)) {\n        selectEntityAndInsert(nodeType, sdk, editor, editor.tracking.onShortcutAction);\n      }\n    };\n}\n\nconst createEmbeddedEntityPlugin =\n  (nodeType: BLOCKS.EMBEDDED_ENTRY | BLOCKS.EMBEDDED_ASSET, hotkey: string) =>\n  (sdk: FieldExtensionSDK): RichTextPlugin => ({\n    key: nodeType,\n    type: nodeType,\n    isElement: true,\n    isVoid: true,\n    component: withLinkTracking(LinkedEntityBlock),\n    options: { hotkey },\n    handlers: {\n      onKeyDown: getWithEmbeddedEntityEvents(nodeType, sdk),\n    },\n    deserializeHtml: {\n      rules: [\n        {\n          validAttribute: {\n            'data-entity-type': entityTypes[nodeType],\n          },\n        },\n      ],\n      withoutChildren: true,\n      getNode: (el): CustomElement => ({\n        type: nodeType,\n        children: [{ text: '' }],\n        isVoid: true,\n        data: {\n          target: {\n            sys: {\n              id: el.getAttribute('data-entity-id'),\n              linkType: el.getAttribute('data-entity-type'),\n              type: 'Link',\n            },\n          },\n        },\n      }),\n    },\n  });\n\nexport const createEmbeddedEntryBlockPlugin = createEmbeddedEntityPlugin(\n  BLOCKS.EMBEDDED_ENTRY,\n  'mod+shift+e'\n);\nexport const createEmbeddedAssetBlockPlugin = createEmbeddedEntityPlugin(\n  BLOCKS.EMBEDDED_ASSET,\n  'mod+shift+a'\n);\n","import React from 'react';\n\nimport { InlineEntryCard, MenuItem, Text } from '@contentful/f36-components';\nimport { ClockIcon } from '@contentful/f36-icons';\nimport tokens from '@contentful/f36-tokens';\nimport { useEntities, ScheduledIconWithTooltip } from '@contentful/field-editor-reference';\nimport { entityHelpers, FieldExtensionSDK } from '@contentful/field-editor-shared';\nimport { INLINES } from '@contentful/rich-text-types';\nimport { css } from 'emotion';\n\nconst { getEntryTitle, getEntryStatus } = entityHelpers;\n\nconst styles = {\n  scheduledIcon: css({\n    verticalAlign: 'text-bottom',\n    marginRight: tokens.spacing2Xs,\n  }),\n};\n\ninterface FetchingWrappedInlineEntryCardProps {\n  entryId: string;\n  sdk: FieldExtensionSDK;\n  isSelected: boolean;\n  isDisabled: boolean;\n  onEdit: (event: React.MouseEvent<Element, MouseEvent>) => void;\n  onRemove: (event: React.MouseEvent<Element, MouseEvent>) => void;\n  onEntityFetchComplete?: VoidFunction;\n}\n\nexport function FetchingWrappedInlineEntryCard(props: FetchingWrappedInlineEntryCardProps) {\n  const { getOrLoadEntry, loadEntityScheduledActions, entries } = useEntities();\n  const entry = React.useMemo(() => entries[props.entryId], [entries, props.entryId]);\n\n  const allContentTypes = props.sdk.space.getCachedContentTypes();\n  const { onEntityFetchComplete } = props;\n  const contentType = React.useMemo(() => {\n    if (!entry || entry === 'failed' || !allContentTypes) return undefined;\n\n    return allContentTypes.find(\n      (contentType) => contentType.sys.id === entry.sys.contentType.sys.id\n    );\n  }, [allContentTypes, entry]);\n\n  React.useEffect(() => {\n    if (!entry) {\n      return;\n    }\n    onEntityFetchComplete?.();\n  }, [entry, onEntityFetchComplete]);\n\n  const contentTypeName = contentType ? contentType.name : '';\n\n  const title = React.useMemo(\n    () =>\n      getEntryTitle({\n        entry,\n        contentType,\n        localeCode: props.sdk.field.locale,\n        defaultLocaleCode: props.sdk.locales.default,\n        defaultTitle: 'Untitled',\n      }),\n    [entry, contentType, props.sdk.field.locale, props.sdk.locales.default]\n  );\n\n  React.useEffect(() => {\n    if (!props.entryId) return;\n    getOrLoadEntry(props.entryId);\n    // We don't include getOrLoadEntry below because it's part of the constate-derived\n    // useEntities(), not props.\n    // eslint-disable-next-line\n  }, [props.entryId]);\n\n  if (entry === 'failed') {\n    return (\n      <InlineEntryCard\n        title=\"Entry missing or inaccessible\"\n        testId={INLINES.EMBEDDED_ENTRY}\n        isSelected={props.isSelected}\n      />\n    );\n  }\n\n  if (entry === undefined) {\n    return <InlineEntryCard isLoading />;\n  }\n\n  const status = getEntryStatus(entry.sys);\n  if (status === 'deleted') {\n    return (\n      <InlineEntryCard\n        title=\"Entry missing or inaccessible\"\n        testId={INLINES.EMBEDDED_ENTRY}\n        isSelected={props.isSelected}\n        actions={[\n          <MenuItem key=\"remove\" onClick={props.onRemove} testId=\"delete\">\n            Remove\n          </MenuItem>,\n        ]}\n      />\n    );\n  }\n\n  return (\n    <InlineEntryCard\n      testId={INLINES.EMBEDDED_ENTRY}\n      isSelected={props.isSelected}\n      title={`${contentTypeName}: ${title}`}\n      status={status}\n      actions={[\n        <MenuItem key=\"edit\" onClick={props.onEdit}>\n          Edit\n        </MenuItem>,\n        <MenuItem key=\"remove\" onClick={props.onRemove} disabled={props.isDisabled} testId=\"delete\">\n          Remove\n        </MenuItem>,\n      ]}>\n      <ScheduledIconWithTooltip\n        getEntityScheduledActions={loadEntityScheduledActions}\n        entityType=\"Entry\"\n        entityId={entry.sys.id}>\n        <ClockIcon className={styles.scheduledIcon} variant=\"muted\" testId=\"scheduled-icon\" />\n      </ScheduledIconWithTooltip>\n      <Text>{title}</Text>\n    </InlineEntryCard>\n  );\n}\n","import { INLINES } from '@contentful/rich-text-types';\n\nexport function createInlineEntryNode(id: string) {\n  return {\n    type: INLINES.EMBEDDED_ENTRY,\n    children: [{ text: '' }],\n    data: {\n      target: {\n        sys: {\n          id,\n          type: 'Link',\n          linkType: 'Entry',\n        },\n      },\n    },\n  };\n}\n","import * as React from 'react';\n\nimport { Link, FieldExtensionSDK } from '@contentful/app-sdk';\nimport { Menu, Flex } from '@contentful/f36-components';\nimport { EmbeddedEntryInlineIcon } from '@contentful/f36-icons';\nimport tokens from '@contentful/f36-tokens';\nimport { Entry } from '@contentful/field-editor-shared';\nimport { INLINES } from '@contentful/rich-text-types';\nimport { HotkeyPlugin, KeyboardHandler } from '@udecode/plate-core';\nimport { css } from 'emotion';\nimport isHotkey from 'is-hotkey';\nimport { Transforms } from 'slate';\nimport { useSelected, ReactEditor, useReadOnly } from 'slate-react';\n\nimport { useContentfulEditor } from '../../ContentfulEditorProvider';\nimport { focus, moveToTheNextChar } from '../../helpers/editor';\nimport { IS_CHROME } from '../../helpers/environment';\nimport newEntitySelectorConfigFromRichTextField from '../../helpers/newEntitySelectorConfigFromRichTextField';\nimport { TrackingPluginActions } from '../../plugins/Tracking';\nimport { useSdkContext } from '../../SdkProvider';\nimport {\n  RichTextPlugin,\n  CustomElement,\n  CustomRenderElementProps,\n  RichTextEditor,\n} from '../../types';\nimport { withLinkTracking } from '../links-tracking';\nimport { FetchingWrappedInlineEntryCard } from './FetchingWrappedInlineEntryCard';\nimport { createInlineEntryNode } from './Util';\n\nconst styles = {\n  icon: css({\n    marginRight: '10px',\n  }),\n\n  root: css({\n    display: 'inline-block',\n    margin: `0 ${tokens.spacing2Xs}`,\n    fontSize: 'inherit',\n    span: {\n      userSelect: 'none',\n    },\n  }),\n};\n\ntype EmbeddedEntityInlineProps = CustomRenderElementProps<{\n  target: Link;\n}> & {\n  onEntityFetchComplete: VoidFunction;\n};\n\nfunction EmbeddedEntityInline(props: EmbeddedEntityInlineProps) {\n  const editor = useContentfulEditor();\n  const sdk = useSdkContext();\n  const isSelected = useSelected();\n  const { id: entryId } = props.element.data.target.sys;\n  const isDisabled = useReadOnly();\n\n  function handleEditClick() {\n    return sdk.navigator.openEntry(entryId, { slideIn: true });\n  }\n\n  function handleRemoveClick() {\n    if (!editor) return;\n    const pathToElement = ReactEditor.findPath(editor, props.element);\n    Transforms.removeNodes(editor, { at: pathToElement });\n  }\n\n  return (\n    <span\n      {...props.attributes}\n      className={styles.root}\n      data-embedded-entity-inline-id={entryId}\n      // COMPAT: This makes copy & paste work for Firefox\n      contentEditable={IS_CHROME ? undefined : false}\n      draggable={IS_CHROME ? true : undefined}>\n      <span\n        // COMPAT: This makes copy & paste work for Chromium/Blink browsers and Safari\n        contentEditable={IS_CHROME ? false : undefined}\n        draggable={IS_CHROME ? true : undefined}>\n        <FetchingWrappedInlineEntryCard\n          sdk={sdk}\n          entryId={entryId}\n          isSelected={isSelected}\n          isDisabled={isDisabled}\n          onRemove={handleRemoveClick}\n          onEdit={handleEditClick}\n          onEntityFetchComplete={props.onEntityFetchComplete}\n        />\n      </span>\n      {props.children}\n    </span>\n  );\n}\n\ninterface ToolbarEmbeddedEntityInlineButtonProps {\n  onClose: () => void;\n  isDisabled: boolean;\n}\n\nasync function selectEntityAndInsert(\n  editor,\n  sdk: FieldExtensionSDK,\n  logAction: TrackingPluginActions['onShortcutAction'] | TrackingPluginActions['onToolbarAction']\n) {\n  logAction('openCreateEmbedDialog', { nodeType: INLINES.EMBEDDED_ENTRY });\n\n  const config = {\n    ...newEntitySelectorConfigFromRichTextField(sdk.field, INLINES.EMBEDDED_ENTRY),\n    withCreate: true,\n  };\n  const selection = editor.selection;\n\n  const entry = await sdk.dialogs.selectSingleEntry<Entry>(config);\n  focus(editor); // Dialog steals focus from editor, return it.\n\n  if (!entry) {\n    logAction('cancelCreateEmbedDialog', { nodeType: INLINES.EMBEDDED_ENTRY });\n    return;\n  }\n\n  const inlineEntryNode = createInlineEntryNode(entry.sys.id);\n\n  logAction('insert', { nodeType: INLINES.EMBEDDED_ENTRY });\n  // Got to wait until focus is really back on the editor or setSelection() won't work.\n  return new Promise<void>((resolve) => {\n    setTimeout(() => {\n      Transforms.setSelection(editor, selection);\n      Transforms.insertNodes(editor, inlineEntryNode);\n      resolve();\n    }, 0);\n  });\n}\n\nexport function ToolbarEmbeddedEntityInlineButton(props: ToolbarEmbeddedEntityInlineButtonProps) {\n  const editor = useContentfulEditor();\n  const sdk: FieldExtensionSDK = useSdkContext();\n\n  async function handleClick(event) {\n    event.preventDefault();\n\n    if (!editor) return;\n\n    props.onClose();\n\n    await selectEntityAndInsert(editor, sdk, editor.tracking.onToolbarAction);\n    moveToTheNextChar(editor);\n  }\n\n  return (\n    <Menu.Item\n      disabled={props.isDisabled}\n      className=\"rich-text__entry-link-block-button\"\n      testId={`toolbar-toggle-${INLINES.EMBEDDED_ENTRY}`}\n      onClick={handleClick}>\n      <Flex alignItems=\"center\" flexDirection=\"row\">\n        <EmbeddedEntryInlineIcon\n          variant=\"secondary\"\n          className={`rich-text__embedded-entry-list-icon ${styles.icon}`}\n        />\n        <span>Inline entry</span>\n      </Flex>\n    </Menu.Item>\n  );\n}\n\nexport function createEmbeddedEntityInlinePlugin(sdk: FieldExtensionSDK): RichTextPlugin {\n  const htmlAttributeName = 'data-embedded-entity-inline-id';\n\n  return {\n    key: INLINES.EMBEDDED_ENTRY,\n    type: INLINES.EMBEDDED_ENTRY,\n    isElement: true,\n    isInline: true,\n    isVoid: true,\n    component: withLinkTracking(EmbeddedEntityInline),\n    options: {\n      hotkey: 'mod+shift+2',\n    },\n    handlers: {\n      onKeyDown: getWithEmbeddedEntryInlineEvents(sdk),\n    },\n    deserializeHtml: {\n      rules: [\n        {\n          validAttribute: htmlAttributeName,\n        },\n      ],\n      withoutChildren: true,\n      getNode: (el): CustomElement =>\n        createInlineEntryNode(el.getAttribute(htmlAttributeName) as string),\n    },\n  };\n}\n\nfunction getWithEmbeddedEntryInlineEvents(\n  sdk: FieldExtensionSDK\n): KeyboardHandler<RichTextEditor, HotkeyPlugin> {\n  return function withEmbeddedEntryInlineEvents(editor, { options: { hotkey } }) {\n    return function handleEvent(event) {\n      if (!editor) return;\n\n      if (hotkey && isHotkey(hotkey, event)) {\n        selectEntityAndInsert(editor, sdk, editor.tracking.onShortcutAction);\n      }\n    };\n  };\n}\n","/* eslint-disable you-dont-need-lodash-underscore/find */\nimport { FieldExtensionSDK } from '@contentful/app-sdk';\nimport { BLOCKS, INLINES, TOP_LEVEL_BLOCKS } from '@contentful/rich-text-types';\nimport find from 'lodash/find';\nimport flow from 'lodash/flow';\nimport get from 'lodash/get';\n\n// TODO: Move these into separate package (maybe rich-text-types) and share with FE.\nexport const VALIDATIONS = {\n  ENABLED_MARKS: 'enabledMarks',\n  ENABLED_NODE_TYPES: 'enabledNodeTypes',\n};\nexport const DEFAULT_ENABLED_NODE_TYPES = [BLOCKS.DOCUMENT, BLOCKS.PARAGRAPH, 'text'];\n\nexport const VALIDATABLE_NODE_TYPES = ([] as Array<BLOCKS | INLINES>)\n  .concat(TOP_LEVEL_BLOCKS)\n  .filter((type) => type !== BLOCKS.PARAGRAPH)\n  .concat(Object.values(INLINES));\n\n// TODO: Memoize\nconst getRichTextValidation = (field, validationType) =>\n  flow(\n    (v) => find(v, validationType),\n    (v) => get(v, validationType)\n  )(field.validations);\n\nconst isFormattingOptionEnabled = (field, validationType, nodeTypeOrMark) => {\n  const enabledFormattings = getRichTextValidation(field, validationType);\n\n  // TODO: In the future, validations will always be opt-in. In that case\n  // we don't need this step.\n  if (enabledFormattings === undefined) {\n    return true;\n  }\n\n  return DEFAULT_ENABLED_NODE_TYPES.concat(enabledFormattings).includes(nodeTypeOrMark);\n};\n\nexport const isNodeTypeEnabled = (field: FieldExtensionSDK['field'], nodeType): boolean =>\n  isFormattingOptionEnabled(field, VALIDATIONS.ENABLED_NODE_TYPES, nodeType);\n\nexport const isMarkEnabled = (field: FieldExtensionSDK['field'], mark) =>\n  isFormattingOptionEnabled(field, VALIDATIONS.ENABLED_MARKS, mark);\n","import * as React from 'react';\n\nimport { Menu, Button } from '@contentful/f36-components';\nimport { ChevronDownIcon } from '@contentful/f36-icons';\nimport tokens from '@contentful/f36-tokens';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { css, cx } from 'emotion';\n\nimport { useContentfulEditor } from '../../../ContentfulEditorProvider';\nimport {\n  getElementFromCurrentSelection,\n  focus,\n  isBlockSelected,\n  toggleElement,\n} from '../../../helpers/editor';\nimport { isNodeTypeEnabled } from '../../../helpers/validations';\nimport { useSdkContext } from '../../../SdkProvider';\nimport { CustomElement } from '../../../types';\n\nconst styles = {\n  dropdown: {\n    root: css`\n      font-weight: ${tokens.fontWeightDemiBold};\n    `,\n    [BLOCKS.PARAGRAPH]: css`\n      font-size: ${tokens.fontSizeL};\n    `,\n    [BLOCKS.HEADING_1]: css`\n      font-size: 1.625rem;\n    `,\n    [BLOCKS.HEADING_2]: css`\n      font-size: 1.4375rem;\n    `,\n    [BLOCKS.HEADING_3]: css`\n      font-size: 1.25rem;\n    `,\n    [BLOCKS.HEADING_4]: css`\n      font-size: 1.125rem;\n    `,\n    [BLOCKS.HEADING_5]: css`\n      font-size: 1rem;\n    `,\n    [BLOCKS.HEADING_6]: css`\n      font-size: 0.875rem;\n    `,\n  },\n};\n\nconst LABELS = {\n  [BLOCKS.PARAGRAPH]: 'Normal text',\n  [BLOCKS.HEADING_1]: 'Heading 1',\n  [BLOCKS.HEADING_2]: 'Heading 2',\n  [BLOCKS.HEADING_3]: 'Heading 3',\n  [BLOCKS.HEADING_4]: 'Heading 4',\n  [BLOCKS.HEADING_5]: 'Heading 5',\n  [BLOCKS.HEADING_6]: 'Heading 6',\n};\n\nexport interface ToolbarHeadingButtonProps {\n  isDisabled?: boolean;\n}\n\nexport function ToolbarHeadingButton(props: ToolbarHeadingButtonProps) {\n  const sdk = useSdkContext();\n  const editor = useContentfulEditor();\n  const [isOpen, setOpen] = React.useState(false);\n  const [selected, setSelected] = React.useState<string>(BLOCKS.PARAGRAPH);\n\n  React.useEffect(() => {\n    if (!editor?.selection) return;\n\n    const [element] = getElementFromCurrentSelection(editor);\n    const type = (element as CustomElement).type;\n\n    setSelected(LABELS[type] ? type : BLOCKS.PARAGRAPH);\n  }, [editor?.operations, editor?.selection]); // eslint-disable-line\n\n  const [nodeTypesByEnablement, someHeadingsEnabled] = React.useMemo(() => {\n    const nodeTypesByEnablement = Object.fromEntries(\n      Object.keys(LABELS).map((nodeType) => [nodeType, isNodeTypeEnabled(sdk.field, nodeType)])\n    );\n    const someHeadingsEnabled = Object.values(nodeTypesByEnablement).filter(Boolean).length > 0;\n    return [nodeTypesByEnablement, someHeadingsEnabled];\n  }, [sdk.field]);\n\n  function handleOnSelectItem(type: BLOCKS): (event: React.MouseEvent<HTMLButtonElement>) => void {\n    return (event: React.MouseEvent<HTMLButtonElement>) => {\n      event.preventDefault();\n\n      if (!editor?.selection) return;\n\n      setSelected(type);\n      setOpen(false);\n\n      const prevOnChange = editor.onChange;\n      /*\n       The focus might happen at point in time when\n       `toggleElement` (helper for toggleNodeType) changes aren't rendered yet, causing the browser\n       to place the cursor at the start of the text.\n       We wait for the change event before focusing\n       the editor again. This ensures the cursor is back at the previous\n       position.*/\n      editor.onChange = (...args) => {\n        focus(editor);\n        editor.onChange = prevOnChange;\n        prevOnChange(...args);\n      };\n\n      const isActive = isBlockSelected(editor, type);\n      editor.tracking.onToolbarAction(isActive ? 'remove' : 'insert', { nodeType: type });\n\n      toggleElement(editor, { activeType: type, inactiveType: type });\n    };\n  }\n\n  if (!editor) return null;\n\n  return (\n    <Menu isOpen={isOpen} onClose={() => setOpen(false)}>\n      <Menu.Trigger>\n        <Button\n          size=\"small\"\n          testId=\"toolbar-heading-toggle\"\n          variant=\"transparent\"\n          endIcon={<ChevronDownIcon />}\n          isDisabled={props.isDisabled}\n          onClick={() => someHeadingsEnabled && setOpen(!isOpen)}>\n          {LABELS[selected]}\n        </Button>\n      </Menu.Trigger>\n      <Menu.List testId=\"dropdown-heading-list\">\n        {' '}\n        {Object.keys(LABELS)\n          .map(\n            (nodeType) =>\n              nodeTypesByEnablement[nodeType] && (\n                <Menu.Item\n                  key={nodeType}\n                  isInitiallyFocused={selected === nodeType}\n                  onClick={handleOnSelectItem(nodeType as BLOCKS)}\n                  testId={`dropdown-option-${nodeType}`}\n                  disabled={props.isDisabled}>\n                  <span className={cx(styles.dropdown.root, styles.dropdown[nodeType])}>\n                    {LABELS[nodeType]}\n                  </span>\n                </Menu.Item>\n              )\n          )\n          .filter(Boolean)}\n      </Menu.List>\n    </Menu>\n  );\n}\n","import { BLOCKS, TEXT_CONTAINERS } from '@contentful/rich-text-types';\nimport { NodeMatch, getNodes } from '@udecode/plate-core';\nimport { Path } from 'slate';\n\nimport { CustomElement, RichTextEditor } from '../types';\n\nfunction extractNodes(editor: RichTextEditor, path: Path, match: NodeMatch) {\n  return Array.from(\n    getNodes(editor, {\n      match,\n      at: path,\n      mode: 'lowest',\n    })\n  ).map(([node]) => node as CustomElement);\n}\n\n/**\n * It filters out all paragraphs and headings from a path and convert them into paragraphs.\n */\nexport function extractParagraphs(editor: RichTextEditor, path: Path): CustomElement[] {\n  return extractNodes(editor, path, {\n    type: TEXT_CONTAINERS,\n  }).map((node) => ({\n    ...node,\n    type: BLOCKS.PARAGRAPH,\n  }));\n}\n","import { BLOCKS, INLINES } from '@contentful/rich-text-types';\nimport { NodeEntry, Transforms } from 'slate';\n\nimport { RichTextEditor } from '../types';\nimport { extractParagraphs } from './extractNodes';\n\nexport const transformRemove = (editor: RichTextEditor, [, path]: NodeEntry) => {\n  Transforms.removeNodes(editor, { at: path });\n};\n\nexport const transformParagraphs = (editor: RichTextEditor, entry: NodeEntry) => {\n  const path = entry[1];\n  const nodes = extractParagraphs(editor, path);\n\n  transformRemove(editor, entry);\n  Transforms.insertNodes(editor, nodes, { at: path });\n};\n\nexport const transformUnwrap = (editor: RichTextEditor, [, path]: NodeEntry) => {\n  Transforms.unwrapNodes(editor, {\n    at: path,\n  });\n};\n\nexport const transformWrapIn =\n  (type: BLOCKS | INLINES) =>\n  (editor: RichTextEditor, [, path]: NodeEntry) => {\n    Transforms.wrapNodes(editor, { type, data: {}, children: [] }, { at: path });\n  };\n\nexport const transformLift = (editor: RichTextEditor, [, path]: NodeEntry) => {\n  Transforms.liftNodes(editor, { at: path });\n};\n","import * as React from 'react';\n\nimport tokens from '@contentful/f36-tokens';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { css, cx } from 'emotion';\nimport * as Slate from 'slate-react';\n\nconst styles = {\n  dropdown: {\n    root: css`\n      font-weight: ${tokens.fontWeightDemiBold};\n    `,\n    [BLOCKS.PARAGRAPH]: css`\n      font-size: ${tokens.fontSizeL};\n    `,\n    [BLOCKS.HEADING_1]: css`\n      font-size: 1.625rem;\n    `,\n    [BLOCKS.HEADING_2]: css`\n      font-size: 1.4375rem;\n    `,\n    [BLOCKS.HEADING_3]: css`\n      font-size: 1.25rem;\n    `,\n    [BLOCKS.HEADING_4]: css`\n      font-size: 1.125rem;\n    `,\n    [BLOCKS.HEADING_5]: css`\n      font-size: 1rem;\n    `,\n    [BLOCKS.HEADING_6]: css`\n      font-size: 0.875rem;\n    `,\n  },\n  headings: {\n    root: css`\n      font-weight: ${tokens.fontWeightMedium};\n      line-height: 1.3;\n      margin: 0 0 ${tokens.spacingS};\n    `,\n    [BLOCKS.HEADING_1]: css`\n      font-size: 1.875rem;\n    `,\n    [BLOCKS.HEADING_2]: css`\n      font-size: 1.5625rem;\n    `,\n    [BLOCKS.HEADING_3]: css`\n      font-size: 1.375rem;\n    `,\n    [BLOCKS.HEADING_4]: css`\n      font-size: 1.25rem;\n    `,\n    [BLOCKS.HEADING_5]: css`\n      font-size: 1.125rem;\n    `,\n    [BLOCKS.HEADING_6]: css`\n      font-size: 1rem;\n    `,\n  },\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction createHeading(Tag: any, block: BLOCKS) {\n  return function Heading(props: Slate.RenderElementProps) {\n    return (\n      <Tag {...props.attributes} className={cx(styles.headings.root, styles.headings[block])}>\n        {props.children}\n      </Tag>\n    );\n  };\n}\n\nexport const HeadingComponents = {\n  [BLOCKS.HEADING_1]: React.memo(createHeading('h1', BLOCKS.HEADING_1)),\n  [BLOCKS.HEADING_2]: React.memo(createHeading('h2', BLOCKS.HEADING_2)),\n  [BLOCKS.HEADING_3]: React.memo(createHeading('h3', BLOCKS.HEADING_3)),\n  [BLOCKS.HEADING_4]: React.memo(createHeading('h4', BLOCKS.HEADING_4)),\n  [BLOCKS.HEADING_5]: React.memo(createHeading('h5', BLOCKS.HEADING_5)),\n  [BLOCKS.HEADING_6]: React.memo(createHeading('h6', BLOCKS.HEADING_6)),\n};\n","import { BLOCKS, HEADINGS } from '@contentful/rich-text-types';\nimport { getAbove, HotkeyPlugin, KeyboardHandler } from '@udecode/plate-core';\nimport isHotkey from 'is-hotkey';\n\nimport { isBlockSelected, isInlineOrText, toggleElement } from '../../helpers/editor';\nimport { transformLift, transformUnwrap } from '../../helpers/transformers';\nimport { RichTextEditor, RichTextPlugin } from '../../types';\nimport { HeadingComponents } from './components/Heading';\n\nconst buildHeadingEventHandler =\n  (type: BLOCKS): KeyboardHandler<RichTextEditor, HotkeyPlugin> =>\n  (editor, { options: { hotkey } }) =>\n  (event) => {\n    if (editor.selection && hotkey && isHotkey(hotkey, event)) {\n      const isActive = isBlockSelected(editor, type);\n      editor.tracking.onShortcutAction(isActive ? 'remove' : 'insert', { nodeType: type });\n\n      toggleElement(editor, { activeType: type, inactiveType: BLOCKS.PARAGRAPH });\n    }\n  };\n\nexport const createHeadingPlugin = (): RichTextPlugin => ({\n  key: 'HeadingPlugin',\n  softBreak: [\n    // create a new line with SHIFT+Enter inside a heading\n    {\n      hotkey: 'shift+enter',\n      query: {\n        allow: HEADINGS,\n      },\n    },\n  ],\n  normalizer: [\n    {\n      match: {\n        type: HEADINGS,\n      },\n      validChildren: (_, [node]) => isInlineOrText(node),\n      transform: {\n        [BLOCKS.PARAGRAPH]: transformUnwrap,\n        default: transformLift,\n      },\n    },\n  ],\n  then: (editor) => {\n    return {\n      exitBreak: [\n        // Pressing ENTER at the start or end of a heading text inserts a\n        // normal paragraph.\n        {\n          hotkey: 'enter',\n          query: {\n            allow: HEADINGS,\n            end: true,\n            start: true,\n\n            // Exclude headings inside lists as it interferes with the list's\n            // insertBreak implementation\n            filter: ([, path]) =>\n              !getAbove(editor, {\n                at: path,\n                match: { type: BLOCKS.LIST_ITEM },\n              }),\n          },\n        },\n      ],\n    } as Partial<RichTextPlugin>;\n  },\n  plugins: HEADINGS.map((nodeType, idx) => {\n    const level = idx + 1;\n    const tagName = `h${level}`;\n\n    return {\n      key: nodeType,\n      type: nodeType,\n      isElement: true,\n      component: HeadingComponents[nodeType],\n      options: {\n        hotkey: [`mod+alt+${level}`],\n      },\n      handlers: {\n        onKeyDown: buildHeadingEventHandler(nodeType),\n      },\n      deserializeHtml: {\n        rules: [\n          {\n            validNodeName: tagName.toUpperCase(),\n          },\n        ],\n      },\n    };\n  }),\n});\n","import React from 'react';\n\nimport { Button, Tooltip } from '@contentful/f36-components';\nimport tokens from '@contentful/f36-tokens';\nimport { css, cx } from 'emotion';\n\nconst styles = {\n  button: css({\n    height: '30px',\n    width: '30px',\n    marginLeft: tokens.spacing2Xs,\n    marginRight: tokens.spacing2Xs,\n  }),\n\n  tooltip: css({\n    zIndex: Number(tokens.zIndexTooltip),\n  }),\n};\n\ninterface ToolbarButtonProps {\n  onClick: () => void;\n  isActive?: boolean;\n  isDisabled?: boolean;\n  children: any;\n  title: string;\n  className?: string;\n  testId?: string;\n}\n\nexport function ToolbarButton(props: ToolbarButtonProps) {\n  const { title, testId, isActive, children, className, isDisabled = false } = props;\n  const handleClick = (event) => {\n    event.preventDefault();\n    props.onClick();\n  };\n\n  const button = (\n    <Button\n      className={cx(styles.button, className)}\n      isDisabled={isDisabled}\n      startIcon={children}\n      onClick={handleClick}\n      testId={testId}\n      variant={isActive ? 'secondary' : 'transparent'}\n      size=\"small\"\n    />\n  );\n\n  if (title) {\n    return (\n      <Tooltip className={styles.tooltip} placement=\"bottom\" content={title}>\n        {button}\n      </Tooltip>\n    );\n  }\n\n  return button;\n}\n","import * as React from 'react';\n\nimport { HorizontalRuleIcon } from '@contentful/f36-icons';\nimport tokens from '@contentful/f36-tokens';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { getText, setNodes } from '@udecode/plate-core';\nimport { css, cx } from 'emotion';\nimport { Transforms } from 'slate';\nimport * as Slate from 'slate-react';\n\nimport { useContentfulEditor } from '../../ContentfulEditorProvider';\nimport {\n  getNodeEntryFromSelection,\n  isBlockSelected,\n  moveToTheNextLine,\n  focus,\n} from '../../helpers/editor';\nimport { RichTextEditor, RichTextPlugin } from '../../types';\nimport { ToolbarButton } from '../shared/ToolbarButton';\n\nconst styles = {\n  container: css`\n    margin: 0 0 ${tokens.spacingL};\n  `,\n  hr: css`\n    margin: 0;\n    height: ${tokens.spacingM};\n    background: transparent;\n    position: relative;\n    border: 0;\n    user-select: none;\n    &:hover {\n      cursor: pointer;\n    }\n    &::after {\n      content: '';\n      position: absolute;\n      width: 100%;\n      height: 1px;\n      background: ${tokens.gray300};\n      top: 50%;\n    }\n  `,\n  hrSelected: css`\n    &::after {\n      background: ${tokens.colorPrimary};\n      -webkit-box-shadow: 0px 0px 5px ${tokens.colorPrimary};\n      box-shadow: 0px 0px 5px ${tokens.colorPrimary};\n    }\n  `,\n};\n\ninterface ToolbarHrButtonProps {\n  isDisabled?: boolean;\n}\n\nexport function withHrEvents(editor: RichTextEditor) {\n  return (event: React.KeyboardEvent) => {\n    if (!editor) return;\n\n    const [, pathToSelectedHr] = getNodeEntryFromSelection(editor, BLOCKS.HR);\n    if (pathToSelectedHr) {\n      const isBackspace = event.key === 'Backspace';\n      const isDelete = event.key === 'Delete';\n      if (isBackspace || isDelete) {\n        event.preventDefault();\n        Transforms.removeNodes(editor, { at: pathToSelectedHr });\n      }\n    }\n  };\n}\n\nexport function ToolbarHrButton(props: ToolbarHrButtonProps) {\n  const editor = useContentfulEditor();\n\n  function handleOnClick() {\n    if (!editor?.selection) return;\n\n    const hr = {\n      type: BLOCKS.HR,\n      data: {},\n      children: [{ text: '' }],\n      isVoid: true,\n    };\n\n    const hasText = !!getText(editor, editor.selection.focus.path);\n    hasText ? Transforms.insertNodes(editor, hr) : setNodes(editor, hr);\n\n    // Move focus to the next paragraph (added by TrailingParagraph plugin)\n    moveToTheNextLine(editor);\n\n    focus(editor);\n  }\n\n  if (!editor) return null;\n\n  return (\n    <ToolbarButton\n      title=\"HR\"\n      isDisabled={props.isDisabled}\n      onClick={handleOnClick}\n      testId=\"hr-toolbar-button\"\n      isActive={isBlockSelected(editor, BLOCKS.HR)}>\n      <HorizontalRuleIcon />\n    </ToolbarButton>\n  );\n}\n\nexport function Hr(props: Slate.RenderLeafProps) {\n  const isSelected = Slate.useSelected();\n  const isFocused = Slate.useFocused();\n\n  return (\n    <div\n      {...props.attributes}\n      className={styles.container}\n      // COMPAT: To make HR copyable in Safari, we verify this attribute below on `deserialize`\n      data-void-element={BLOCKS.HR}>\n      <div\n        draggable={true}\n        // Moving `contentEditable` to this div makes it to be selectable when being the first void element, e.g pressing ctrl + a to select everything\n        contentEditable={false}>\n        <hr className={cx(styles.hr, isSelected && isFocused ? styles.hrSelected : undefined)} />\n      </div>\n      {props.children}\n    </div>\n  );\n}\n\nexport const createHrPlugin = (): RichTextPlugin => ({\n  key: BLOCKS.HR,\n  type: BLOCKS.HR,\n  isVoid: true,\n  isElement: true,\n  component: Hr,\n  handlers: {\n    onKeyDown: withHrEvents,\n  },\n  deserializeHtml: {\n    rules: [\n      {\n        validNodeName: ['HR'],\n      },\n      {\n        validAttribute: {\n          'data-void-element': BLOCKS.HR,\n        },\n      },\n    ],\n    withoutChildren: true,\n  },\n});\n","import * as React from 'react';\n\nimport {\n  TextLink,\n  Button,\n  FormControl,\n  FormLabel,\n  Select,\n  TextInput,\n  Form,\n  ModalContent,\n  ModalControls,\n} from '@contentful/f36-components';\nimport tokens from '@contentful/f36-tokens';\nimport { EntityProvider } from '@contentful/field-editor-reference';\nimport { Link } from '@contentful/field-editor-reference/dist/types';\nimport { ModalDialogLauncher, FieldExtensionSDK } from '@contentful/field-editor-shared';\nimport { INLINES } from '@contentful/rich-text-types';\nimport { css } from 'emotion';\nimport { Editor, Transforms, Path } from 'slate';\nimport { ReactEditor } from 'slate-react';\n\nimport { getNodeEntryFromSelection, insertLink, LINK_TYPES, focus } from '../../helpers/editor';\nimport getLinkedContentTypeIdsForNodeType from '../../helpers/getLinkedContentTypeIdsForNodeType';\nimport { isNodeTypeEnabled } from '../../helpers/validations';\nimport { TrackingPluginActions } from '../../plugins/Tracking';\nimport { RichTextEditor } from '../../types';\nimport { FetchingWrappedAssetCard } from '../shared/FetchingWrappedAssetCard';\nimport { FetchingWrappedEntryCard } from '../shared/FetchingWrappedEntryCard';\n\nconst styles = {\n  removeSelectionLabel: css`\n    margin-left: ${tokens.spacingS};\n  `,\n};\n\ninterface HyperlinkModalProps {\n  linkText?: string;\n  linkType?: string;\n  linkTarget?: string;\n  linkEntity?: Link;\n  onClose: (value: unknown) => void;\n  sdk: FieldExtensionSDK;\n  readonly: boolean;\n}\n\nconst SYS_LINK_TYPES = {\n  [INLINES.ENTRY_HYPERLINK]: 'Entry',\n  [INLINES.ASSET_HYPERLINK]: 'Asset',\n};\n\nconst LINK_TYPE_SELECTION_VALUES = {\n  [INLINES.HYPERLINK]: 'URL',\n  [INLINES.ENTRY_HYPERLINK]: 'Entry',\n  [INLINES.ASSET_HYPERLINK]: 'Asset',\n};\n\nexport function HyperlinkModal(props: HyperlinkModalProps) {\n  const enabledLinkTypes = LINK_TYPES.filter((nodeType) =>\n    isNodeTypeEnabled(props.sdk.field, nodeType)\n  );\n  const [defaultLinkType] = enabledLinkTypes;\n  const [linkText, setLinkText] = React.useState(props.linkText ?? '');\n  const [linkType, setLinkType] = React.useState(props.linkType ?? defaultLinkType);\n  const [linkTarget, setLinkTarget] = React.useState(props.linkTarget ?? '');\n  const [linkEntity, setLinkEntity] = React.useState<Link | null>(props.linkEntity ?? null);\n\n  function isLinkComplete() {\n    const isRegularLink = linkType === INLINES.HYPERLINK;\n    if (isRegularLink) {\n      return !!(linkText && linkTarget);\n    }\n\n    const entityLinks: string[] = Object.keys(SYS_LINK_TYPES);\n    const isEntityLink = entityLinks.includes(linkType);\n    if (isEntityLink) {\n      return !!(linkText && linkEntity);\n    }\n\n    return false;\n  }\n\n  function handleOnSubmit(event: React.MouseEvent<HTMLButtonElement>) {\n    event.preventDefault();\n\n    props.onClose({ linkText, linkType, linkTarget, linkEntity });\n  }\n\n  function entityToLink(entity): Link {\n    const { id, type } = entity.sys;\n\n    return { sys: { id, type: 'Link', linkType: type } };\n  }\n\n  async function selectEntry() {\n    const options = {\n      locale: props.sdk.field.locale,\n      contentTypes: getLinkedContentTypeIdsForNodeType(props.sdk.field, INLINES.ENTRY_HYPERLINK),\n    };\n    const entry = await props.sdk.dialogs.selectSingleEntry(options);\n    setLinkTarget('');\n    setLinkEntity(entityToLink(entry));\n  }\n\n  async function selectAsset() {\n    const options = {\n      locale: props.sdk.field.locale,\n    };\n    const asset = await props.sdk.dialogs.selectSingleAsset(options);\n    setLinkTarget('');\n    setLinkEntity(entityToLink(asset));\n  }\n\n  function resetLinkEntity(event: React.MouseEvent) {\n    event.preventDefault();\n\n    setLinkEntity(null);\n  }\n\n  return (\n    <EntityProvider sdk={props.sdk}>\n      <React.Fragment>\n        <ModalContent>\n          <Form>\n            {!props.linkType && (\n              <FormControl id=\"link-text\" isRequired>\n                <FormControl.Label>Link text</FormControl.Label>\n                <TextInput\n                  testId=\"link-text-input\"\n                  name=\"link-text\"\n                  value={linkText}\n                  onChange={(event) => setLinkText(event.target.value)}\n                />\n              </FormControl>\n            )}\n\n            {enabledLinkTypes.length > 1 && (\n              <FormControl id=\"link-type\">\n                <FormControl.Label>Link type</FormControl.Label>\n                <Select\n                  value={linkType}\n                  onChange={(event: React.ChangeEvent<HTMLSelectElement>) =>\n                    setLinkType(event.target.value)\n                  }\n                  testId=\"link-type-input\"\n                  isDisabled={props.readonly}>\n                  {enabledLinkTypes.map((nodeType) => (\n                    <Select.Option key={nodeType} value={nodeType}>\n                      {LINK_TYPE_SELECTION_VALUES[nodeType]}\n                    </Select.Option>\n                  ))}\n                </Select>\n              </FormControl>\n            )}\n\n            {linkType === INLINES.HYPERLINK && (\n              <FormControl id=\"linkTarget\" isRequired>\n                <FormControl.Label>Link target</FormControl.Label>\n                <TextInput\n                  name=\"linkTarget\"\n                  value={linkTarget}\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                    setLinkEntity(null);\n                    setLinkTarget(event.target.value);\n                  }}\n                  testId=\"link-target-input\"\n                  isDisabled={props.readonly}\n                />\n                <FormControl.HelpText>\n                  A protocol may be required, e.g. https://\n                </FormControl.HelpText>\n              </FormControl>\n            )}\n\n            {linkType !== INLINES.HYPERLINK && (\n              <div>\n                <FormLabel isRequired htmlFor=\"\">\n                  Link target{' '}\n                </FormLabel>\n\n                {linkEntity && linkEntity.sys.linkType === SYS_LINK_TYPES[linkType] ? (\n                  <>\n                    {!props.readonly && (\n                      <TextLink\n                        testId=\"entity-selection-link\"\n                        onClick={resetLinkEntity}\n                        className={styles.removeSelectionLabel}>\n                        Remove selection\n                      </TextLink>\n                    )}\n                    <div>\n                      {linkType === INLINES.ENTRY_HYPERLINK && (\n                        <FetchingWrappedEntryCard\n                          sdk={props.sdk}\n                          locale={props.sdk.field.locale}\n                          entryId={linkEntity.sys.id}\n                          isDisabled={true}\n                          isSelected={false}\n                        />\n                      )}\n                      {linkType === INLINES.ASSET_HYPERLINK && (\n                        <FetchingWrappedAssetCard\n                          sdk={props.sdk}\n                          locale={props.sdk.field.locale}\n                          assetId={linkEntity.sys.id}\n                          isDisabled={true}\n                          isSelected={false}\n                        />\n                      )}\n                    </div>\n                  </>\n                ) : (\n                  <div>\n                    {linkType === INLINES.ENTRY_HYPERLINK && (\n                      <TextLink testId=\"entity-selection-link\" onClick={selectEntry}>\n                        Select entry\n                      </TextLink>\n                    )}\n                    {linkType === INLINES.ASSET_HYPERLINK && (\n                      <TextLink testId=\"entity-selection-link\" onClick={selectAsset}>\n                        Select asset\n                      </TextLink>\n                    )}\n                  </div>\n                )}\n              </div>\n            )}\n          </Form>\n        </ModalContent>\n        <ModalControls>\n          <Button\n            type=\"button\"\n            onClick={() => props.onClose(null)}\n            variant=\"secondary\"\n            testId=\"cancel-cta\"\n            size=\"small\">\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"positive\"\n            size=\"small\"\n            isDisabled={props.readonly || !isLinkComplete()}\n            onClick={handleOnSubmit}\n            testId=\"confirm-cta\">\n            {props.linkType ? 'Update' : 'Insert'}\n          </Button>\n        </ModalControls>\n      </React.Fragment>\n    </EntityProvider>\n  );\n}\n\ninterface HyperLinkDialogData {\n  linkText: string;\n  linkType: INLINES.HYPERLINK | INLINES.ASSET_HYPERLINK | INLINES.ENTRY_HYPERLINK;\n  linkTarget?: string;\n  linkEntity?: Link;\n}\n\nexport async function addOrEditLink(\n  editor: RichTextEditor,\n  sdk: FieldExtensionSDK,\n  logAction:\n    | TrackingPluginActions['onToolbarAction']\n    | TrackingPluginActions['onShortcutAction']\n    | TrackingPluginActions['onViewportAction'],\n  targetPath?: Path\n) {\n  const isReadOnly = ReactEditor.isReadOnly(editor);\n  const selectionBeforeBlur = editor.selection ? { ...editor.selection } : undefined;\n  if (!targetPath && !selectionBeforeBlur) return;\n\n  let linkType;\n  let linkText;\n  let linkTarget;\n  let linkEntity;\n  const [node, path] = getNodeEntryFromSelection(editor, LINK_TYPES, targetPath);\n  if (node && path) {\n    linkType = node.type;\n    linkText = Editor.string(editor, path);\n    linkTarget = (node.data as { uri: string }).uri || '';\n    linkEntity = (node.data as { target: Link }).target;\n  }\n\n  const selectionAfterFocus =\n    targetPath ?? (selectionBeforeBlur as NonNullable<typeof selectionBeforeBlur>);\n\n  const currentLinkText =\n    linkText || (editor.selection ? Editor.string(editor, editor.selection) : '');\n  const isEditing = Boolean(node && path);\n\n  logAction(isEditing ? 'openEditHyperlinkDialog' : 'openCreateHyperlinkDialog');\n\n  const data = await ModalDialogLauncher.openDialog(\n    {\n      title: isEditing ? 'Edit hyperlink' : 'Insert hyperlink',\n      width: 'large',\n      shouldCloseOnEscapePress: true,\n      shouldCloseOnOverlayClick: true,\n      allowHeightOverflow: true,\n    },\n    ({ onClose }) => {\n      return (\n        <HyperlinkModal\n          linkTarget={linkTarget}\n          linkText={currentLinkText}\n          linkType={linkType}\n          linkEntity={linkEntity}\n          onClose={onClose}\n          sdk={sdk}\n          readonly={isReadOnly}\n        />\n      );\n    }\n  );\n  Transforms.select(editor, selectionAfterFocus);\n\n  if (!data) {\n    focus(editor);\n    logAction(isEditing ? 'cancelEditHyperlinkDialog' : 'cancelCreateHyperlinkDialog');\n    return;\n  }\n\n  const {\n    linkText: text,\n    linkTarget: url,\n    linkType: type,\n    linkEntity: target,\n  } = data as HyperLinkDialogData;\n\n  Editor.withoutNormalizing(editor, () => {\n    insertLink(editor, { text, url, type, target, path });\n  });\n\n  logAction(isEditing ? 'edit' : 'insert', {\n    nodeType: type,\n    linkType: target?.sys.linkType ?? 'uri', // we want to keep the same values we've been using for the old editor, which can be `uri`, `Asset` or `Entry`\n  });\n\n  focus(editor);\n}\n","import * as React from 'react';\n\nimport { FieldExtensionSDK } from '@contentful/app-sdk';\nimport { LinkIcon } from '@contentful/f36-icons';\n\nimport { useContentfulEditor } from '../../../ContentfulEditorProvider';\nimport { isLinkActive, unwrapLink } from '../../../helpers/editor';\nimport { useSdkContext } from '../../../SdkProvider';\nimport { ToolbarButton } from '../../shared/ToolbarButton';\nimport { addOrEditLink } from '../HyperlinkModal';\n\ninterface ToolbarHyperlinkButtonProps {\n  isDisabled: boolean | undefined;\n}\n\nexport function ToolbarHyperlinkButton(props: ToolbarHyperlinkButtonProps) {\n  const editor = useContentfulEditor();\n  const isActive = !!(editor && isLinkActive(editor));\n  const sdk: FieldExtensionSDK = useSdkContext();\n\n  async function handleClick() {\n    if (!editor) return;\n\n    if (isActive) {\n      unwrapLink(editor);\n      editor.tracking.onToolbarAction('unlinkHyperlinks');\n    } else {\n      addOrEditLink(editor, sdk, editor.tracking.onToolbarAction);\n    }\n  }\n\n  if (!editor) return null;\n\n  return (\n    <ToolbarButton\n      title=\"Hyperlink\"\n      testId=\"hyperlink-toolbar-button\"\n      onClick={handleClick}\n      isActive={isActive}\n      isDisabled={props.isDisabled}>\n      <LinkIcon />\n    </ToolbarButton>\n  );\n}\n","import { getScheduleTooltipContent } from '@contentful/field-editor-reference';\nimport { isAncestorEmpty } from '@udecode/plate-core';\nimport { NodeEntry, Ancestor, Node } from 'slate';\n\nimport { RichTextEditor } from '../../types';\nimport { FetchedEntityData } from './useEntityInfo';\n\nexport const hasText = (editor: RichTextEditor, entry: NodeEntry) => {\n  const [node] = entry;\n  return !isAncestorEmpty(editor, node as Ancestor) && Node.string(node).trim() !== '';\n};\n\nfunction truncate(str: string, length: number) {\n  if (typeof str === 'string' && str.length > length) {\n    return (\n      str &&\n      str\n        .substr(0, length + 1) // +1 to look ahead and be replaced below.\n        // Get rid of orphan letters but not one letter words (I, a, 2).\n        // Try to not have “.” as last character to avoid awkward “....”.\n        .replace(/(\\s+\\S(?=\\S)|\\s*)\\.?.$/, '…')\n    );\n  }\n\n  return str;\n}\n\nexport function getEntityInfo(data?: FetchedEntityData) {\n  if (!data) {\n    return '';\n  }\n  const { entityTitle, contentTypeName, entityStatus, jobs } = data;\n\n  const title = truncate(entityTitle, 60) || 'Untitled';\n\n  const scheduledActions =\n    jobs.length > 0 ? getScheduleTooltipContent({ job: jobs[0], jobsCount: jobs.length }) : '';\n\n  return `${contentTypeName || 'Asset'} \"${title}\", ${entityStatus} ${scheduledActions}`;\n}\n","import { useState, useEffect } from 'react';\n\nimport { FieldExtensionSDK, Link, Entry, Asset, ScheduledAction } from '@contentful/app-sdk';\nimport { entityHelpers } from '@contentful/field-editor-shared';\n\nimport { getEntityInfo } from './utils';\n\nexport type FetchedEntityData = {\n  jobs: ScheduledAction[];\n  entity: Entry | Asset;\n  entityTitle: string;\n  entityDescription: string;\n  entityStatus: ReturnType<typeof entityHelpers.getEntryStatus>;\n  contentTypeName: string;\n};\n\nasync function fetchAllData({\n  sdk,\n  entityId,\n  entityType,\n  localeCode,\n  defaultLocaleCode,\n}: {\n  sdk: FieldExtensionSDK;\n  entityId: string;\n  entityType: string;\n  localeCode: string;\n  defaultLocaleCode: string;\n}): Promise<FetchedEntityData> {\n  let contentType;\n\n  const getEntity = entityType === 'Entry' ? sdk.space.getEntry : sdk.space.getAsset;\n  const entity = await getEntity(entityId);\n  if (entity.sys.contentType) {\n    const contentTypeId = entity.sys.contentType.sys.id;\n    contentType = sdk.space.getCachedContentTypes().find((ct) => ct.sys.id === contentTypeId);\n  }\n\n  const entityTitle =\n    entityType === 'Entry'\n      ? entityHelpers.getEntryTitle({\n          entry: entity,\n          contentType,\n          localeCode,\n          defaultLocaleCode,\n          defaultTitle: 'Untitled',\n        })\n      : entityHelpers.getAssetTitle({\n          asset: entity,\n          localeCode,\n          defaultLocaleCode,\n          defaultTitle: 'Untitled',\n        });\n\n  const entityDescription = entityHelpers.getEntityDescription({\n    entity,\n    contentType,\n    localeCode,\n    defaultLocaleCode,\n  });\n\n  const jobs = await sdk.space.getEntityScheduledActions(entityType, entityId);\n\n  const entityStatus = entityHelpers.getEntryStatus(entity.sys);\n\n  return {\n    jobs,\n    entity,\n    entityTitle,\n    entityDescription,\n    entityStatus,\n    contentTypeName: contentType ? contentType.name : '',\n  };\n}\n\nexport type EntityInfoProps = {\n  target: Link;\n  sdk: FieldExtensionSDK;\n  onEntityFetchComplete?: VoidFunction;\n};\n\nfunction useRequestStatus({ sdk, target, onEntityFetchComplete }: EntityInfoProps) {\n  const [requestStatus, setRequestStatus] = useState<{\n    type: 'success' | 'loading' | 'error';\n    data?: FetchedEntityData;\n    error?: Error;\n  }>({ type: 'loading' });\n\n  useEffect(() => {\n    if (target) {\n      fetchAllData({\n        sdk,\n        entityId: target?.sys?.id,\n        entityType: target?.sys?.linkType,\n        localeCode: sdk.field.locale,\n        defaultLocaleCode: sdk.locales.default,\n      })\n        .then((entityInfo) => {\n          setRequestStatus({ type: 'success', data: entityInfo });\n        })\n        .catch((e) => {\n          console.log(e);\n          setRequestStatus({ type: 'error', error: e });\n        })\n        .finally(() => {\n          onEntityFetchComplete?.();\n        });\n    }\n  }, [sdk, target, onEntityFetchComplete]);\n\n  return requestStatus;\n}\n\nexport function useEntityInfo(props: EntityInfoProps) {\n  const status = useRequestStatus(props);\n\n  const { linkType } = props.target.sys;\n\n  if (status.type === 'loading') {\n    return `Loading ${linkType.toLowerCase()}...`;\n  }\n\n  if (status.type === 'error') {\n    return `${linkType} missing or inaccessible`;\n  }\n\n  return getEntityInfo(status.data);\n}\n","import tokens from '@contentful/f36-tokens';\nimport { css } from 'emotion';\n\nexport const styles = {\n  hyperlinkWrapper: css({\n    display: 'inline',\n    position: 'static',\n    a: {\n      fontSize: 'inherit !important',\n    },\n  }),\n  hyperlink: css({\n    fontSize: 'inherit !important',\n    display: 'inline !important',\n    '&:hover': {\n      fill: tokens.gray900,\n    },\n    '&:focus': {\n      fill: tokens.gray900,\n    },\n  }),\n};\n","import * as React from 'react';\n\nimport { FieldExtensionSDK, Link } from '@contentful/app-sdk';\nimport { Tooltip, TextLink } from '@contentful/f36-components';\nimport { ReactEditor } from 'slate-react';\n\nimport { useContentfulEditor } from '../../../ContentfulEditorProvider';\nimport { useSdkContext } from '../../../SdkProvider';\nimport { CustomRenderElementProps } from '../../../types';\nimport { addOrEditLink } from '../HyperlinkModal';\nimport { useEntityInfo } from '../useEntityInfo';\nimport { styles } from './styles';\n\ntype HyperlinkElementProps = CustomRenderElementProps<{\n  uri?: string;\n  target?: Link;\n  onEntityFetchComplete?: VoidFunction;\n}>;\n\nexport function EntityHyperlink(props: HyperlinkElementProps) {\n  const editor = useContentfulEditor();\n  const sdk: FieldExtensionSDK = useSdkContext();\n  const { target } = props.element.data;\n  const { onEntityFetchComplete } = props;\n\n  const tooltipContent = useEntityInfo({\n    target,\n    sdk,\n    onEntityFetchComplete,\n  });\n\n  if (!target) return null;\n\n  function handleClick(event: React.MouseEvent<HTMLAnchorElement>) {\n    event.preventDefault();\n    event.stopPropagation();\n    if (!editor) return;\n    const p = ReactEditor.toSlatePoint(editor, [event.target as Node, 0], {\n      exactMatch: false,\n      suppressThrow: false,\n    });\n    addOrEditLink(editor, sdk, editor.tracking.onViewportAction, p.path);\n  }\n\n  return (\n    <Tooltip\n      content={tooltipContent}\n      targetWrapperClassName={styles.hyperlinkWrapper}\n      placement=\"bottom\"\n      maxWidth=\"auto\">\n      <TextLink\n        as=\"a\"\n        onClick={handleClick}\n        className={styles.hyperlink}\n        data-link-type={target.sys.linkType}\n        data-link-id={target.sys.id}>\n        {props.children}\n      </TextLink>\n    </Tooltip>\n  );\n}\n","import * as React from 'react';\n\nimport { FieldExtensionSDK, Link } from '@contentful/app-sdk';\nimport { Tooltip, TextLink } from '@contentful/f36-components';\nimport { ReactEditor } from 'slate-react';\n\nimport { useContentfulEditor } from '../../../ContentfulEditorProvider';\nimport { useSdkContext } from '../../../SdkProvider';\nimport { CustomRenderElementProps } from '../../../types';\nimport { addOrEditLink } from '../HyperlinkModal';\nimport { styles } from './styles';\n\ntype HyperlinkElementProps = CustomRenderElementProps<{\n  uri?: string;\n  target?: Link;\n  onEntityFetchComplete?: VoidFunction;\n}>;\n\nexport function UrlHyperlink(props: HyperlinkElementProps) {\n  const editor = useContentfulEditor();\n  const sdk: FieldExtensionSDK = useSdkContext();\n  const { uri } = props.element.data;\n\n  function handleClick(event: React.MouseEvent<HTMLAnchorElement>) {\n    event.preventDefault();\n    event.stopPropagation();\n    if (!editor) return;\n    const p = ReactEditor.toSlatePoint(editor, [event.target as Node, 0], {\n      exactMatch: false,\n      suppressThrow: false,\n    });\n    addOrEditLink(editor, sdk, editor.tracking.onViewportAction, p.path);\n  }\n\n  return (\n    <Tooltip\n      content={uri}\n      targetWrapperClassName={styles.hyperlinkWrapper}\n      placement=\"bottom\"\n      maxWidth=\"auto\">\n      <TextLink\n        as=\"a\"\n        href={uri}\n        rel=\"noopener noreferrer\"\n        onClick={handleClick}\n        className={styles.hyperlink}>\n        {props.children}\n      </TextLink>\n    </Tooltip>\n  );\n}\n","import * as React from 'react';\n\nimport { FieldExtensionSDK, Link } from '@contentful/app-sdk';\nimport { INLINES } from '@contentful/rich-text-types';\nimport { AnyObject, KeyboardHandler, HotkeyPlugin } from '@udecode/plate-core';\nimport isHotkey from 'is-hotkey';\n\nimport { isLinkActive, unwrapLink } from '../../helpers/editor';\nimport { transformRemove } from '../../helpers/transformers';\nimport {\n  RichTextPlugin,\n  CustomRenderElementProps,\n  CustomElement,\n  RichTextEditor,\n} from '../../types';\nimport { withLinkTracking } from '../links-tracking';\nimport { EntityHyperlink } from './components/EntityHyperlink';\nimport { UrlHyperlink } from './components/UrlHyperlink';\nimport { addOrEditLink } from './HyperlinkModal';\nimport { hasText } from './utils';\n\ntype HyperlinkElementProps = CustomRenderElementProps<{\n  uri?: string;\n  target?: Link;\n  onEntityFetchComplete?: VoidFunction;\n}>;\n\nconst isAnchor = (element: HTMLElement) =>\n  element.nodeName === 'A' &&\n  !!element.getAttribute('href') &&\n  element.getAttribute('href') !== '#';\n\nconst isEntryAnchor = (element: HTMLElement) =>\n  element.nodeName === 'A' && element.getAttribute('data-link-type') === 'Entry';\n\nconst isAssetAnchor = (element: HTMLElement) =>\n  element.nodeName === 'A' && element.getAttribute('data-link-type') === 'Asset';\n\nconst buildHyperlinkEventHandler =\n  (sdk: FieldExtensionSDK): KeyboardHandler<RichTextEditor, HotkeyPlugin> =>\n  (editor, { options: { hotkey } }) => {\n    return (event: React.KeyboardEvent) => {\n      if (!editor.selection) {\n        return;\n      }\n\n      if (hotkey && !isHotkey(hotkey, event)) {\n        return;\n      }\n\n      if (isLinkActive(editor)) {\n        unwrapLink(editor);\n        editor.tracking.onShortcutAction('unlinkHyperlinks');\n      } else {\n        addOrEditLink(editor, sdk, editor.tracking.onShortcutAction);\n      }\n    };\n  };\n\nconst getNodeOfType =\n  (type: INLINES) =>\n  (el: HTMLElement, node: AnyObject): CustomElement<HyperlinkElementProps> => ({\n    type,\n    children: node.children,\n    data:\n      type === INLINES.HYPERLINK\n        ? {\n            uri: el.getAttribute('href'),\n          }\n        : {\n            target: {\n              sys: {\n                id: el.getAttribute('data-link-id'),\n                linkType: el.getAttribute('data-link-type'),\n                type: 'Link',\n              },\n            },\n          },\n  });\n\nexport const createHyperlinkPlugin = (sdk: FieldExtensionSDK): RichTextPlugin => {\n  const common: Partial<RichTextPlugin> = {\n    isElement: true,\n    isInline: true,\n  };\n\n  return {\n    key: 'HyperlinkPlugin',\n    options: {\n      hotkey: 'mod+k',\n    },\n    handlers: {\n      onKeyDown: buildHyperlinkEventHandler(sdk),\n    },\n    plugins: [\n      // URL Hyperlink\n      {\n        ...common,\n        key: INLINES.HYPERLINK,\n        type: INLINES.HYPERLINK,\n        component: UrlHyperlink,\n        deserializeHtml: {\n          rules: [\n            {\n              validNodeName: ['A'],\n            },\n          ],\n          query: (el) => isAnchor(el) && !(isEntryAnchor(el) || isAssetAnchor(el)),\n          getNode: getNodeOfType(INLINES.HYPERLINK),\n        },\n      },\n      // Entry Hyperlink\n      {\n        ...common,\n        key: INLINES.ENTRY_HYPERLINK,\n        type: INLINES.ENTRY_HYPERLINK,\n        component: withLinkTracking(EntityHyperlink),\n        deserializeHtml: {\n          rules: [\n            {\n              validNodeName: ['A'],\n            },\n          ],\n          query: (el) => isEntryAnchor(el),\n          getNode: getNodeOfType(INLINES.ENTRY_HYPERLINK),\n        },\n      },\n      // Asset Hyperlink\n      {\n        ...common,\n        key: INLINES.ASSET_HYPERLINK,\n        type: INLINES.ASSET_HYPERLINK,\n        component: withLinkTracking(EntityHyperlink),\n        deserializeHtml: {\n          rules: [\n            {\n              validNodeName: ['A'],\n            },\n          ],\n          query: (el) => isAssetAnchor(el),\n          getNode: getNodeOfType(INLINES.ASSET_HYPERLINK),\n        },\n      },\n    ],\n    normalizer: [\n      {\n        match: {\n          type: [INLINES.HYPERLINK, INLINES.ASSET_HYPERLINK, INLINES.ENTRY_HYPERLINK],\n        },\n        validNode: hasText,\n        transform: transformRemove,\n      },\n    ],\n  };\n};\n","import * as React from 'react';\n\nimport tokens from '@contentful/f36-tokens';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { css, cx } from 'emotion';\nimport * as Slate from 'slate-react';\n\nconst baseStyle = css`\n  padding: 0;\n  margin: 0 0 1.25rem 1.25rem;\n\n  div:first-child {\n    margin: 0;\n    line-height: ${tokens.lineHeightDefault};\n  }\n`;\n\nconst styles = {\n  [BLOCKS.UL_LIST]: css`\n    list-style-type: disc;\n    ul {\n      list-style-type: circle;\n      ul {\n        list-style-type: square;\n      }\n    }\n  `,\n  [BLOCKS.OL_LIST]: css`\n    list-style-type: decimal;\n    ol {\n      list-style-type: upper-alpha;\n      ol {\n        list-style-type: lower-roman;\n        ol {\n          list-style-type: lower-alpha;\n        }\n      }\n    }\n  `,\n};\n\nfunction createList(Tag, block: BLOCKS) {\n  return function List(props: Slate.RenderElementProps) {\n    return (\n      <Tag {...props.attributes} className={cx(baseStyle, styles[block])}>\n        {props.children}\n      </Tag>\n    );\n  };\n}\n\nexport const ListUL = createList('ul', BLOCKS.UL_LIST);\nexport const ListOL = createList('ol', BLOCKS.OL_LIST);\n","import * as React from 'react';\n\nimport tokens from '@contentful/f36-tokens';\nimport { css } from 'emotion';\nimport * as Slate from 'slate-react';\n\nconst style = css`\n  margin: 0;\n  list-style: inherit;\n  margin-top: ${tokens.spacingXs};\n\n  ol,\n  ul {\n    margin: 0 0 0 ${tokens.spacingL};\n  }\n`;\n\nexport function ListItem(props: Slate.RenderElementProps) {\n  return (\n    <li {...props.attributes} className={style}>\n      {props.children}\n    </li>\n  );\n}\n","/**\n * Credit: Modified version of Plate's list plugin\n * See: https://github.com/udecode/plate/blob/main/packages/nodes/list\n */\nimport { getLastChildPath, match, PlateEditor, TElement, wrapNodes } from '@udecode/plate-core';\nimport { getListTypes } from '@udecode/plate-list';\nimport { Ancestor, Editor, NodeEntry, Path, Transforms, Node } from 'slate';\n\nexport interface MoveListItemDownOptions {\n  list: NodeEntry<TElement>;\n  listItem: NodeEntry<TElement>;\n}\n\nexport const moveListItemDown = (\n  editor: PlateEditor,\n  { list, listItem }: MoveListItemDownOptions\n) => {\n  const [listNode] = list;\n  const [, listItemPath] = listItem;\n\n  let previousListItemPath: Path;\n\n  try {\n    previousListItemPath = Path.previous(listItemPath);\n  } catch (e) {\n    return;\n  }\n\n  // Previous sibling is the new parent\n  const previousSiblingItem = Editor.node(editor, previousListItemPath) as NodeEntry<Ancestor>;\n\n  if (previousSiblingItem) {\n    const [, previousPath] = previousSiblingItem;\n\n    const subList = Array.from(Node.children(editor, previousPath)).find(([n]) =>\n      match(n, { type: getListTypes(editor) })\n    ) as NodeEntry<Ancestor> | undefined;\n\n    const newPath = Path.next(getLastChildPath(subList ?? previousSiblingItem));\n\n    Editor.withoutNormalizing(editor, () => {\n      if (!subList) {\n        // Create new sub-list\n        wrapNodes(editor, { type: listNode.type, children: [], data: {} }, { at: listItemPath });\n      }\n\n      // Move the current item to the sub-list\n      Transforms.moveNodes(editor, {\n        at: listItemPath,\n        to: newPath,\n      });\n    });\n  }\n};\n","/**\n * Credit: Modified version of Plate's list plugin\n * See: https://github.com/udecode/plate/blob/main/packages/nodes/list\n */\nimport { EditorNodesOptions, getNodes, getPluginType, PlateEditor } from '@udecode/plate-core';\nimport { isListNested, ELEMENT_LIC, getListItemEntry, moveListItemUp } from '@udecode/plate-list';\nimport { Editor, Path, PathRef } from 'slate';\n\nimport { moveListItemDown } from './moveListItemDown';\n\nexport type MoveListItemsOptions = {\n  increase?: boolean;\n  at?: EditorNodesOptions['at'];\n};\n\nexport const moveListItems = (\n  editor: PlateEditor,\n  { increase = true, at = editor.selection ?? undefined }: MoveListItemsOptions = {}\n) => {\n  const _nodes = getNodes(editor, {\n    at,\n    match: {\n      type: getPluginType(editor, ELEMENT_LIC),\n    },\n  });\n\n  // Get the selected lic\n  const lics = Array.from(_nodes);\n\n  if (!lics.length) return;\n\n  const highestLicPaths: Path[] = [];\n  const highestLicPathRefs: PathRef[] = [];\n\n  // Filter out the nested lic, we just need to move the highest ones\n  lics.forEach((lic) => {\n    const licPath = lic[1];\n    const liPath = Path.parent(licPath);\n\n    const isAncestor = highestLicPaths.some((path) => {\n      const highestLiPath = Path.parent(path);\n\n      return Path.isAncestor(highestLiPath, liPath);\n    });\n    if (!isAncestor) {\n      highestLicPaths.push(licPath);\n      highestLicPathRefs.push(Editor.pathRef(editor, licPath));\n    }\n  });\n\n  const licPathRefsToMove = increase ? highestLicPathRefs : highestLicPathRefs.reverse();\n\n  Editor.withoutNormalizing(editor, () => {\n    licPathRefsToMove.forEach((licPathRef) => {\n      const licPath = licPathRef.unref();\n      if (!licPath) return;\n\n      const liEntry = getListItemEntry(editor, { at: licPath });\n\n      if (!liEntry) {\n        return;\n      }\n\n      if (increase) {\n        moveListItemDown(editor, liEntry);\n      } else if (isListNested(editor, liEntry.list[1])) {\n        moveListItemUp(editor, liEntry);\n      }\n    });\n  });\n};\n","/**\n * Credit: Modified version of Plate's list plugin\n * See: https://github.com/udecode/plate/blob/main/packages/nodes/list\n */\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { PlateEditor, unwrapNodes } from '@udecode/plate-core';\nimport { Editor, Element, Path, Transforms } from 'slate';\n\nfunction hasUnliftedListItems(editor: PlateEditor, at?: Path) {\n  return Editor.nodes(editor, {\n    at,\n    match: (node, path) =>\n      Element.isElement(node) && node.type === BLOCKS.LIST_ITEM && path.length >= 2,\n  }).next().done;\n}\nexport const unwrapList = (editor: PlateEditor, { at }: { at?: Path } = {}) => {\n  Editor.withoutNormalizing(editor, () => {\n    do {\n      // lift list items to the root level\n      Transforms.liftNodes(editor, {\n        at,\n        match: (node) => Element.isElement(node) && node.type === BLOCKS.LIST_ITEM,\n        mode: 'lowest',\n      });\n    } while (!hasUnliftedListItems(editor, at));\n\n    // finally unwrap all lifted items\n    unwrapNodes(editor, {\n      at,\n      match: { type: BLOCKS.LIST_ITEM },\n      split: false,\n    });\n  });\n};\n","/**\n * Credit: Modified version of Plate's list plugin\n * See: https://github.com/udecode/plate/blob/main/packages/nodes/list\n */\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport {\n  ELEMENT_DEFAULT,\n  findNode,\n  getNodes,\n  getPluginType,\n  isCollapsed,\n  isRangeAcrossBlocks,\n  PlateEditor,\n  setNodes,\n  TElement,\n  wrapNodes,\n} from '@udecode/plate-core';\nimport { ELEMENT_LIC } from '@udecode/plate-list';\nimport { getListItemEntry } from '@udecode/plate-list';\nimport { Editor, Node, NodeEntry, Range } from 'slate';\n\nimport { unwrapList } from './unwrapList';\n\nconst listTypes = [BLOCKS.UL_LIST, BLOCKS.OL_LIST] as string[];\n\nexport const toggleList = (editor: PlateEditor, { type }: { type: string }) =>\n  Editor.withoutNormalizing(editor, () => {\n    if (!editor.selection) {\n      return;\n    }\n\n    if (isCollapsed(editor.selection) || !isRangeAcrossBlocks(editor)) {\n      // selection is collapsed\n      const res = getListItemEntry(editor);\n\n      if (res) {\n        const { list } = res;\n        if (list[0].type !== type) {\n          setNodes(\n            editor,\n            { type },\n            {\n              at: editor.selection,\n              match: (n) => listTypes.includes(n.type),\n              mode: 'lowest',\n            }\n          );\n        } else {\n          unwrapList(editor);\n        }\n      } else {\n        const list = { type, children: [], data: {} };\n        wrapNodes(editor, list);\n\n        const nodes = [\n          ...getNodes(editor, {\n            match: { type: getPluginType(editor, ELEMENT_DEFAULT) },\n          }),\n        ];\n\n        const listItem = {\n          type: BLOCKS.LIST_ITEM,\n          children: [],\n          data: {},\n        };\n\n        for (const [, path] of nodes) {\n          wrapNodes(editor, listItem, {\n            at: path,\n          });\n        }\n      }\n    } else {\n      // selection is a range\n\n      const [startPoint, endPoint] = Range.edges(editor.selection);\n      const commonEntry = Node.common(\n        editor,\n        startPoint.path,\n        endPoint.path\n      ) as NodeEntry<TElement>;\n\n      if (\n        listTypes.includes((commonEntry[0] as TElement).type) ||\n        commonEntry[0].type === BLOCKS.LIST_ITEM\n      ) {\n        let listType = commonEntry[0].type;\n        if (commonEntry[0].type === BLOCKS.LIST_ITEM) {\n          listType = (Editor.parent(editor, commonEntry[1])[0] as TElement).type;\n        }\n        if (listType !== type) {\n          const startList = findNode(editor, {\n            at: Range.start(editor.selection),\n            match: { type: listTypes },\n            mode: 'lowest',\n          });\n\n          const endList = findNode(editor, {\n            at: Range.end(editor.selection),\n            match: { type: listTypes },\n            mode: 'lowest',\n          });\n\n          if (!startList || !endList) {\n            return;\n          }\n\n          const rangeLength = Math.min(startList[1].length, endList[1].length);\n          setNodes(\n            editor,\n            { type },\n            {\n              at: editor.selection,\n              match: (n, path) => listTypes.includes(n.type) && path.length >= rangeLength,\n              mode: 'all',\n            }\n          );\n        } else {\n          unwrapList(editor);\n        }\n      } else {\n        const rootPathLength = commonEntry[1].length;\n        const nodes = (\n          Array.from(\n            getNodes(editor, {\n              mode: 'all',\n            })\n          ) as NodeEntry<TElement>[]\n        )\n          .filter(([, path]) => path.length === rootPathLength + 1)\n          .reverse();\n\n        nodes.forEach((n) => {\n          if (listTypes.includes(n[0].type)) {\n            setNodes(editor, { type }, { at: n[1] });\n          } else {\n            setNodes(editor, { type: getPluginType(editor, ELEMENT_LIC) }, { at: n[1] });\n\n            const listItem = {\n              type: BLOCKS.LIST_ITEM,\n              children: [],\n              data: {},\n            };\n\n            wrapNodes(editor, listItem, {\n              at: n[1],\n            });\n\n            const list = { type, children: [], data: {} };\n            wrapNodes(editor, list, { at: n[1] });\n          }\n        });\n      }\n    }\n  });\n","/**\n * Credit: Modified version of Plate's list plugin\n * See: https://github.com/udecode/plate/blob/main/packages/nodes/list\n */\nimport { getAbove, HotkeyPlugin, KeyboardHandler } from '@udecode/plate-core';\nimport isHotkey from 'is-hotkey';\nimport castArray from 'lodash/castArray';\n\nimport { RichTextEditor } from '../../types';\nimport { moveListItems } from './transforms/moveListItems';\nimport { toggleList } from './transforms/toggleList';\n\nexport const onKeyDownList: KeyboardHandler<RichTextEditor, HotkeyPlugin> =\n  (editor, { type, options: { hotkey } }) =>\n  (e) => {\n    if (e.key === 'Tab' && editor.selection) {\n      const listSelected = getAbove(editor, {\n        at: editor.selection,\n        match: { type },\n      });\n\n      if (listSelected) {\n        e.preventDefault();\n        moveListItems(editor, { increase: !e.shiftKey });\n        return;\n      }\n    }\n\n    if (!hotkey) return;\n\n    const hotkeys = castArray(hotkey);\n\n    for (const _hotkey of hotkeys) {\n      if (isHotkey(_hotkey)(e)) {\n        toggleList(editor, { type });\n      }\n    }\n  };\n","import { BLOCKS } from '@contentful/rich-text-types';\nimport { getAbove, getBlockAbove, getParent } from '@udecode/plate-core';\nimport { NodeEntry, Transforms, Path, Node, Text, Range } from 'slate';\n\nimport { CustomElement, RichTextEditor } from '../../types';\n\nconst isList = (node: CustomElement) =>\n  [BLOCKS.OL_LIST, BLOCKS.UL_LIST].includes(node.type as BLOCKS);\n\nexport const hasListAsDirectParent = (editor: RichTextEditor, [, path]: NodeEntry) => {\n  const [parentNode] = (getParent(editor, path) || []) as NodeEntry;\n  return isList(parentNode as CustomElement);\n};\n\nconst getNearestListAncestor = (editor: RichTextEditor, path: Path) => {\n  return getAbove(editor, { at: path, mode: 'lowest', match: isList }) || [];\n};\n\n/**\n * Places orphaned list items in a list. If there's a list somewhere\n * in the node's ancestors, defaults to that list type, else places\n * the list item in an unordered list.\n */\nexport const normalizeOrphanedListItem = (editor: RichTextEditor, [, path]: NodeEntry) => {\n  const [parentList] = getNearestListAncestor(editor, path);\n  const parentListType = parentList?.type;\n  Transforms.wrapNodes(\n    editor,\n    { type: parentListType || BLOCKS.UL_LIST, children: [], data: {} },\n    { at: path }\n  );\n};\n\nexport const isNonEmptyListItem = (editor: RichTextEditor, [, path]: NodeEntry) => {\n  const listItemChildren = Array.from(Node.children(editor, path));\n\n  return listItemChildren.length !== 0;\n};\n\nexport const firstNodeIsNotList = (_editor: RichTextEditor, [node]: NodeEntry<CustomElement>) => {\n  if (node.children.length === 1) {\n    const firstNode = node.children[0];\n\n    return !Text.isText(firstNode) && !isList(firstNode);\n  }\n\n  return true;\n};\n\nexport const insertParagraphAsChild = (editor: RichTextEditor, [, path]: NodeEntry) => {\n  Transforms.insertNodes(editor, [{ type: BLOCKS.PARAGRAPH, data: {}, children: [{ text: '' }] }], {\n    at: path.concat([0]),\n  });\n};\n\nexport const replaceNodeWithListItems = (editor, entry) => {\n  const [node, path] = entry;\n\n  Transforms.removeNodes(editor, { at: path });\n  Transforms.insertNodes(editor, node.children[0].children, { at: path });\n};\n\nexport const isListTypeActive = (editor: RichTextEditor, type: BLOCKS): boolean => {\n  const { selection } = editor;\n\n  if (!selection) {\n    return false;\n  }\n\n  if (Range.isExpanded(selection)) {\n    const [start, end] = Range.edges(selection);\n    const node = Node.common(editor, start.path, end.path);\n\n    if ((node[0] as CustomElement).type === type) {\n      return true;\n    }\n  }\n\n  // Lists can be nested. Here, we take the list type at the lowest level\n  const listNode = getBlockAbove(editor, {\n    match: {\n      type: [BLOCKS.OL_LIST, BLOCKS.UL_LIST],\n    },\n    mode: 'lowest',\n  });\n\n  return listNode?.[0].type === type;\n};\n","import { BLOCKS, TEXT_CONTAINERS } from '@contentful/rich-text-types';\nimport {\n  getAbove,\n  getParent,\n  insertNodes,\n  isFirstChild,\n  isSelectionAtBlockEnd,\n  isSelectionAtBlockStart,\n  moveChildren,\n} from '@udecode/plate-core';\nimport { Editor, Path, Transforms } from 'slate';\n\nimport { CustomElement, RichTextEditor } from '../../../types';\n\n/**\n * Build a new list item node while preserving marks\n */\nconst emptyListItemNode = (editor: RichTextEditor, withChildren = false): CustomElement => {\n  let children: CustomElement[] = [];\n\n  if (withChildren) {\n    const marks = Editor.marks(editor) || {};\n\n    children = [\n      {\n        type: BLOCKS.PARAGRAPH,\n        data: {},\n        children: [{ text: '', ...marks }],\n      },\n    ];\n  }\n\n  return {\n    type: BLOCKS.LIST_ITEM,\n    data: {},\n    children,\n  };\n};\n\n/**\n * Insert list item if selection is in li>p.\n */\nexport const insertListItem = (editor: RichTextEditor): boolean => {\n  if (!editor.selection) {\n    return false;\n  }\n\n  // Naming it paragraph for simplicity but can be a heading as well\n  const paragraph = getAbove(editor, { match: { type: TEXT_CONTAINERS } });\n  if (!paragraph) {\n    return false;\n  }\n\n  const [, paragraphPath] = paragraph;\n  const listItem = getParent(editor, paragraphPath);\n\n  if (!listItem) {\n    return false;\n  }\n\n  const [listItemNode, listItemPath] = listItem;\n\n  if (listItemNode.type !== BLOCKS.LIST_ITEM) {\n    return false;\n  }\n\n  // We are in a li>p (or heading)\n\n  Editor.withoutNormalizing(editor, () => {\n    if (!editor.selection) {\n      return;\n    }\n\n    // Check the cursor position in the current paragraph\n    const isAtStart = isSelectionAtBlockStart(editor);\n    const isAtEnd = isSelectionAtBlockEnd(editor);\n\n    const isAtStartOfListItem = isAtStart && isFirstChild(paragraphPath);\n    const shouldSplit = !isAtStart && !isAtEnd;\n\n    // Split the current paragraph content if necessary\n    if (shouldSplit) {\n      Transforms.splitNodes(editor);\n    }\n\n    // Insert the new li\n    const newListItemPath = isAtStartOfListItem ? listItemPath : Path.next(listItemPath);\n\n    insertNodes(\n      editor,\n      // Add an empty paragraph to the new li if We will not move some\n      // paragraphs over there.\n      emptyListItemNode(editor, !shouldSplit),\n      { at: newListItemPath }\n    );\n\n    // Move children *after* selection to the new li\n    const fromPath = isAtStart ? paragraphPath : Path.next(paragraphPath);\n    const fromStartIndex = fromPath[fromPath.length - 1] || 0;\n\n    // On split we don't add paragraph to the new li so we move\n    // content to the very beginning. Otherwise, account for the empty\n    // paragraph at the beginning by moving the content after\n    const toPath = newListItemPath.concat([shouldSplit ? 0 : 1]);\n\n    if (!isAtStartOfListItem) {\n      moveChildren(editor, {\n        at: listItemPath,\n        to: toPath,\n        fromStartIndex,\n      });\n    }\n\n    // Move cursor to the start of the new li\n    Transforms.select(editor, newListItemPath);\n    Transforms.collapse(editor, { edge: 'start' });\n  });\n\n  // Returning True skips processing other editor.insertBreak handlers\n  return true;\n};\n","/**\n * Credit: Copied & modified version from Plate's list plugin to support\n * list items with multiple children.\n *\n * See: https://github.com/udecode/plate/blob/main/packages/nodes/list\n */\nimport { BLOCKS, TEXT_CONTAINERS } from '@contentful/rich-text-types';\nimport { ELEMENT_DEFAULT, getPluginType, isBlockAboveEmpty, mockPlugin } from '@udecode/plate-core';\nimport { getListItemEntry, moveListItemUp, unwrapList, ELEMENT_LI } from '@udecode/plate-list';\nimport { onKeyDownResetNode, ResetNodePlugin, SIMULATE_BACKSPACE } from '@udecode/plate-reset-node';\n\nimport { RichTextEditor } from '../../types';\nimport { insertListItem } from './transforms/insertListItem';\n\nconst listBreak = (editor: RichTextEditor): boolean => {\n  if (!editor.selection) return false;\n\n  const res = getListItemEntry(editor, {});\n  let moved: boolean | undefined;\n\n  // If selection is in a li\n  if (res) {\n    const { list, listItem } = res;\n\n    const childNode = listItem[0].children[0];\n\n    // If selected li is empty, move it up.\n    if (\n      isBlockAboveEmpty(editor) &&\n      listItem[0].children.length === 1 &&\n      TEXT_CONTAINERS.includes(childNode.type as BLOCKS)\n    ) {\n      moved = moveListItemUp(editor, {\n        list,\n        listItem,\n      });\n\n      if (moved) return true;\n    }\n  }\n\n  const didReset = onKeyDownResetNode(\n    editor,\n    mockPlugin<ResetNodePlugin>({\n      options: {\n        rules: [\n          {\n            types: [getPluginType(editor, ELEMENT_LI)],\n            defaultType: getPluginType(editor, ELEMENT_DEFAULT),\n            predicate: () => !moved && isBlockAboveEmpty(editor),\n            onReset: (_editor) => unwrapList(_editor),\n          },\n        ],\n      },\n    })\n  )(SIMULATE_BACKSPACE);\n  if (didReset) {\n    return true;\n  }\n\n  /**\n   * If selection is in li > p, insert li.\n   */\n  if (!moved) {\n    const inserted = insertListItem(editor);\n    if (inserted) return true;\n  }\n\n  return false;\n};\n\nexport const insertListBreak = (editor: RichTextEditor) => {\n  const { insertBreak } = editor;\n\n  return () => {\n    if (listBreak(editor)) return;\n\n    insertBreak();\n  };\n};\n","/**\n * Credit: Modified version of Plate's list plugin\n * See: https://github.com/udecode/plate/blob/main/packages/nodes/list\n */\nimport { TEXT_CONTAINERS, BLOCKS } from '@contentful/rich-text-types';\nimport { findNode, TDescendant } from '@udecode/plate-core';\nimport { Editor, Node, NodeEntry, Path, Transforms } from 'slate';\n\nimport { RichTextEditor } from '../../types';\n\nconst getFirstAncestorOfType = (root: TDescendant, entry: NodeEntry): NodeEntry<TDescendant> => {\n  let ancestor: Path = Path.parent(entry[1]);\n  while ((Node.get(root, ancestor) as TDescendant).type !== BLOCKS.LIST_ITEM) {\n    ancestor = Path.parent(ancestor);\n  }\n\n  return [Node.get(root, ancestor), ancestor];\n};\n\nconst isListRoot = (node: TDescendant): boolean =>\n  [BLOCKS.UL_LIST, BLOCKS.OL_LIST].includes(node.type);\n\n/**\n * Removes the \"empty\" leading lis. Empty in this context means lis only with other lis as children.\n *\n * @returns If argument is not a list root, returns it, otherwise returns ul[] or li[].\n */\nconst trimList = <T extends TDescendant>(listRoot: T): T[] => {\n  if (!isListRoot(listRoot)) {\n    return [listRoot];\n  }\n\n  const textEntries = Array.from(Node.texts(listRoot));\n\n  const commonAncestorEntry = textEntries.reduce<NodeEntry<TDescendant>>(\n    (commonAncestor, textEntry) =>\n      Path.isAncestor(commonAncestor[1], textEntry[1])\n        ? commonAncestor\n        : Node.common(listRoot, textEntry[1], commonAncestor[1]),\n    // any list item would do, we grab the first one\n    getFirstAncestorOfType(listRoot, textEntries[0])\n  );\n\n  return isListRoot(commonAncestorEntry[0])\n    ? commonAncestorEntry[0].children\n    : [commonAncestorEntry[0]];\n};\n\n/**\n * Removes leading li when pasting a single li with a single child.\n */\nconst trimLiWrapper = <T extends TDescendant>(nodes: T[]): T[] => {\n  if (nodes.length !== 1) {\n    return nodes;\n  }\n\n  const node = nodes[0];\n\n  if (node.type !== BLOCKS.LIST_ITEM || node.children.length !== 1) {\n    return nodes;\n  }\n\n  return node.children;\n};\n\nconst unwrapTextContainerAtStart = <T extends TDescendant>(nodes: T[]): T[] => {\n  const node = nodes[0];\n\n  if (TEXT_CONTAINERS.includes(node.type)) {\n    return [...node.children, ...nodes.slice(1)];\n  }\n\n  return nodes;\n};\n\nexport const insertListFragment = (editor: RichTextEditor) => {\n  const { insertFragment } = editor;\n\n  return (fragment: TDescendant[]) => {\n    if (!editor.selection) {\n      return;\n    }\n\n    const liEntry = findNode(editor, {\n      match: { type: BLOCKS.LIST_ITEM },\n      mode: 'lowest',\n    });\n\n    if (liEntry) {\n      const nodes = unwrapTextContainerAtStart(\n        trimLiWrapper(fragment.flatMap((node) => trimList(node)))\n      );\n\n      let firstBlockIndex = nodes.findIndex((node) => Editor.isBlock(editor, node));\n\n      if (firstBlockIndex < 0) {\n        firstBlockIndex = nodes.length;\n      }\n\n      const inlines = nodes.slice(0, firstBlockIndex);\n      const blocks = nodes.slice(firstBlockIndex);\n\n      // Two calls to insertNodes are required here. Otherwise, all blocks\n      // after a text or inline element occurrence will be unwrapped for\n      // some reason.\n      Transforms.insertNodes(editor, inlines, {\n        at: editor.selection,\n        select: true,\n      });\n\n      return Transforms.insertNodes(editor, blocks, {\n        at: editor.selection,\n        select: true,\n      });\n    }\n\n    const filtered: TDescendant[] = isListRoot(fragment[0])\n      ? [{ text: '' }, ...fragment]\n      : fragment;\n\n    return insertFragment(filtered);\n  };\n};\n","/**\n * Credit: Modified version of Plate's list plugin\n * See: https://github.com/udecode/plate/blob/main/packages/nodes/list\n */\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport {\n  deleteFragment,\n  isFirstChild,\n  isSelectionAtBlockStart,\n  mockPlugin,\n} from '@udecode/plate-core';\nimport {\n  getListItemEntry,\n  removeFirstListItem,\n  removeListItem,\n  isListNested,\n} from '@udecode/plate-list';\nimport { onKeyDownResetNode, ResetNodePlugin, SIMULATE_BACKSPACE } from '@udecode/plate-reset-node';\nimport { Editor } from 'slate';\n\nimport { RichTextEditor } from '../../../types';\nimport { unwrapList } from './unwrapList';\n\nexport const deleteBackwardList = (\n  editor: RichTextEditor,\n  unit: 'character' | 'word' | 'line' | 'block'\n) => {\n  const res = getListItemEntry(editor, {});\n\n  let moved: boolean | undefined = false;\n\n  if (res) {\n    const { list, listItem } = res;\n\n    if (\n      isSelectionAtBlockStart(editor, {\n        match: (node) => node.type === BLOCKS.LIST_ITEM,\n      })\n    ) {\n      Editor.withoutNormalizing(editor, () => {\n        moved = removeFirstListItem(editor, { list, listItem });\n        if (moved) return;\n\n        moved = removeListItem(editor, { list, listItem });\n        if (moved) return;\n\n        if (isFirstChild(listItem[1]) && !isListNested(editor, list[1])) {\n          onKeyDownResetNode(\n            editor,\n            mockPlugin<ResetNodePlugin>({\n              options: {\n                rules: [\n                  {\n                    types: [BLOCKS.LIST_ITEM],\n                    defaultType: BLOCKS.PARAGRAPH,\n                    hotkey: 'backspace',\n                    predicate: () => isSelectionAtBlockStart(editor),\n                    onReset: (e) => unwrapList(e),\n                  },\n                ],\n              },\n            })\n          )(SIMULATE_BACKSPACE);\n          moved = true;\n          return;\n        }\n\n        deleteFragment(editor, {\n          unit,\n          reverse: true,\n        });\n        moved = true;\n      });\n    }\n  }\n\n  return moved;\n};\n","/**\n * Credit: Modified version of Plate's list plugin\n * See: https://github.com/udecode/plate/blob/main/packages/nodes/list\n */\nimport { LIST_ITEM_BLOCKS } from '@contentful/rich-text-types';\nimport { WithOverride } from '@udecode/plate-core';\nimport {\n  ListPlugin,\n  normalizeList,\n  deleteFragmentList,\n  deleteForwardList,\n} from '@udecode/plate-list';\n\nimport { RichTextEditor } from '../../types';\nimport { insertListBreak } from './insertListBreak';\nimport { insertListFragment } from './insertListFragment';\nimport { deleteBackwardList } from './transforms/deleteBackwardList';\n\nconst validLiChildrenTypes = LIST_ITEM_BLOCKS;\n\nexport const withList: WithOverride<RichTextEditor, ListPlugin> = (editor) => {\n  const { deleteBackward, deleteForward, deleteFragment } = editor;\n\n  editor.deleteBackward = (unit) => {\n    if (deleteBackwardList(editor, unit)) return;\n\n    deleteBackward(unit);\n  };\n\n  editor.deleteForward = (unit) => {\n    if (deleteForwardList(editor)) return;\n\n    deleteForward(unit);\n  };\n\n  editor.deleteFragment = () => {\n    if (deleteFragmentList(editor)) return;\n\n    deleteFragment();\n  };\n\n  editor.insertBreak = insertListBreak(editor);\n\n  editor.insertFragment = insertListFragment(editor);\n\n  // TODO: replace with Normalizer rules\n  editor.normalizeNode = normalizeList(editor, { validLiChildrenTypes });\n\n  return editor;\n};\n","import { BLOCKS, LIST_ITEM_BLOCKS } from '@contentful/rich-text-types';\nimport {\n  createListPlugin as createPlateListPlugin,\n  ELEMENT_LI,\n  ELEMENT_UL,\n  ELEMENT_OL,\n  ELEMENT_LIC,\n} from '@udecode/plate-list';\n\nimport { transformParagraphs, transformWrapIn } from '../../helpers/transformers';\nimport { RichTextEditor, RichTextPlugin } from '../../types';\nimport { ListOL, ListUL } from './components/List';\nimport { ListItem } from './components/ListItem';\nimport { onKeyDownList } from './onKeyDownList';\nimport {\n  isNonEmptyListItem,\n  hasListAsDirectParent,\n  insertParagraphAsChild,\n  normalizeOrphanedListItem,\n  firstNodeIsNotList,\n  replaceNodeWithListItems,\n} from './utils';\nimport { withList } from './withList';\n\nexport const createListPlugin = (): RichTextPlugin =>\n  createPlateListPlugin<RichTextEditor>({\n    normalizer: [\n      {\n        match: {\n          type: [BLOCKS.UL_LIST, BLOCKS.OL_LIST],\n        },\n        validChildren: [BLOCKS.LIST_ITEM],\n        transform: transformWrapIn(BLOCKS.LIST_ITEM),\n      },\n    ],\n    overrideByKey: {\n      [ELEMENT_UL]: {\n        type: BLOCKS.UL_LIST,\n        component: ListUL,\n        handlers: {\n          onKeyDown: onKeyDownList,\n        },\n        // The withList is added on ELEMENT_UL plugin in upstream code\n        // so we need to override it here\n        withOverrides: withList,\n      },\n      [ELEMENT_OL]: {\n        type: BLOCKS.OL_LIST,\n        component: ListOL,\n        handlers: {\n          onKeyDown: onKeyDownList,\n        },\n      },\n      // ELEMENT_LIC is a child of li, Slate does ul > li > lic + ul\n      [ELEMENT_LIC]: {\n        type: BLOCKS.PARAGRAPH,\n      },\n      [ELEMENT_LI]: {\n        type: BLOCKS.LIST_ITEM,\n        component: ListItem,\n        // @ts-expect-error\n        normalizer: [\n          {\n            validNode: hasListAsDirectParent,\n            transform: normalizeOrphanedListItem,\n          },\n          {\n            validNode: isNonEmptyListItem,\n            transform: insertParagraphAsChild,\n          },\n          {\n            validChildren: LIST_ITEM_BLOCKS,\n            transform: transformParagraphs,\n          },\n          {\n            validNode: firstNodeIsNotList,\n            transform: replaceNodeWithListItems,\n          },\n        ],\n      },\n    },\n  });\n","import * as React from 'react';\n\nimport { ListBulletedIcon, ListNumberedIcon } from '@contentful/f36-icons';\nimport { BLOCKS } from '@contentful/rich-text-types';\n\nimport { useContentfulEditor } from '../../../ContentfulEditorProvider';\nimport { focus } from '../../../helpers/editor';\nimport { isNodeTypeEnabled } from '../../../helpers/validations';\nimport { useSdkContext } from '../../../SdkProvider';\nimport { ToolbarButton } from '../../shared/ToolbarButton';\nimport { toggleList } from '../transforms/toggleList';\nimport { isListTypeActive } from '../utils';\n\nexport interface ToolbarListButtonProps {\n  isDisabled?: boolean;\n}\n\nexport function ToolbarListButton(props: ToolbarListButtonProps) {\n  const sdk = useSdkContext();\n  const editor = useContentfulEditor();\n\n  function handleClick(type: BLOCKS): () => void {\n    return () => {\n      if (!editor?.selection) return;\n\n      toggleList(editor, { type });\n\n      focus(editor);\n    };\n  }\n\n  if (!editor) return null;\n\n  return (\n    <React.Fragment>\n      {isNodeTypeEnabled(sdk.field, BLOCKS.UL_LIST) && (\n        <ToolbarButton\n          title=\"UL\"\n          testId=\"ul-toolbar-button\"\n          onClick={handleClick(BLOCKS.UL_LIST)}\n          isActive={isListTypeActive(editor, BLOCKS.UL_LIST)}\n          isDisabled={props.isDisabled}>\n          <ListBulletedIcon />\n        </ToolbarButton>\n      )}\n      {isNodeTypeEnabled(sdk.field, BLOCKS.OL_LIST) && (\n        <ToolbarButton\n          title=\"OL\"\n          testId=\"ol-toolbar-button\"\n          onClick={handleClick(BLOCKS.OL_LIST)}\n          isActive={isListTypeActive(editor, BLOCKS.OL_LIST)}\n          isDisabled={props.isDisabled}>\n          <ListNumberedIcon />\n        </ToolbarButton>\n      )}\n    </React.Fragment>\n  );\n}\n","import * as React from 'react';\n\nimport { MARKS } from '@contentful/rich-text-types';\nimport { isMarkActive, toggleMark } from '@udecode/plate-core';\n\nimport { useContentfulEditor } from '../../../ContentfulEditorProvider';\nimport { focus } from '../../../helpers/editor';\nimport { ToolbarButton } from '../../shared/ToolbarButton';\n\nexport interface MarkOptions {\n  mark: MARKS;\n  title: string;\n  icon: React.ReactElement;\n}\n\nexport const createMarkToolbarButton = ({ mark, title, icon }: MarkOptions) => {\n  const Mark = ({ isDisabled }: { isDisabled?: boolean }) => {\n    const editor = useContentfulEditor();\n\n    const handleClick = React.useCallback(() => {\n      if (!editor?.selection) return;\n\n      const isActive = isMarkActive(editor, mark);\n      editor.tracking.onToolbarAction(isActive ? 'unmark' : 'mark', { markType: mark });\n\n      toggleMark(editor, { key: mark });\n      focus(editor);\n    }, [editor]);\n\n    if (!editor) return null;\n\n    return (\n      <ToolbarButton\n        title={title}\n        testId={`${mark}-toolbar-button`}\n        onClick={handleClick}\n        isActive={isMarkActive(editor, mark)}\n        isDisabled={isDisabled}>\n        {icon}\n      </ToolbarButton>\n    );\n  };\n\n  Mark.displayName = mark;\n\n  return Mark;\n};\n","import { MARKS } from '@contentful/rich-text-types';\nimport { HotkeyPlugin, isMarkActive, KeyboardHandler, toggleMark } from '@udecode/plate-core';\nimport isHotkey from 'is-hotkey';\n\nimport { RichTextEditor } from '../../types';\n\nexport const buildMarkEventHandler =\n  (type: MARKS): KeyboardHandler<RichTextEditor, HotkeyPlugin> =>\n  (editor, { options: { hotkey } }) =>\n  (event) => {\n    if (editor.selection && hotkey && isHotkey(hotkey, event)) {\n      event.preventDefault();\n\n      const isActive = isMarkActive(editor, type);\n      editor.tracking.onShortcutAction(isActive ? 'unmark' : 'mark', { markType: type });\n\n      toggleMark(editor, { key: type as string });\n    }\n  };\n","import * as React from 'react';\n\nimport { FormatBoldIcon } from '@contentful/f36-icons';\nimport { MARKS } from '@contentful/rich-text-types';\nimport { createBoldPlugin as createDefaultBoldPlugin } from '@udecode/plate-basic-marks';\nimport { someHtmlElement } from '@udecode/plate-core';\nimport { css } from 'emotion';\nimport * as Slate from 'slate-react';\n\nimport { RichTextPlugin } from '../../types';\nimport { createMarkToolbarButton } from './components/MarkToolbarButton';\nimport { buildMarkEventHandler } from './helpers';\n\nexport const ToolbarBoldButton = createMarkToolbarButton({\n  title: 'Bold',\n  mark: MARKS.BOLD,\n  icon: <FormatBoldIcon />,\n});\n\nconst styles = {\n  bold: css({\n    fontWeight: 600,\n  }),\n};\n\nexport function Bold(props: Slate.RenderLeafProps) {\n  return (\n    <strong {...props.attributes} className={styles.bold}>\n      {props.children}\n    </strong>\n  );\n}\n\nconst isGoogleBoldWrapper = (el: HTMLElement) =>\n  el.id.startsWith('docs-internal-guid') && el.nodeName === 'B';\n\nexport const createBoldPlugin = (): RichTextPlugin =>\n  createDefaultBoldPlugin({\n    type: MARKS.BOLD,\n    component: Bold,\n    options: {\n      hotkey: ['mod+b'],\n    },\n    handlers: {\n      onKeyDown: buildMarkEventHandler(MARKS.BOLD),\n    },\n    deserializeHtml: {\n      rules: [\n        { validNodeName: ['STRONG', 'B'] },\n        {\n          validStyle: {\n            fontWeight: ['600', '700', 'bold'],\n          },\n        },\n      ],\n      query: (el) => {\n        return (\n          !isGoogleBoldWrapper(el) &&\n          !someHtmlElement(el, (node) => node.style.fontWeight === 'normal')\n        );\n      },\n    },\n  });\n","import * as React from 'react';\n\nimport { CodeIcon } from '@contentful/f36-icons';\nimport { MARKS } from '@contentful/rich-text-types';\nimport { createCodePlugin as createDefaultCodePlugin } from '@udecode/plate-basic-marks';\nimport { css } from 'emotion';\nimport * as Slate from 'slate-react';\n\nimport { RichTextPlugin } from '../../types';\nimport { createMarkToolbarButton } from './components/MarkToolbarButton';\nimport { buildMarkEventHandler } from './helpers';\n\nexport const ToolbarCodeButton = createMarkToolbarButton({\n  title: 'Code',\n  mark: MARKS.CODE,\n  icon: <CodeIcon />,\n});\n\nconst styles = {\n  code: css({\n    fontFamily: 'monospace',\n    fontSize: '.9em',\n  }),\n};\n\nexport function Code(props: Slate.RenderLeafProps) {\n  return (\n    <code {...props.attributes} className={styles.code}>\n      {props.children}\n    </code>\n  );\n}\n\nexport const createCodePlugin = (): RichTextPlugin =>\n  createDefaultCodePlugin({\n    type: MARKS.CODE,\n    component: Code,\n    options: {\n      hotkey: ['mod+/'],\n    },\n    handlers: {\n      onKeyDown: buildMarkEventHandler(MARKS.CODE),\n    },\n    deserializeHtml: {\n      rules: [\n        {\n          validNodeName: ['CODE', 'PRE'],\n        },\n        {\n          validStyle: {\n            fontFamily: ['Consolas', 'monospace'],\n          },\n        },\n      ],\n    },\n  });\n","import * as React from 'react';\n\nimport { FormatItalicIcon } from '@contentful/f36-icons';\nimport { MARKS } from '@contentful/rich-text-types';\nimport { createItalicPlugin as createDefaultItalicPlugin } from '@udecode/plate-basic-marks';\nimport { someHtmlElement } from '@udecode/plate-core';\nimport { css } from 'emotion';\nimport * as Slate from 'slate-react';\n\nimport { RichTextPlugin } from '../../types';\nimport { createMarkToolbarButton } from './components/MarkToolbarButton';\nimport { buildMarkEventHandler } from './helpers';\n\nexport const ToolbarItalicButton = createMarkToolbarButton({\n  title: 'Italic',\n  mark: MARKS.ITALIC,\n  icon: <FormatItalicIcon />,\n});\n\nconst styles = {\n  italic: css({\n    fontStyle: 'italic',\n  }),\n};\n\nexport function Italic(props: Slate.RenderLeafProps) {\n  return (\n    <em {...props.attributes} className={styles.italic}>\n      {props.children}\n    </em>\n  );\n}\n\nexport const createItalicPlugin = (): RichTextPlugin =>\n  createDefaultItalicPlugin({\n    type: MARKS.ITALIC,\n    component: Italic,\n    options: {\n      hotkey: ['mod+i'],\n    },\n    handlers: {\n      onKeyDown: buildMarkEventHandler(MARKS.ITALIC),\n    },\n    deserializeHtml: {\n      rules: [\n        { validNodeName: ['I', 'EM'] },\n        {\n          validStyle: {\n            fontStyle: 'italic',\n          },\n        },\n      ],\n      query: (el) => {\n        return !someHtmlElement(el, (node) => node.style.fontStyle === 'normal');\n      },\n    },\n  });\n","import * as React from 'react';\n\nimport { FormatUnderlinedIcon } from '@contentful/f36-icons';\nimport { MARKS } from '@contentful/rich-text-types';\nimport { createUnderlinePlugin as createDefaultUnderlinePlugin } from '@udecode/plate-basic-marks';\nimport { someHtmlElement } from '@udecode/plate-core';\nimport * as Slate from 'slate-react';\n\nimport { RichTextPlugin } from '../../types';\nimport { createMarkToolbarButton } from './components/MarkToolbarButton';\nimport { buildMarkEventHandler } from './helpers';\n\nexport const ToolbarUnderlineButton = createMarkToolbarButton({\n  title: 'Underline',\n  mark: MARKS.UNDERLINE,\n  icon: <FormatUnderlinedIcon />,\n});\n\nexport function Underline(props: Slate.RenderLeafProps) {\n  return <u {...props.attributes}>{props.children}</u>;\n}\n\nexport const createUnderlinePlugin = (): RichTextPlugin =>\n  createDefaultUnderlinePlugin({\n    type: MARKS.UNDERLINE,\n    component: Underline,\n    options: {\n      hotkey: ['mod+u'],\n    },\n    handlers: {\n      onKeyDown: buildMarkEventHandler(MARKS.UNDERLINE),\n    },\n    deserializeHtml: {\n      rules: [\n        {\n          validNodeName: ['U'],\n        },\n        {\n          validStyle: {\n            textDecoration: ['underline'],\n          },\n        },\n      ],\n      query: (el) => {\n        return !someHtmlElement(el, (node) => node.style.textDecoration === 'none');\n      },\n    },\n  });\n","import { RichTextPlugin } from '../../types';\nimport { createBoldPlugin } from './Bold';\nimport { createCodePlugin } from './Code';\nimport { createItalicPlugin } from './Italic';\nimport { createUnderlinePlugin } from './Underline';\n\nexport const createMarksPlugin = (): RichTextPlugin => ({\n  key: 'Marks',\n  plugins: [createBoldPlugin(), createCodePlugin(), createItalicPlugin(), createUnderlinePlugin()],\n});\n","import { BLOCKS, TEXT_CONTAINERS } from '@contentful/rich-text-types';\nimport { getParent } from '@udecode/plate-core';\nimport { Text } from 'slate';\nimport { CustomElement } from 'types';\n\nimport { INLINE_TYPES } from '../../helpers/editor';\nimport { transformWrapIn } from '../../helpers/transformers';\nimport { NormalizerRule } from './types';\n\nconst isInline = (node: CustomElement) => INLINE_TYPES.includes(node.type);\nconst isTextContainer = (node: CustomElement) => TEXT_CONTAINERS.includes(node.type as BLOCKS);\n\n// Base rules are rules that must be enforced at all times regardless\n// of which plugins are enabled.\nexport const baseRules: Required<NormalizerRule>[] = [\n  {\n    // Wrap orphaned text nodes in a paragraph\n    match: Text.isText,\n    validNode: (editor, [, path]) => {\n      const parent = getParent(editor, path)?.[0] as CustomElement;\n      return !!parent && (isTextContainer(parent) || isInline(parent) || editor.isVoid(parent));\n    },\n    transform: (editor, entry) => {\n      return transformWrapIn(BLOCKS.PARAGRAPH)(editor, entry);\n    },\n  },\n  {\n    // Wrap orphaned inline nodes in a paragraph,\n    match: {\n      type: INLINE_TYPES,\n    },\n    validNode: (editor, [, path]) => {\n      const parent = getParent(editor, path)?.[0] as CustomElement;\n      return !!parent && isTextContainer(parent);\n    },\n    transform: transformWrapIn(BLOCKS.PARAGRAPH),\n  },\n];\n","import { NodeEntry, Text, Node, Element } from 'slate';\nimport { RichTextEditor } from 'types';\n\nimport { NodeValidator, NodeTransformer } from './types';\n\nexport class NormalizerError extends Error {}\n\nexport const createValidatorFromTypes =\n  (types: string[]): NodeValidator =>\n  (_, [node]) => {\n    return Element.isElement(node) && types.includes(node.type);\n  };\n\nexport const getChildren = (editor: RichTextEditor, [node, path]: NodeEntry): NodeEntry[] => {\n  if (Text.isText(node)) {\n    return [];\n  }\n\n  return Array.from(Node.children(editor, path));\n};\n\nexport const createTransformerFromObject = (\n  transforms: Record<string, NodeTransformer>\n): NodeTransformer => {\n  // A default transformer must always be provided\n  const fallback = transforms['default'];\n\n  if (!fallback) {\n    throw new NormalizerError('A default transformer MUST be provided');\n  }\n\n  return (editor, entry) => {\n    const [node] = entry;\n    const key = Element.isElement(node) ? node.type : 'default';\n\n    const transformer = transforms[key] || fallback;\n\n    return transformer(editor, entry);\n  };\n};\n","import { match, getPluginType } from '@udecode/plate-core';\nimport isPlainObject from 'is-plain-obj';\nimport { Editor, NodeEntry } from 'slate';\n\nimport { transformRemove } from '../../helpers/transformers';\nimport { RichTextEditor, RichTextPlugin } from '../../types';\nimport { baseRules } from './baseRules';\nimport { NormalizerRule, NodeTransformer, NodeValidator } from './types';\nimport {\n  NormalizerError,\n  createValidatorFromTypes,\n  getChildren,\n  createTransformerFromObject,\n} from './utils';\n\nexport const withNormalizer = (editor: RichTextEditor) => {\n  const rules: Required<NormalizerRule>[] = baseRules;\n\n  // Derive normalization rules from other plugin's configurations\n  for (const p of editor.plugins as RichTextPlugin[]) {\n    const { normalizer: _rules } = p;\n\n    if (!_rules) {\n      continue;\n    }\n\n    for (const _rule of _rules) {\n      // Clone to avoid mutation bugs\n      const rule = { ..._rule };\n\n      if (!rule.match && !p.isElement) {\n        throw new NormalizerError('rule.match MUST be defined in a non-element plugin');\n      }\n\n      // By default we filter elements with given plugin type\n      if (!rule.match) {\n        rule.match = {\n          type: getPluginType(editor, p.key),\n        };\n      }\n\n      // Conditional transformation e.g.\n      // {\n      //   [BLOCKS.EMBEDDED_ASSET]: transformLift,\n      //   default?: transformRemove\n      // }\n      //\n      if (isPlainObject(rule.transform)) {\n        if ('validNode' in rule) {\n          // I can't think of a use case. Disabled to prevent misuse\n          throw new NormalizerError(\n            'conditional transformations are not supported in validNode rules'\n          );\n        }\n\n        rule.transform = createTransformerFromObject({\n          default: transformRemove,\n          ...rule.transform,\n        });\n      }\n\n      // By default all invalid nodes are removed.\n      if (!rule.transform) {\n        rule.transform = transformRemove;\n      }\n\n      // Convert Types array syntax to a validator function\n      if ('validChildren' in rule && Array.isArray(rule.validChildren)) {\n        rule.validChildren = createValidatorFromTypes(rule.validChildren);\n      }\n\n      rules.push(rule as Required<NormalizerRule>);\n    }\n  }\n\n  // Wrap transformer in a withoutNormalizing() call to avoid unnecessary\n  // normalization cycles.\n  const _transform = (tr: NodeTransformer, entry: NodeEntry) => {\n    Editor.withoutNormalizing(editor, () => {\n      tr(editor, entry);\n    });\n  };\n\n  const { normalizeNode } = editor;\n\n  editor.normalizeNode = (entry) => {\n    const [node] = entry;\n    const children = getChildren(editor, entry);\n\n    // The order of validNode rules Vs validChildren doesn't matter. Slate\n    // will always perform normalization in a depth-first fashion.\n    for (const rule of rules) {\n      if (!match(node, rule.match)) {\n        continue;\n      }\n\n      // Normalize node\n      if ('validNode' in rule && !rule.validNode(editor, entry)) {\n        _transform(rule.transform as NodeTransformer, entry);\n        return;\n      }\n\n      // Normalize node.children\n      if ('validChildren' in rule) {\n        // It can not be an array since we enforced it earlier\n        const isValidChild = rule.validChildren as NodeValidator;\n\n        const invalidChildEntry = children.find((entry) => !isValidChild(editor, entry));\n\n        if (invalidChildEntry) {\n          _transform(rule.transform as NodeTransformer, invalidChildEntry);\n          return;\n        }\n      }\n    }\n\n    return normalizeNode(entry);\n  };\n\n  return editor;\n};\n","import { RichTextPlugin } from '../../types';\nimport { withNormalizer } from './withNormalizer';\n\nexport const createNormalizerPlugin = (): RichTextPlugin => ({\n  key: 'NormalizerPlugin',\n  // @ts-expect-error\n  withOverrides: withNormalizer,\n});\n","import * as React from 'react';\n\nimport tokens from '@contentful/f36-tokens';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { css } from 'emotion';\nimport { RenderElementProps } from 'slate-react';\n\nconst styles = {\n  [BLOCKS.PARAGRAPH]: css`\n    line-height: ${tokens.lineHeightDefault};\n    margin-bottom: 1.5em;\n  `,\n};\n\nexport function Paragraph(props: RenderElementProps) {\n  return (\n    <div {...props.attributes} className={styles[BLOCKS.PARAGRAPH]}>\n      {props.children}\n    </div>\n  );\n}\n","export function isEmbedElement(element: HTMLElement) {\n  return (\n    element.hasAttribute('data-embedded-entity-inline-id') ||\n    element.hasAttribute('data-entity-type')\n  );\n}\n\nexport function isEmptyElement(element: HTMLElement) {\n  return element.textContent === '';\n}\n","import { BLOCKS } from '@contentful/rich-text-types';\nimport { HotkeyPlugin, KeyboardHandler } from '@udecode/plate-core';\nimport { createParagraphPlugin as createDefaultParagraphPlugin } from '@udecode/plate-paragraph';\nimport isHotkey from 'is-hotkey';\n\nimport { isInlineOrText, toggleElement } from '../../helpers/editor';\nimport { transformUnwrap, transformLift } from '../../helpers/transformers';\nimport { RichTextEditor, RichTextPlugin } from '../../types';\nimport { Paragraph } from './Paragraph';\nimport { isEmbedElement, isEmptyElement } from './utils';\n\nconst buildParagraphKeyDownHandler: KeyboardHandler<RichTextEditor, HotkeyPlugin> =\n  (editor, { options: { hotkey } }) =>\n  (event) => {\n    if (editor.selection && hotkey && isHotkey(hotkey, event)) {\n      toggleElement(editor, { activeType: BLOCKS.PARAGRAPH, inactiveType: BLOCKS.PARAGRAPH });\n    }\n  };\n\nexport const createParagraphPlugin = (): RichTextPlugin => {\n  const config: Partial<RichTextPlugin> = {\n    type: BLOCKS.PARAGRAPH,\n    component: Paragraph,\n    options: {\n      hotkey: ['mod+opt+0'],\n    },\n    handlers: {\n      onKeyDown: buildParagraphKeyDownHandler,\n    },\n    softBreak: [\n      // create a new line with SHIFT+Enter inside a paragraph\n      {\n        hotkey: 'shift+enter',\n        query: {\n          allow: BLOCKS.PARAGRAPH,\n        },\n      },\n    ],\n    deserializeHtml: {\n      rules: [\n        {\n          validNodeName: ['P', 'DIV'],\n        },\n      ],\n      query: (el) => !isEmptyElement(el) && !isEmbedElement(el),\n    },\n    normalizer: [\n      {\n        validChildren: (_, [node]) => isInlineOrText(node),\n        transform: {\n          [BLOCKS.PARAGRAPH]: transformUnwrap,\n          default: transformLift,\n        },\n      },\n    ],\n  };\n\n  return createDefaultParagraphPlugin(config);\n};\n","/**\n * Remove empty spreadsheets columns/rows for performance reasons.\n */\nexport const sanitizeSheets = (doc: Document): Document => {\n  // Ensure we are inside a spreadsheet i.e. not pasting\n  // a table from within the editor\n  const supported = [\n    // Google Sheets\n    'google-sheets-html-origin',\n    // MS Excel\n    'meta[content=\"Excel.Sheet\"]',\n    'meta[content*=\"Microsoft Excel\"]',\n  ];\n\n  if (!supported.some((selector) => !!doc.querySelector(selector))) {\n    return doc;\n  }\n\n  const isEmptyElement = (el: Element) => {\n    return (el.textContent ?? '').trim() === '';\n  };\n\n  const tables = Array.from(doc.querySelectorAll('table'));\n\n  for (const table of tables) {\n    // Remove empty columns first!\n    table.querySelectorAll('tr').forEach((row) => {\n      isEmptyElement(row) && row.remove();\n    });\n\n    const rows = Array.from(table.querySelectorAll('tr'));\n\n    // CSS :nth-of-type index starts from 1\n    let colIndex = 1;\n\n    // eslint-disable-next-line\n    while (true) {\n      const cells = rows\n        .map((row) => row.querySelector(`th:nth-of-type(${colIndex}), td:nth-of-type(${colIndex})`))\n        .filter((cell): cell is Element => !!cell);\n\n      // No more columns\n      if (cells.length === 0) {\n        break;\n      }\n\n      const isEmpty = cells.every((cell) => isEmptyElement(cell));\n\n      // Don't increment on deletion because columns will be shifted\n      // left anyway. Incrementing may result in skipping\n      if (!isEmpty) {\n        colIndex += 1;\n        continue;\n      }\n\n      cells.forEach((cell) => cell.remove());\n    }\n  }\n\n  return doc;\n};\n","import { sanitizeSheets } from './sanitizeSheets';\n\n/**\n * Remove all <style> tags\n */\nconst stripStyleTags = (doc: Document): Document => {\n  doc.querySelectorAll('style').forEach((e) => {\n    e.remove();\n  });\n\n  return doc;\n};\n\nconst transformers = [stripStyleTags, sanitizeSheets];\n\nexport const sanitizeHTML = (html: string): string => {\n  // Parse the HTML string and pipe it through our transformers\n  const doc = transformers.reduce(\n    (value, cb) => cb(value),\n    new DOMParser().parseFromString(html, 'text/html')\n  );\n\n  return doc.body.innerHTML\n    .replace(/>\\s+</g, '><') // Remove whitespace between tags\n    .replace(/(.*)<div.*>(<table.*<\\/table>)<\\/div>(.*)/g, '$1$2$3'); // remove div containers from tables\n};\n","import { KEY_DESERIALIZE_HTML } from '@udecode/plate-core';\n\nimport { RichTextPlugin } from '../../types';\nimport { sanitizeHTML } from './utils/sanitizeHTML';\n\n/**\n * Get x-slate-fragment attribute from data-slate-fragment\n */\nconst catchSlateFragment = /data-slate-fragment=\"(.+?)\"/m;\nexport const getSlateFragmentAttribute = (dataTransfer: DataTransfer): string | void => {\n  const htmlData = dataTransfer.getData('text/html');\n  const [, fragment] = htmlData.match(catchSlateFragment) || [];\n  return fragment;\n};\n\n/**\n * Get the x-slate-fragment attribute that exist in text/html data\n * and append it to the DataTransfer object\n */\nexport const ensureXSlateFragment = (dataTransfer: DataTransfer): DataTransfer => {\n  if (!dataTransfer.getData('application/x-slate-fragment')) {\n    const fragment = getSlateFragmentAttribute(dataTransfer);\n    if (fragment) {\n      const clipboardData = new DataTransfer();\n      dataTransfer.types.forEach((type) => {\n        clipboardData.setData(type, dataTransfer.getData(type));\n      });\n      clipboardData.setData('application/x-slate-fragment', fragment);\n      return clipboardData;\n    }\n  }\n  return dataTransfer;\n};\n\nexport const createPasteHTMLPlugin = (): RichTextPlugin => ({\n  key: 'PasteHTMLPlugin',\n  withOverrides: (editor) => {\n    const { insertData } = editor;\n    editor.insertData = (data) => insertData(ensureXSlateFragment(data));\n    return editor;\n  },\n  inject: {\n    pluginsByKey: {\n      [KEY_DESERIALIZE_HTML]: {\n        editor: {\n          insertData: {\n            format: 'text/html',\n            // Perform custom content transformation *before* pasting\n            transformData: sanitizeHTML,\n          },\n        },\n      },\n    },\n  },\n});\n","import * as React from 'react';\n\nimport tokens from '@contentful/f36-tokens';\nimport { css } from 'emotion';\nimport { RenderElementProps } from 'slate-react';\n\nconst style = css({\n  margin: '0 0 1.3125rem',\n  borderLeft: `6px solid ${tokens.gray200}`,\n  paddingLeft: '0.875rem',\n  fontStyle: 'normal',\n});\n\nexport function Quote(props: RenderElementProps) {\n  return (\n    <blockquote {...props.attributes} className={style}>\n      {props.children}\n    </blockquote>\n  );\n}\n","import { BLOCKS, TEXT_CONTAINERS } from '@contentful/rich-text-types';\nimport {\n  getAbove,\n  getBlockAbove,\n  isAncestorEmpty,\n  isLastChild,\n  PlateEditor,\n  hasSingleChild,\n} from '@udecode/plate-core';\n\n/**\n * Returns true if we are:\n * 1) Inside a blockquote\n * 2) With no only one child paragraph/heading and\n * 3) that child is empty\n */\nexport const shouldResetQuoteOnBackspace = (editor: PlateEditor) => {\n  const container = getAbove(editor, {\n    match: { type: TEXT_CONTAINERS },\n    mode: 'lowest',\n  });\n\n  if (!container) {\n    return false;\n  }\n\n  if (!isAncestorEmpty(editor, container[0])) {\n    return false;\n  }\n\n  const quote = getBlockAbove(editor, {\n    match: { type: BLOCKS.QUOTE },\n    mode: 'lowest',\n  });\n\n  if (!quote) {\n    return false;\n  }\n\n  if (hasSingleChild(quote[0]) && isLastChild(quote, container[1])) {\n    return true;\n  }\n\n  return false;\n};\n","import { BLOCKS } from '@contentful/rich-text-types';\nimport { HotkeyPlugin, KeyboardHandler, PlateEditor } from '@udecode/plate-core';\nimport isHotkey from 'is-hotkey';\nimport { Transforms, Element, Editor } from 'slate';\n\nimport { isBlockSelected } from '../../helpers/editor';\nimport { TrackingPluginActions } from '../../plugins/Tracking';\nimport { CustomElement, RichTextEditor } from '../../types';\n\nexport function toggleQuote(\n  editor: PlateEditor,\n  logAction?: TrackingPluginActions['onShortcutAction'] | TrackingPluginActions['onToolbarAction']\n): void {\n  if (!editor.selection) return;\n\n  const isActive = isBlockSelected(editor, BLOCKS.QUOTE);\n\n  logAction?.(isActive ? 'remove' : 'insert', { nodeType: BLOCKS.QUOTE });\n\n  Editor.withoutNormalizing(editor, () => {\n    if (!editor.selection) return;\n\n    Transforms.unwrapNodes(editor, {\n      match: (node) => Element.isElement(node) && (node as CustomElement).type === BLOCKS.QUOTE,\n      split: true,\n    });\n\n    if (!isActive) {\n      const quote = {\n        type: BLOCKS.QUOTE,\n        data: {},\n        children: [],\n      };\n\n      Transforms.wrapNodes(editor, quote);\n    }\n  });\n}\n\nexport const onKeyDownToggleQuote: KeyboardHandler<RichTextEditor, HotkeyPlugin> =\n  (editor, plugin) => (event) => {\n    const { hotkey } = plugin.options;\n\n    if (hotkey && isHotkey(hotkey, event)) {\n      event.preventDefault();\n      toggleQuote(editor, editor.tracking.onShortcutAction);\n    }\n  };\n","import { BLOCKS, TEXT_CONTAINERS } from '@contentful/rich-text-types';\nimport { WithOverride } from '@udecode/plate-core';\nimport { getAbove } from '@udecode/plate-core';\nimport { BaseRange, BaseSelection, Element, Node, Point, Transforms } from 'slate';\n\nimport { RichTextEditor } from '../../types';\n\nexport const withQuote: WithOverride<RichTextEditor> = (editor) => {\n  const { insertFragment } = editor;\n\n  editor.insertFragment = (fragment) => {\n    const startingNode = fragment.length && fragment[0];\n    const startsWithBlockquote =\n      Element.isElement(startingNode) && startingNode.type === BLOCKS.QUOTE;\n\n    const containerEntry = getAbove(editor, {\n      match: {\n        type: TEXT_CONTAINERS,\n      },\n    });\n    const containerIsNotEmpty = containerEntry && Node.string(containerEntry[0]) !== '';\n\n    if (startsWithBlockquote && containerIsNotEmpty) {\n      const { selection } = editor;\n      const isContentSelected = (selection: BaseSelection): selection is BaseRange =>\n        !!selection && Point.compare(selection.anchor, selection.focus) !== 0;\n      // if something is selected (highlighted) we replace the selection\n      if (isContentSelected(selection)) {\n        Transforms.delete(editor, { at: selection });\n      }\n\n      // get the cursor entry again, it may be different after deletion\n      const containerEntry = getAbove(editor, {\n        match: {\n          type: TEXT_CONTAINERS,\n        },\n      });\n\n      const containerIsNotEmpty = containerEntry && Node.string(containerEntry[0]) !== '';\n\n      if (containerIsNotEmpty) {\n        Transforms.insertNodes(editor, fragment);\n        return;\n      }\n    }\n\n    insertFragment(fragment);\n  };\n\n  return editor;\n};\n","import { BLOCKS, CONTAINERS } from '@contentful/rich-text-types';\n\nimport { transformLift, transformUnwrap } from '../../helpers/transformers';\nimport { RichTextPlugin } from '../../types';\nimport { Quote } from './components/Quote';\nimport { shouldResetQuoteOnBackspace } from './shouldResetQuote';\nimport { onKeyDownToggleQuote, toggleQuote } from './toggleQuote';\nimport { withQuote } from './withQuote';\n\nexport function createQuotePlugin(): RichTextPlugin {\n  return {\n    key: BLOCKS.QUOTE,\n    type: BLOCKS.QUOTE,\n    isElement: true,\n    component: Quote,\n    options: {\n      hotkey: 'mod+shift+1',\n    },\n    handlers: {\n      onKeyDown: onKeyDownToggleQuote,\n    },\n    deserializeHtml: {\n      rules: [\n        {\n          validNodeName: 'BLOCKQUOTE',\n        },\n      ],\n    },\n    resetNode: [\n      {\n        // toggle off blockquote on backspace when it's empty\n        hotkey: 'backspace',\n        types: [BLOCKS.QUOTE],\n        predicate: shouldResetQuoteOnBackspace,\n        onReset: toggleQuote,\n      },\n    ],\n    normalizer: [\n      {\n        validChildren: CONTAINERS[BLOCKS.QUOTE],\n        transform: {\n          [BLOCKS.QUOTE]: transformUnwrap,\n          default: transformLift,\n        },\n      },\n    ],\n    withOverrides: withQuote,\n  };\n}\n","import * as React from 'react';\n\nimport { QuoteIcon } from '@contentful/f36-icons';\nimport { BLOCKS } from '@contentful/rich-text-types';\n\nimport { useContentfulEditor } from '../../../ContentfulEditorProvider';\nimport { isBlockSelected, focus } from '../../../helpers/editor';\nimport { ToolbarButton } from '../../shared/ToolbarButton';\nimport { toggleQuote } from '../toggleQuote';\n\nexport interface ToolbarQuoteButtonProps {\n  isDisabled?: boolean;\n}\n\nexport function ToolbarQuoteButton(props: ToolbarQuoteButtonProps) {\n  const editor = useContentfulEditor();\n\n  function handleOnClick() {\n    if (!editor) return;\n\n    toggleQuote(editor, editor.tracking.onToolbarAction);\n    focus(editor);\n  }\n\n  if (!editor) return null;\n\n  return (\n    <ToolbarButton\n      title=\"Blockquote\"\n      onClick={handleOnClick}\n      testId=\"quote-toolbar-button\"\n      isDisabled={props.isDisabled}\n      isActive={isBlockSelected(editor, BLOCKS.QUOTE)}>\n      <QuoteIcon />\n    </ToolbarButton>\n  );\n}\n","import { INLINES } from '@contentful/rich-text-types';\nimport { createSelectOnBackspacePlugin as createDefaultSelectPlugin } from '@udecode/plate-select';\n\nimport { RichTextPlugin } from '../../types';\n\nexport const createSelectOnBackspacePlugin = (): RichTextPlugin =>\n  createDefaultSelectPlugin({\n    options: {\n      query: {\n        // `createTextPlugin` is taking care of block elements\n        allow: [INLINES.EMBEDDED_ENTRY],\n      },\n    },\n  });\n","export function getCaretTopPoint() {\n  const sel = document.getSelection();\n  if (!sel) return;\n  const r = sel.getRangeAt(0);\n  let rect;\n  let r2;\n  // supposed to be textNode in most cases\n  // but div[contenteditable] when empty\n  const node = r.startContainer;\n  const offset = r.startOffset;\n  if (offset > 0) {\n    // new range, don't influence DOM state\n    r2 = document.createRange();\n    r2.setStart(node, offset - 1);\n    r2.setEnd(node, offset);\n    // https://developer.mozilla.org/en-US/docs/Web/API/range.getBoundingClientRect\n    // IE9, Safari?(but look good in Safari 8)\n    rect = r2.getBoundingClientRect();\n    return { left: rect.right, top: rect.top };\n    // @ts-expect-error\n  } else if (offset < node.length) {\n    r2 = document.createRange();\n    // similar but select next on letter\n    r2.setStart(node, offset);\n    r2.setEnd(node, offset + 1);\n    rect = r2.getBoundingClientRect();\n    return { left: rect.left, top: rect.top };\n  } else {\n    // textNode has length\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element.getBoundingClientRect\n    // @ts-expect-error\n    rect = node.getBoundingClientRect();\n    // @ts-expect-error\n    const styles = getComputedStyle(node);\n    const lineHeight = parseInt(styles.lineHeight);\n    const fontSize = parseInt(styles.fontSize);\n    // roughly half the whitespace... but not exactly\n    const delta = (lineHeight - fontSize) / 2;\n    return { left: rect.left, top: rect.top + delta };\n  }\n}\n\nexport function closePanel(editorId: string) {\n  document.dispatchEvent(\n    new CustomEvent('close-rte-palette-commands', {\n      detail: {\n        editorId,\n      },\n    })\n  );\n}\n\nexport function openPanel(editorId: string) {\n  document.dispatchEvent(\n    new CustomEvent('open-rte-palette-commands', {\n      detail: {\n        editorId,\n      },\n    })\n  );\n}\n","// import debounce from 'lodash/debounce';\n\nimport { RichTextPlugin } from '../../types';\nimport { closePanel, openPanel } from './helpers';\n\nconst SLASH_COMMANDS_PLUGIN_KEY = 'SlashCommands';\n\n// TODO: Explore a solution using marks and ReactDOM.createPortal to activate the commands panel\nexport function createSlashCommandsPlugin(): RichTextPlugin {\n  return {\n    key: SLASH_COMMANDS_PLUGIN_KEY,\n    type: SLASH_COMMANDS_PLUGIN_KEY,\n    handlers: {\n      onClick: (editor) => () => {\n        closePanel(editor.id);\n      },\n      onKeyDown: (editor) => (event) => {\n        closePanel(editor.id);\n\n        if (event.key === '/') {\n          openPanel(editor.id);\n        }\n      },\n    },\n  };\n}\n","import * as React from 'react';\n\nimport { Card, Text } from '@contentful/f36-components';\nimport { css } from 'emotion';\n\nimport { getCaretTopPoint } from './helpers';\n\ntype TopLeftPosition = { top: number; left: number };\n\ninterface SlashCommandsPaletteProps {\n  editorId: string;\n}\n\nconst style = {\n  container: ({ top, left }: TopLeftPosition) =>\n    css({\n      position: 'fixed',\n      top: top - 14, // 14px comes from the `Card` component padding value\n      left: left + 10, // 10px just to have a better reading\n      zIndex: 1,\n      boxShadow: '0 5px 15px rgba(0, 0, 0, 0.15)',\n      borderRadius: '8px',\n      userSelect: 'none',\n    }),\n};\n\nexport function SlashCommandsPalette({ editorId }: SlashCommandsPaletteProps) {\n  const [position, setPosition] = React.useState<TopLeftPosition | null>(null);\n  const [isOpen, setIsOpen] = React.useState(false);\n  // The user is not annoyed every time they type `/`\n  const MAX_TRIES = 3;\n  const [currentTries, setCurrentTries] = React.useState(0);\n\n  React.useEffect(() => {\n    function handler(event) {\n      if (editorId !== event.detail.editorId) return;\n\n      const topLeft = getCaretTopPoint();\n      if (!topLeft) return;\n\n      setPosition(topLeft);\n      setIsOpen(true);\n      setCurrentTries((curr) => curr + 1);\n    }\n\n    document.addEventListener('open-rte-palette-commands', handler);\n\n    return () => {\n      document.removeEventListener('open-rte-palette-commands', handler);\n    };\n  }, [editorId]);\n\n  React.useEffect(() => {\n    function handler(event) {\n      if (editorId !== event.detail.editorId) return;\n\n      closePanel();\n    }\n\n    document.addEventListener('close-rte-palette-commands', handler);\n\n    return () => document.removeEventListener('close-rte-palette-commands', handler);\n  }, [editorId]);\n\n  React.useEffect(() => {\n    if (!isOpen) return;\n\n    function handler() {\n      closePanel();\n    }\n\n    window.addEventListener('resize', handler);\n    window.addEventListener('scroll', handler, true);\n\n    return () => {\n      window.removeEventListener('resize', handler);\n      window.removeEventListener('scroll', handler, true);\n    };\n  }, [isOpen]);\n\n  function closePanel() {\n    setIsOpen(false);\n    setPosition(null);\n  }\n\n  if (!isOpen || !position || currentTries > MAX_TRIES) return null;\n\n  return (\n    <div className={style.container(position)} data-test-id=\"rte-slash-commands\">\n      <Card>\n        <Text>Slash commands are temporarily unavailable.</Text>\n      </Card>\n    </div>\n  );\n}\n","import { getPluginType, TElement, getAbove, insertNodes, someNode } from '@udecode/plate-core';\nimport { ELEMENT_TABLE, ELEMENT_TR, getEmptyRowNode } from '@udecode/plate-table';\nimport { Transforms, Path, Editor } from 'slate';\n\nimport { RichTextEditor } from '../../../types';\n\nconst addRow = (editor: RichTextEditor, getNextRowPath: (currentRowPath: Path) => Path) => {\n  if (\n    someNode(editor, {\n      match: { type: getPluginType(editor, ELEMENT_TABLE) },\n    })\n  ) {\n    const currentRowItem = getAbove(editor, {\n      match: { type: getPluginType(editor, ELEMENT_TR) },\n    });\n\n    if (currentRowItem) {\n      const [currentRowElem, currentRowPath] = currentRowItem;\n      const nextRowPath = getNextRowPath(currentRowPath);\n\n      insertNodes<TElement>(\n        editor,\n        // @ts-expect-error\n        getEmptyRowNode(editor, {\n          header: false,\n          colCount: currentRowElem.children.length,\n        }),\n        {\n          at: nextRowPath,\n          // Note: this selects the last cell of the new row\n          select: true,\n        }\n      );\n\n      // Select the first cell in the current row\n      Transforms.select(editor, Editor.start(editor, nextRowPath));\n    }\n  }\n};\n\nexport const addRowBelow = (editor: RichTextEditor) => {\n  addRow(editor, (currentRowPath) => {\n    return Path.next(currentRowPath);\n  });\n};\n\nexport const addRowAbove = (editor: RichTextEditor) => {\n  addRow(editor, (currentRowPath) => {\n    // The new row will be in in-place of the old row\n    return currentRowPath;\n  });\n};\n","import { getPluginType, TElement, getAbove, insertNodes, someNode } from '@udecode/plate-core';\nimport {\n  getEmptyCellNode,\n  TablePluginOptions,\n  ELEMENT_TABLE,\n  ELEMENT_TD,\n  ELEMENT_TH,\n} from '@udecode/plate-table';\nimport { Path } from 'slate';\n\nimport { RichTextEditor } from '../../../types';\n\nconst addColumn = (\n  editor: RichTextEditor,\n  { header }: TablePluginOptions,\n  getNextCellPath: (currentCellPath: Path) => Path\n) => {\n  if (\n    someNode(editor, {\n      match: { type: getPluginType(editor, ELEMENT_TABLE) },\n    })\n  ) {\n    const currentCellItem = getAbove(editor, {\n      match: {\n        type: [getPluginType(editor, ELEMENT_TD), getPluginType(editor, ELEMENT_TH)],\n      },\n    });\n\n    const currentTableItem = getAbove(editor, {\n      match: { type: getPluginType(editor, ELEMENT_TABLE) },\n    });\n\n    if (currentCellItem && currentTableItem) {\n      const nextCellPath = getNextCellPath(currentCellItem[1]);\n      const newCellPath = nextCellPath.slice();\n      const replacePathPos = newCellPath.length - 2;\n\n      currentTableItem[0].children.forEach((_, rowIdx) => {\n        newCellPath[replacePathPos] = rowIdx;\n\n        insertNodes<TElement>(\n          editor,\n          // @ts-expect-error\n          getEmptyCellNode(editor, { header: header && rowIdx === 0 }),\n          {\n            at: newCellPath,\n            // Select the first cell of the new column\n            select: rowIdx === 0,\n          }\n        );\n      });\n    }\n  }\n};\n\nexport const addColumnRight = (editor: RichTextEditor, options: TablePluginOptions) => {\n  addColumn(editor, options, (currentCellPath) => Path.next(currentCellPath));\n};\n\nexport const addColumnLeft = (editor: RichTextEditor, options: TablePluginOptions) => {\n  addColumn(editor, options, (currentCellPath) => currentCellPath);\n};\n","import { BLOCKS } from '@contentful/rich-text-types';\nimport { getAbove, setNodes, getChildren } from '@udecode/plate-core';\n\nimport { RichTextEditor } from '../../../types';\n\nexport const setHeader = (editor: RichTextEditor, enable?: boolean) => {\n  const tableItem = getAbove(editor, {\n    match: { type: BLOCKS.TABLE },\n  });\n\n  if (!tableItem) {\n    return;\n  }\n\n  const firstRow = getChildren(tableItem)[0];\n\n  if (!firstRow) {\n    return;\n  }\n\n  getChildren(firstRow).forEach(([, path]) => {\n    setNodes(\n      editor,\n      {\n        type: enable ? BLOCKS.TABLE_HEADER_CELL : BLOCKS.TABLE_CELL,\n      },\n      { at: path }\n    );\n  });\n};\n","import { BLOCKS } from '@contentful/rich-text-types';\nimport { getParent } from '@udecode/plate-core';\nimport { getAbove, getChildren, isFirstChild, isAncestorEmpty } from '@udecode/plate-core';\nimport {\n  ELEMENT_TABLE,\n  ELEMENT_TH,\n  ELEMENT_TD,\n  ELEMENT_TR,\n  insertTable,\n} from '@udecode/plate-table';\nimport { Element, Node, NodeEntry } from 'slate';\nimport { Transforms, Path, Editor, Ancestor } from 'slate';\n\nimport { isBlockSelected, getAncestorPathFromSelection } from '../../helpers/editor';\nimport { CustomElement, RichTextEditor, TextOrCustomElement } from '../../types';\n\nexport function insertTableAndFocusFirstCell(editor: RichTextEditor): void {\n  insertTable(editor, { header: true });\n  replaceEmptyParagraphWithTable(editor);\n}\n\nexport function isTableActive(editor: RichTextEditor) {\n  const tableElements = [ELEMENT_TABLE, ELEMENT_TH, ELEMENT_TR, ELEMENT_TD];\n  return tableElements.some((el) => isBlockSelected(editor, el));\n}\n\nexport function isTableHeaderEnabled(editor: RichTextEditor) {\n  const tableItem = getAbove(editor, {\n    match: {\n      type: BLOCKS.TABLE,\n    },\n  });\n\n  if (!tableItem) {\n    return false;\n  }\n\n  const firstRow = getChildren(tableItem)[0];\n\n  if (!firstRow) {\n    return false;\n  }\n\n  return getChildren(firstRow).every(([node]) => {\n    return node.type === BLOCKS.TABLE_HEADER_CELL;\n  });\n}\n\nexport function replaceEmptyParagraphWithTable(editor: RichTextEditor) {\n  const tablePath = getAncestorPathFromSelection(editor);\n  if (!tablePath || isFirstChild(tablePath)) return;\n\n  const previousPath = Path.previous(tablePath);\n  if (!previousPath) return;\n\n  const [nodes] = Editor.nodes(editor, {\n    at: previousPath,\n    match: (node) => (node as CustomElement).type === BLOCKS.PARAGRAPH,\n  });\n  if (!nodes) return;\n\n  const [previousNode] = nodes;\n  const isPreviousNodeTextEmpty = isAncestorEmpty(editor, previousNode as Ancestor);\n  if (isPreviousNodeTextEmpty) {\n    // Switch table with previous empty paragraph\n    Transforms.moveNodes(editor, { at: tablePath, to: previousPath });\n    // Remove previous paragraph that now is under the table\n    Transforms.removeNodes(editor, { at: tablePath });\n  }\n}\n\n/**\n * Returns the number of cells in a given row vs the table width\n *\n * Note: We should only get different table rows cell counts in between\n * normalization cycles.\n */\nexport const getNoOfMissingTableCellsInRow = (editor: RichTextEditor, [, rowPath]: NodeEntry) => {\n  const parent = getParent(editor, rowPath);\n\n  // This is ensured by normalization. The error is here just in case\n  if (!parent) {\n    throw new Error('table rows must be wrapped in a table node');\n  }\n\n  const [, tablePath] = parent;\n\n  // The longest table row determines its width\n  const tableWidth = Math.max(\n    ...Array.from(Node.children(editor, tablePath)).map(\n      ([, path]) => Array.from(Node.children(editor, path)).length\n    )\n  );\n\n  const rowWidth = Array.from(Node.children(editor, rowPath)).length;\n\n  return tableWidth - rowWidth;\n};\n\nexport const createEmptyTableCells = (count: number): Node[] => {\n  const emptyTableCell = {\n    type: BLOCKS.TABLE_CELL,\n    data: {},\n    children: [\n      {\n        type: BLOCKS.PARAGRAPH,\n        data: {},\n        children: [{ text: '' }],\n      },\n    ],\n  };\n\n  return new Array(count).fill(emptyTableCell);\n};\n\nexport const isNotEmpty = (editor: RichTextEditor, [, path]: NodeEntry) => {\n  return Array.from(Node.children(editor, path)).length !== 0;\n};\n\nexport const isTable = (node: TextOrCustomElement) => {\n  return Element.isElement(node) && node.type === BLOCKS.TABLE;\n};\n","import React from 'react';\n\nimport { IconButton, Menu } from '@contentful/f36-components';\nimport { ChevronDownIcon } from '@contentful/f36-icons';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { getAbove } from '@udecode/plate-core';\nimport { TablePluginOptions, deleteColumn, deleteRow, deleteTable } from '@udecode/plate-table';\nimport { css } from 'emotion';\nimport { Editor } from 'slate';\nimport * as Slate from 'slate-react';\n\nimport { useContentfulEditor } from '../../../ContentfulEditorProvider';\nimport { getNodeEntryFromSelection, getTableSize } from '../../../helpers/editor';\nimport { RichTextTrackingActionName } from '../../../plugins/Tracking';\nimport { RichTextEditor } from '../../../types';\nimport { addRowAbove, addColumnLeft, addColumnRight, addRowBelow, setHeader } from '../actions';\nimport { isTableHeaderEnabled } from '../helpers';\n\nexport const styles = {\n  topRight: css({\n    position: 'absolute',\n    top: '6px',\n    right: '5px',\n  }),\n};\n\nconst getCurrentTableSize = (\n  editor: RichTextEditor\n): Record<'numRows' | 'numColumns', number> | null => {\n  const [table] = getNodeEntryFromSelection(editor, BLOCKS.TABLE);\n  return table ? getTableSize(table) : null;\n};\n\ntype TableAction = (editor: RichTextEditor, options: TablePluginOptions) => void;\n\nexport const TableActions = () => {\n  const editor = useContentfulEditor();\n  const isDisabled = Slate.useReadOnly();\n  const [isOpen, setOpen] = React.useState(false);\n  const [isHeaderEnabled, setHeaderEnabled] = React.useState(false);\n\n  const close = React.useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  React.useEffect(() => {\n    setHeaderEnabled(Boolean(editor && isTableHeaderEnabled(editor)));\n  }, [editor]);\n\n  const canInsertRowAbove = React.useMemo(() => {\n    if (!editor) {\n      return false;\n    }\n\n    const headerCell = getAbove(editor, {\n      match: {\n        type: BLOCKS.TABLE_HEADER_CELL,\n      },\n    });\n\n    return !headerCell;\n  }, [editor]);\n\n  const toggleHeader = React.useCallback(() => {\n    close();\n\n    if (!editor) {\n      return;\n    }\n\n    const value = !isHeaderEnabled;\n\n    setHeaderEnabled(value);\n    setHeader(editor, value);\n  }, [editor, close, isHeaderEnabled]);\n\n  const action = React.useCallback(\n    (cb: TableAction, type: 'insert' | 'remove', element: 'Table' | 'Row' | 'Column') => () => {\n      if (!editor?.selection) return;\n      close();\n\n      const tableSize = getCurrentTableSize(editor);\n\n      Editor.withoutNormalizing(editor, () => {\n        cb(editor, { header: isHeaderEnabled });\n      });\n      // Tracking\n      const actionName = `${type}Table${element === 'Table' ? '' : element}`;\n      editor.tracking.onViewportAction(actionName as RichTextTrackingActionName, { tableSize });\n    },\n    [editor, isHeaderEnabled, close]\n  );\n\n  if (isDisabled) {\n    return null;\n  }\n\n  return (\n    <Menu\n      placement=\"left\"\n      isOpen={isOpen}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={close}>\n      <Menu.Trigger>\n        <IconButton\n          size=\"small\"\n          variant=\"transparent\"\n          tabIndex={-1}\n          className={styles.topRight}\n          icon={<ChevronDownIcon />}\n          aria-label=\"Open table menu\"\n          testId=\"cf-table-actions-button\"\n        />\n      </Menu.Trigger>\n      <Menu.List>\n        <Menu.Item onClick={action(addRowAbove, 'insert', 'Row')} disabled={!canInsertRowAbove}>\n          Add row above\n        </Menu.Item>\n        <Menu.Item onClick={action(addRowBelow, 'insert', 'Row')}>Add row below</Menu.Item>\n        <Menu.Item onClick={action(addColumnLeft, 'insert', 'Column')}>Add column left</Menu.Item>\n        <Menu.Item onClick={action(addColumnRight, 'insert', 'Column')}>Add column right</Menu.Item>\n        <Menu.Divider />\n        <Menu.Item onClick={toggleHeader}>\n          {isHeaderEnabled ? 'Disable table header' : 'Enable table header'}\n        </Menu.Item>\n        <Menu.Divider />\n        <Menu.Item onClick={action(deleteRow, 'remove', 'Row')}>Delete row</Menu.Item>\n        <Menu.Item onClick={action(deleteColumn, 'remove', 'Column')}>Delete column</Menu.Item>\n        <Menu.Item onClick={action(deleteTable, 'remove', 'Table')}>Delete table</Menu.Item>\n      </Menu.List>\n    </Menu>\n  );\n};\n","import * as React from 'react';\n\nimport tokens from '@contentful/f36-tokens';\nimport { TableCell } from '@contentful/rich-text-types';\nimport { css } from 'emotion';\nimport * as Slate from 'slate-react';\n\nimport { TableActions } from './TableActions';\n\nconst style = css`\n  border: 1px solid ${tokens.gray400};\n  border-collapse: collapse;\n  padding: 10px 12px;\n  min-width: 48px;\n  position: relative;\n  vertical-align: top;\n\n  div:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const Cell = (props: Slate.RenderElementProps) => {\n  const isSelected = Slate.useSelected();\n\n  return (\n    <td\n      {...props.attributes}\n      // may include `colspan` and/or `rowspan`\n      {...(props.element.data as TableCell['data'])}\n      className={style}>\n      {isSelected && <TableActions />}\n      {props.children}\n    </td>\n  );\n};\n","import * as React from 'react';\n\nimport tokens from '@contentful/f36-tokens';\nimport { TableHeaderCell } from '@contentful/rich-text-types';\nimport { css } from 'emotion';\nimport * as Slate from 'slate-react';\n\nimport { TableActions } from './TableActions';\n\nconst style = css`\n  background-clip: padding-box;\n  background-color: ${tokens.gray200};\n  border: 1px solid ${tokens.gray400};\n  border-collapse: collapse;\n  padding: 10px 12px;\n  font-weight: ${tokens.fontWeightNormal};\n  text-align: left;\n  min-width: 48px;\n  position: relative;\n\n  div:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const HeaderCell = (props: Slate.RenderElementProps) => {\n  const isSelected = Slate.useSelected();\n\n  return (\n    <th\n      {...props.attributes}\n      // may include `colspan` and/or `rowspan`\n      {...(props.element.data as TableHeaderCell['data'])}\n      className={style}>\n      {isSelected && <TableActions />}\n      {props.children}\n    </th>\n  );\n};\n","import * as React from 'react';\n\nimport tokens from '@contentful/f36-tokens';\nimport { css } from 'emotion';\nimport * as Slate from 'slate-react';\n\nconst style = css`\n  border: 1px solid ${tokens.gray400};\n  border-collapse: collapse;\n\n  &:hover td {\n    background-color: transparent !important;\n  }\n`;\n\nexport const Row = (props: Slate.RenderElementProps) => (\n  <tr {...props.attributes} className={style}>\n    {props.children}\n  </tr>\n);\n","import * as React from 'react';\n\nimport tokens from '@contentful/f36-tokens';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { css } from 'emotion';\nimport * as Slate from 'slate-react';\n\nconst style = css`\n  margin-bottom: 1.5em;\n  border-collapse: collapse;\n  border-radius: 5px;\n  border-style: hidden;\n  box-shadow: 0 0 0 1px ${tokens.gray400};\n  width: 100%;\n  table-layout: fixed;\n  overflow: hidden;\n`;\n\nexport const Table = (props: Slate.RenderElementProps) => {\n  return (\n    <div data-block-type={BLOCKS.TABLE}>\n      <table className={style} {...props.attributes}>\n        <tbody>{props.children}</tbody>\n      </table>\n    </div>\n  );\n};\n","import { BLOCKS } from '@contentful/rich-text-types';\nimport { getText } from '@udecode/plate-core';\nimport { Element, Node } from 'slate';\n\nimport { insertEmptyParagraph } from '../../helpers/editor';\nimport { CustomElement, RichTextEditor } from '../../types';\nimport { isTable } from './helpers';\n\n/**\n * Removes table wrappers when pasting a single table cell\n *\n * In Plate/Slate, copying the content of a table cell wraps\n * it in a <table><tr><td>{content}</td></tr></table> even\n * when copying partial cell content.\n *\n * That's really annoying as there is no way to remove the table\n * wrappers in that case.\n */\nconst trimUnnecessaryTableWrapper = (node: Node): Node[] => {\n  if (!Element.isElement(node)) {\n    return [node];\n  }\n\n  // must be a table with a single row\n  if (node.type !== BLOCKS.TABLE || node.children?.length !== 1) {\n    return [node];\n  }\n\n  const row = node.children[0] as CustomElement;\n\n  // the row must contain a single cell\n  if (row?.children?.length !== 1) {\n    return [node];\n  }\n\n  const cell = row.children[0] as CustomElement;\n\n  return cell.children;\n};\n\nexport const insertTableFragment = (editor: RichTextEditor) => {\n  const { insertFragment } = editor;\n\n  return (fragments: Node[]) => {\n    if (!editor.selection) {\n      return;\n    }\n\n    fragments = fragments.flatMap(trimUnnecessaryTableWrapper);\n\n    // We need to make sure we have a new, empty and clean paragraph in order to paste tables as-is due to how Slate behaves\n    // More info: https://github.com/ianstormtaylor/slate/pull/4489 and https://github.com/ianstormtaylor/slate/issues/4542\n    const isInsertingTable = fragments.some((fragment) => isTable(fragment as CustomElement));\n    const isTableFirstFragment =\n      fragments.findIndex((fragment) => isTable(fragment as CustomElement)) === 0;\n    const currentLineHasText = getText(editor, editor.selection?.focus.path) !== '';\n\n    if (isInsertingTable && isTableFirstFragment && currentLineHasText) {\n      insertEmptyParagraph(editor);\n    }\n\n    return insertFragment(fragments);\n  };\n};\n","import { KeyboardEvent } from 'react';\n\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport {\n  HotkeyPlugin,\n  KeyboardHandler,\n  WithPlatePlugin,\n  getAbove,\n  isLastChild,\n} from '@udecode/plate-core';\nimport { getTableCellEntry, onKeyDownTable as defaultKeyDownTable } from '@udecode/plate-table';\n\nimport { insertEmptyParagraph } from '../../helpers/editor';\nimport { RichTextEditor } from '../../types';\nimport { addRowBelow } from './actions';\n\nexport const onKeyDownTable: KeyboardHandler<RichTextEditor, HotkeyPlugin> = (editor, plugin) => {\n  const defaultHandler = defaultKeyDownTable(editor, plugin as WithPlatePlugin);\n\n  return (event: KeyboardEvent) => {\n    // This fixes `Cannot resolve a Slate point from DOM point: [object HTMLDivElement]` when typing while the cursor is before table\n    const windowSelection = window.getSelection();\n    if (windowSelection) {\n      // @ts-expect-error\n      const blockType = windowSelection.anchorNode.attributes?.['data-block-type']?.value; // this attribute comes from `plugins/Table/components/Table.tsx`\n      const isBeforeTable = blockType === BLOCKS.TABLE;\n\n      if (isBeforeTable) {\n        if (event.key === 'Enter') {\n          const above = getAbove(editor, { match: { type: BLOCKS.TABLE } });\n\n          if (!above) return;\n\n          const [, tablePath] = above;\n\n          insertEmptyParagraph(editor, { at: tablePath, select: true });\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n        return;\n      }\n    }\n\n    // Pressing Tab on the last cell creates a new row\n    // Otherwise, jumping between cells is handled in the defaultKeyDownTable\n    if (event.key === 'Tab' && !event.shiftKey) {\n      event.preventDefault();\n      const res = getTableCellEntry(editor, {});\n\n      if (res) {\n        const { tableElement, tableRow, tableCell } = res;\n\n        const isLastCell = isLastChild(tableRow, tableCell[1]);\n        const isLastRow = isLastChild(tableElement, tableRow[1]);\n\n        if (isLastRow && isLastCell) {\n          addRowBelow(editor);\n\n          // skip default handler\n          return;\n        }\n      }\n    }\n\n    defaultHandler(event);\n  };\n};\n","import {\n  BLOCKS,\n  INLINES,\n  TOP_LEVEL_BLOCKS,\n  VOID_BLOCKS,\n  CONTAINERS,\n} from '@contentful/rich-text-types';\n\nconst inlines = Object.values(INLINES).map((type) => ({ type }));\n\nexport default {\n  document: {\n    nodes: [\n      {\n        types: TOP_LEVEL_BLOCKS.map((type) => ({ type })),\n      },\n    ],\n  },\n\n  blocks: {\n    [BLOCKS.PARAGRAPH]: {\n      nodes: [\n        {\n          match: [...inlines, { object: 'text' }],\n        },\n      ],\n    },\n    [BLOCKS.HEADING_1]: {\n      nodes: [\n        {\n          match: [...inlines, { object: 'text' }],\n        },\n      ],\n    },\n    [BLOCKS.HEADING_2]: {\n      nodes: [\n        {\n          match: [...inlines, { object: 'text' }],\n        },\n      ],\n    },\n    [BLOCKS.HEADING_3]: {\n      nodes: [\n        {\n          match: [...inlines, { object: 'text' }],\n        },\n      ],\n    },\n    [BLOCKS.HEADING_4]: {\n      nodes: [\n        {\n          match: [...inlines, { object: 'text' }],\n        },\n      ],\n    },\n    [BLOCKS.HEADING_5]: {\n      nodes: [\n        {\n          match: [...inlines, { object: 'text' }],\n        },\n      ],\n    },\n    [BLOCKS.HEADING_6]: {\n      nodes: [\n        {\n          match: [...inlines, { object: 'text' }],\n        },\n      ],\n    },\n\n    ...VOID_BLOCKS.reduce(\n      (blocks, nodeType) => ({\n        ...blocks,\n        [nodeType]: { isVoid: true },\n      }),\n      {}\n    ),\n\n    // TODO: add list schema\n\n    [BLOCKS.QUOTE]: {\n      nodes: [\n        {\n          match: [CONTAINERS[BLOCKS.QUOTE].map((type) => ({ type }))],\n          min: 1,\n        },\n      ],\n      normalize: (editor, error) => {\n        if (error.code === 'child_type_invalid') {\n          return editor.unwrapBlockByKey(error.node.key, BLOCKS.QUOTE);\n        }\n      },\n    },\n  },\n\n  inlines: {\n    [INLINES.HYPERLINK]: {\n      nodes: [\n        {\n          match: [{ object: 'text' }],\n        },\n      ],\n    },\n    [INLINES.ENTRY_HYPERLINK]: {\n      nodes: [\n        {\n          match: [{ object: 'text' }],\n        },\n      ],\n    },\n    [INLINES.ASSET_HYPERLINK]: {\n      nodes: [\n        {\n          match: [{ object: 'text' }],\n        },\n      ],\n    },\n    [INLINES.EMBEDDED_ENTRY]: {\n      isVoid: true,\n    },\n  },\n};\n","import * as contentfulSlateJSAdapter from '@contentful/contentful-slatejs-adapter';\nimport { documentToPlainTextString } from '@contentful/rich-text-plain-text-renderer';\n\nimport Schema from '../../constants/Schema';\nimport { RichTextEditor } from '../../types';\n\nexport function getCharacterCount(editor: RichTextEditor) {\n  const document = contentfulSlateJSAdapter.toContentfulDocument({\n    document: editor.children,\n    schema: Schema,\n  });\n\n  return documentToPlainTextString(document).length;\n}\n","import { RichTextPlugin } from '../../types';\nimport { getCharacterCount } from './utils';\n\nexport type RichTextTrackingActionName =\n  // Elements\n  | 'edit'\n  | 'insert'\n  | 'remove'\n  // Marks\n  | 'mark'\n  | 'unmark'\n  // Tables\n  | 'insertTable'\n  | 'insertTableRow'\n  | 'insertTableColumn'\n  | 'removeTable'\n  | 'removeTableRow'\n  | 'removeTableColumn'\n  // Copy & Paste\n  | 'paste'\n  | 'invalidTablePaste'\n  // Hyperlinks\n  | 'cancelCreateHyperlinkDialog'\n  | 'cancelEditHyperlinkDialog'\n  | 'linkRendered'\n  | 'openCreateHyperlinkDialog'\n  | 'openEditHyperlinkDialog'\n  | 'unlinkHyperlinks'\n  // Embeds\n  | 'openCreateEmbedDialog'\n  | 'cancelCreateEmbedDialog';\n\nexport type RichTextTrackingActionHandler = (\n  name: RichTextTrackingActionName,\n  data: Record<string, unknown>\n) => unknown;\n\nexport interface TrackingPluginActions {\n  onViewportAction: (\n    actionName: RichTextTrackingActionName,\n    data?: Record<string, unknown>\n  ) => ReturnType<RichTextTrackingActionHandler>;\n\n  onShortcutAction: (\n    actionName: RichTextTrackingActionName,\n    data?: Record<string, unknown>\n  ) => ReturnType<RichTextTrackingActionHandler>;\n\n  onToolbarAction: (\n    actionName: RichTextTrackingActionName,\n    data?: Record<string, unknown>\n  ) => ReturnType<RichTextTrackingActionHandler>;\n\n  onCommandPaletteAction: (\n    actionName: RichTextTrackingActionName,\n    data?: Record<string, unknown>\n  ) => ReturnType<RichTextTrackingActionHandler>;\n}\n\nconst actionOrigin = {\n  TOOLBAR: 'toolbar-icon',\n  SHORTCUT: 'shortcut',\n  VIEWPORT: 'viewport-interaction',\n  COMMAND_PALETTE: 'command-palette',\n};\n\nexport function getPastingSource(data: DataTransfer) {\n  const textHtml = data.getData('text/html');\n  const doc = new DOMParser().parseFromString(textHtml, 'text/html');\n\n  if (doc.querySelector('[id*=\"docs-internal-guid\"]')) {\n    return 'Google Docs';\n  }\n\n  if (doc.querySelector('google-sheets-html-origin') || doc.querySelector('[data-sheets-value]')) {\n    return 'Google Spreadsheets';\n  }\n\n  if (doc.querySelector('meta[content*=\"Microsoft Excel\"]')) {\n    return 'Microsoft Excel';\n  }\n\n  if (doc.querySelector('meta[content*=\"Microsoft Word\"]')) {\n    return 'Microsoft Word';\n  }\n\n  // TODO: MS Word Online doesn't give us specific tags, we might need to have a closer look at its tracking result since we are using generic values to identify it\n  if (\n    doc.querySelector('[style*=\"Arial_MSFontService\"]') &&\n    (doc.querySelector('.TextRun') || doc.querySelector('.OutlineElement'))\n  ) {\n    return 'Microsoft Word Online';\n  }\n\n  if (doc.querySelector('meta[content=\"Cocoa HTML Writer\"]')) {\n    return 'Apple Notes';\n  }\n\n  if (doc.querySelector('[style*=\"Slack-Lato, Slack-Fractions\"]')) {\n    return 'Slack';\n  }\n\n  return 'Unknown';\n}\n\nexport const createTrackingPlugin = (onAction: RichTextTrackingActionHandler): RichTextPlugin => {\n  const trackingActions: TrackingPluginActions = {\n    onViewportAction: (actionName: RichTextTrackingActionName, data = {}) =>\n      onAction(actionName, { origin: actionOrigin.VIEWPORT, ...data }),\n\n    onShortcutAction: (actionName: RichTextTrackingActionName, data = {}) =>\n      onAction(actionName, { origin: actionOrigin.SHORTCUT, ...data }),\n\n    onToolbarAction: (actionName: RichTextTrackingActionName, data = {}) =>\n      onAction(actionName, { origin: actionOrigin.TOOLBAR, ...data }),\n\n    onCommandPaletteAction: (actionName: RichTextTrackingActionName, data = {}) =>\n      onAction(actionName, {\n        origin: actionOrigin.COMMAND_PALETTE,\n        ...data,\n      }),\n  };\n\n  return {\n    key: 'TrackingPlugin',\n    withOverrides: (editor) => {\n      const { insertData } = editor;\n\n      editor.tracking = trackingActions;\n\n      editor.insertData = (data) => {\n        const isCopyAndPaste = data.types.length !== 0;\n        if (isCopyAndPaste) {\n          const characterCountSelection = window.getSelection()?.toString().length;\n          const characterCountBefore = getCharacterCount(editor);\n\n          setTimeout(() => {\n            const characterCountAfter = getCharacterCount(editor);\n\n            trackingActions.onShortcutAction('paste', {\n              characterCountAfter,\n              characterCountBefore,\n              characterCountSelection,\n              source: getPastingSource(data),\n            });\n          });\n        }\n\n        insertData(data);\n      };\n\n      return editor;\n    },\n  };\n};\n","import { BLOCKS } from '@contentful/rich-text-types';\nimport { Element } from 'slate';\n\nimport { getPastingSource } from '../../plugins/Tracking';\nimport { CustomElement, RichTextEditor } from '../../types';\nimport type { NodeTransformer } from '../Normalizer';\n\nfunction hasTables(nodes: CustomElement[]) {\n  return nodes.some(({ type }) => {\n    return type === BLOCKS.TABLE;\n  });\n}\n\nconst isTableHeaderCell = ({ type }) => type === BLOCKS.TABLE_HEADER_CELL;\n\nfunction hasHeadersOutsideFirstRow(nodes: CustomElement[]) {\n  return nodes\n    .filter(({ type }) => type === BLOCKS.TABLE)\n    .flatMap(({ children }) => children.slice(1) as CustomElement[])\n    .some(({ children }) => (children as CustomElement[]).some(isTableHeaderCell));\n}\n\nexport function addTableTrackingEvents(editor: RichTextEditor) {\n  const { insertData } = editor;\n  editor.insertData = (data: DataTransfer) => {\n    const html = data.getData('text/html');\n\n    if (html) {\n      const { children: markupBefore } = editor;\n      insertData(data);\n      const { children: markupAfter } = editor;\n      setTimeout(() => {\n        if (hasTables(markupBefore)) return;\n        if (hasTables(markupAfter)) {\n          editor.tracking.onViewportAction('paste', {\n            tablePasted: true,\n            source: getPastingSource(data),\n            hasHeadersOutsideFirstRow: hasHeadersOutsideFirstRow(markupAfter),\n          });\n        }\n      }, 1);\n    } else {\n      insertData(data);\n    }\n  };\n}\n\nexport const withInvalidCellChildrenTracking = (transformer: NodeTransformer): NodeTransformer => {\n  return (editor, childEntry) => {\n    const [node] = childEntry;\n\n    if (Element.isElement(node)) {\n      editor.tracking?.onViewportAction('invalidTablePaste', {\n        nodeType: node.type,\n      });\n    }\n\n    return transformer(editor, childEntry);\n  };\n};\n","import { BLOCKS, CONTAINERS } from '@contentful/rich-text-types';\nimport { getBlockAbove, getParent, getLastChildPath, WithPlatePlugin } from '@udecode/plate-core';\nimport {\n  createTablePlugin as createDefaultTablePlugin,\n  ELEMENT_TABLE,\n  ELEMENT_TD,\n  ELEMENT_TH,\n  ELEMENT_TR,\n  withTable,\n} from '@udecode/plate-table';\nimport { NodeEntry, Path, Transforms } from 'slate';\n\nimport { isRootLevel } from '../../helpers/editor';\nimport { transformLift, transformParagraphs, transformWrapIn } from '../../helpers/transformers';\nimport { RichTextPlugin, CustomElement, RichTextEditor } from '../../types';\nimport { Cell } from './components/Cell';\nimport { HeaderCell } from './components/HeaderCell';\nimport { Row } from './components/Row';\nimport { Table } from './components/Table';\nimport { createEmptyTableCells, getNoOfMissingTableCellsInRow, isNotEmpty } from './helpers';\nimport { insertTableFragment } from './insertTableFragment';\nimport { onKeyDownTable } from './onKeyDownTable';\nimport { addTableTrackingEvents, withInvalidCellChildrenTracking } from './tableTracking';\n\nexport const createTablePlugin = (): RichTextPlugin =>\n  createDefaultTablePlugin({\n    type: BLOCKS.TABLE,\n    handlers: {\n      onKeyDown: onKeyDownTable,\n    },\n    withOverrides: (editor, plugin) => {\n      // injects important fixes from plate's original table plugin\n      withTable(editor, plugin as WithPlatePlugin<{}, {}>);\n\n      addTableTrackingEvents(editor as RichTextEditor);\n\n      editor.insertFragment = insertTableFragment(editor);\n\n      return editor;\n    },\n    overrideByKey: {\n      [ELEMENT_TABLE]: {\n        type: BLOCKS.TABLE,\n        component: Table,\n        normalizer: [\n          {\n            validNode: isNotEmpty,\n          },\n          {\n            // Move to root level unless nested\n            validNode: (editor, [, path]) => {\n              const isNestedTable = !!getBlockAbove(editor, {\n                at: path,\n                match: {\n                  type: [BLOCKS.TABLE_CELL, BLOCKS.TABLE_HEADER_CELL],\n                },\n              });\n\n              return isRootLevel(path) || isNestedTable;\n            },\n            transform: transformLift,\n          },\n          {\n            validChildren: CONTAINERS[BLOCKS.TABLE],\n          },\n        ],\n      },\n      [ELEMENT_TR]: {\n        type: BLOCKS.TABLE_ROW,\n        component: Row,\n        normalizer: [\n          {\n            validChildren: CONTAINERS[BLOCKS.TABLE_ROW],\n            transform: transformWrapIn(BLOCKS.TABLE_CELL),\n          },\n          {\n            // Remove empty rows\n            validNode: isNotEmpty,\n          },\n          {\n            // Parent must be a table\n            validNode: (editor, [, path]) => {\n              const parent = getParent(editor, path)?.[0];\n              return parent && parent.type === BLOCKS.TABLE;\n            },\n            transform: transformWrapIn(BLOCKS.TABLE),\n          },\n          {\n            // ensure consistent number of cells in each row\n            validNode: (editor, entry) => {\n              return getNoOfMissingTableCellsInRow(editor, entry) === 0;\n            },\n            transform: (editor, entry) => {\n              const howMany = getNoOfMissingTableCellsInRow(editor, entry);\n              const at = Path.next(getLastChildPath(entry as NodeEntry<CustomElement>));\n\n              Transforms.insertNodes(editor, createEmptyTableCells(howMany), {\n                at,\n              });\n            },\n          },\n        ],\n      },\n      [ELEMENT_TH]: {\n        type: BLOCKS.TABLE_HEADER_CELL,\n        component: HeaderCell,\n        normalizer: [\n          {\n            validChildren: CONTAINERS[BLOCKS.TABLE_HEADER_CELL],\n            transform: withInvalidCellChildrenTracking(transformParagraphs),\n          },\n        ],\n      },\n      [ELEMENT_TD]: {\n        type: BLOCKS.TABLE_CELL,\n        component: Cell,\n        normalizer: [\n          {\n            validChildren: CONTAINERS[BLOCKS.TABLE_CELL],\n            transform: withInvalidCellChildrenTracking(transformParagraphs),\n          },\n        ],\n      },\n    } as Record<string, Partial<RichTextPlugin>>,\n  });\n","import * as React from 'react';\n\nimport { TableIcon } from '@contentful/f36-icons';\n\nimport { useContentfulEditor } from '../../../ContentfulEditorProvider';\nimport { focus } from '../../../helpers/editor';\nimport { ToolbarButton } from '../../shared/ToolbarButton';\nimport { insertTableAndFocusFirstCell, isTableActive } from './../helpers';\n\nexport interface ToolbarTableButtonProps {\n  isDisabled: boolean | undefined;\n}\n\nexport function ToolbarTableButton(props: ToolbarTableButtonProps) {\n  const editor = useContentfulEditor();\n  const isActive = editor && isTableActive(editor);\n\n  async function handleClick() {\n    if (!editor) return;\n\n    editor.tracking.onToolbarAction('insertTable');\n    insertTableAndFocusFirstCell(editor);\n    focus(editor);\n  }\n\n  if (!editor) return null;\n\n  return (\n    <ToolbarButton\n      title=\"Table\"\n      testId=\"table-toolbar-button\"\n      onClick={handleClick}\n      // TODO: active state looks off since the button will be disabled. Do we still need it?\n      isActive={isActive}\n      isDisabled={props.isDisabled}>\n      <TableIcon />\n    </ToolbarButton>\n  );\n}\n","import { BLOCKS, TEXT_CONTAINERS } from '@contentful/rich-text-types';\nimport { getAbove, isAncestorEmpty, queryNode, TNode } from '@udecode/plate-core';\nimport { Editor, Ancestor, Transforms, Range, Location } from 'slate';\n\nimport { RichTextEditor, RichTextPlugin } from '../../types';\n\nexport function createTextPlugin(): RichTextPlugin {\n  return {\n    key: 'TextPlugin',\n    handlers: {\n      // Triple selection in a non-Firefox browser undesirably selects\n      // the start of the next block. Editor.unhangRange helps removing\n      // the extra block at the end.\n      onMouseUp: (editor) => () => {\n        if (!editor.selection) {\n          return;\n        }\n\n        Transforms.setSelection(editor, Editor.unhangRange(editor, editor.selection));\n      },\n    },\n    withOverrides: (editor) => {\n      // Reverts the change made upstream that caused the cursor\n      // to be trapped inside inline elements.\n      //\n      // Reverts https://github.com/ianstormtaylor/slate/pull/4578/\n      // Related https://github.com/ianstormtaylor/slate/issues/4704\n      const { insertText } = editor;\n\n      editor.insertText = (text) => {\n        const { selection } = editor;\n\n        // If the cursor is at the end of an inline, move it outside\n        // before inserting\n        if (selection && Range.isCollapsed(selection)) {\n          const inlinePath = Editor.above(editor, {\n            match: (n) => Editor.isInline(editor, n),\n            mode: 'highest',\n          })?.[1];\n\n          if (inlinePath && Editor.isEnd(editor, selection.anchor, inlinePath)) {\n            const point = Editor.after(editor, inlinePath);\n            Transforms.setSelection(editor, {\n              anchor: point,\n              focus: point,\n            });\n          }\n        }\n\n        return insertText(text);\n      };\n\n      // When pressing delete instead of backspace\n      const { deleteForward, deleteBackward } = editor;\n\n      editor.deleteBackward = (unit) => {\n        deleteEmptyParagraph(unit, editor, deleteBackward);\n      };\n\n      editor.deleteForward = (unit) => {\n        deleteEmptyParagraph(unit, editor, deleteForward);\n      };\n\n      fixPasteAsPlainText(editor);\n\n      return editor;\n    },\n  };\n}\n\nfunction deleteEmptyParagraph(\n  unit: 'character' | 'word' | 'line' | 'block',\n  editor: RichTextEditor,\n  deleteFunction: Function\n) {\n  const entry = getAbove(editor, {\n    match: {\n      type: TEXT_CONTAINERS,\n    },\n  });\n\n  if (entry) {\n    const [paragraphOrHeading, path] = entry;\n    const isTextEmpty = isAncestorEmpty(editor, paragraphOrHeading as Ancestor);\n    // We ignore paragraphs/headings that are children of ul, ol, blockquote, tables, etc\n    const isRootLevel = path.length === 1;\n    const hasSiblings = editor.children.length > 1; // prevent editor from losing focus\n\n    if (isTextEmpty && isRootLevel && hasSiblings) {\n      Transforms.removeNodes(editor, { at: path });\n\n      const prevNode = Editor.before(editor, editor.selection as Location, {\n        unit,\n      });\n\n      if (prevNode) {\n        const [prevCell] = Editor.nodes<TNode>(editor, {\n          match: (node) =>\n            queryNode([node as TNode, prevNode.path], {\n              allow: [BLOCKS.EMBEDDED_ASSET, BLOCKS.EMBEDDED_ENTRY, BLOCKS.HR],\n            }),\n          at: prevNode,\n        });\n\n        if (prevCell) {\n          Transforms.select(editor, prevNode);\n        }\n      }\n    } else {\n      deleteFunction(unit);\n    }\n  } else {\n    deleteFunction(unit);\n  }\n}\n\n/**\n * To be compatible with the old behavior we need to treat each 2 consecutive\n * line breaks as a new paragraph when pasting as plain text (also known as\n * paste and match style in macOS)\n */\nfunction fixPasteAsPlainText(editor: RichTextEditor) {\n  editor.insertTextData = (data: DataTransfer): boolean => {\n    const text = data.getData('text/plain');\n\n    if (!text) {\n      return false;\n    }\n\n    const lines = text.split(/\\n{2}/);\n    let split = false;\n\n    for (const line of lines) {\n      // empty lines\n      if (/^(\\r\\n?|\\n)$/.test(line)) {\n        continue;\n      }\n\n      if (split) {\n        Transforms.splitNodes(editor, { always: true });\n      }\n\n      editor.insertText(line);\n      split = true;\n    }\n\n    return true;\n  };\n}\n","import { BLOCKS } from '@contentful/rich-text-types';\nimport { createTrailingBlockPlugin } from '@udecode/plate-trailing-block';\n\nimport { RichTextPlugin } from '../../types';\n\nexport const createTrailingParagraphPlugin = (): RichTextPlugin => {\n  return createTrailingBlockPlugin({\n    options: {\n      type: BLOCKS.PARAGRAPH,\n      level: 0,\n    },\n  });\n};\n","import { isFirstChild } from '@udecode/plate-core';\n\nimport { isRootLevel } from '../../helpers/editor';\nimport { RichTextPlugin } from '../../types';\n\nexport const createVoidsPlugin = (): RichTextPlugin => ({\n  key: 'VoidsPlugin',\n  exitBreak: [\n    {\n      // Inserts a new paragraph *before* a void element if it's the very first\n      // node on the editor\n      hotkey: 'enter',\n      before: true,\n      query: {\n        filter: ([node, path]) => isRootLevel(path) && isFirstChild(path) && !!node.isVoid,\n      },\n    },\n    {\n      // Inserts a new paragraph on enter when a void element is focused\n      hotkey: 'enter',\n      // exploit the internal use of Array.slice(0, level + 1) by the exitBreak plugin\n      // to stay in the parent element\n      level: -2,\n      query: {\n        filter: ([node, path]) => !(isRootLevel(path) && isFirstChild(path)) && !!node.isVoid,\n      },\n    },\n  ],\n});\n","import { FieldExtensionSDK } from '@contentful/app-sdk';\nimport {\n  createDeserializeAstPlugin,\n  createDeserializeHtmlPlugin,\n  PlateProps,\n} from '@udecode/plate-core';\nimport { createDeserializeDocxPlugin } from '@udecode/plate-serializer-docx';\n\nimport { RichTextPlugin } from '../types';\nimport { createSoftBreakPlugin, createExitBreakPlugin, createResetNodePlugin } from './Break';\nimport { createDragAndDropPlugin } from './DragAndDrop';\nimport {\n  createEmbeddedAssetBlockPlugin,\n  createEmbeddedEntryBlockPlugin,\n} from './EmbeddedEntityBlock';\nimport { createEmbeddedEntityInlinePlugin } from './EmbeddedEntityInline';\nimport { createHeadingPlugin } from './Heading';\nimport { createHrPlugin } from './Hr';\nimport { createHyperlinkPlugin } from './Hyperlink';\nimport { createListPlugin } from './List';\nimport { createMarksPlugin } from './Marks';\nimport { createNormalizerPlugin } from './Normalizer';\nimport { createParagraphPlugin } from './Paragraph';\nimport { createPasteHTMLPlugin } from './PasteHTML';\nimport { createQuotePlugin } from './Quote';\nimport { createSelectOnBackspacePlugin } from './SelectOnBackspace';\nimport { createSlashCommandsPlugin } from './SlashCommands';\nimport { createTablePlugin } from './Table';\nimport { createTextPlugin } from './Text';\nimport { createTrackingPlugin, RichTextTrackingActionHandler } from './Tracking';\nimport { createTrailingParagraphPlugin } from './TrailingParagraph';\nimport { createVoidsPlugin } from './Voids';\n\nexport const getPlugins = (\n  sdk: FieldExtensionSDK,\n  onAction: RichTextTrackingActionHandler\n): RichTextPlugin[] => [\n  // AST must come after the HTML deserializer\n  createDeserializeHtmlPlugin(),\n  createDeserializeAstPlugin(),\n  createDeserializeDocxPlugin(),\n\n  // Tracking - This should come first so all plugins below will have access to `editor.tracking`\n  createTrackingPlugin(onAction),\n\n  // Global / Global shortcuts\n  createDragAndDropPlugin(),\n  createSlashCommandsPlugin(),\n\n  // Block Elements\n  createParagraphPlugin(),\n  createListPlugin(),\n  createHrPlugin(),\n  createHeadingPlugin(),\n  createQuotePlugin(),\n  createTablePlugin(),\n  createEmbeddedEntryBlockPlugin(sdk),\n  createEmbeddedAssetBlockPlugin(sdk),\n\n  // Inline elements\n  createHyperlinkPlugin(sdk),\n  createEmbeddedEntityInlinePlugin(sdk),\n\n  // Marks\n  createMarksPlugin(),\n\n  // Other\n  createTrailingParagraphPlugin(),\n  createTextPlugin(),\n  createVoidsPlugin(),\n  createSelectOnBackspacePlugin(),\n\n  // Pasting content from other sources\n  createPasteHTMLPlugin(),\n\n  // These plugins drive their configurations from the list of plugins\n  // above. They MUST come last.\n  createSoftBreakPlugin(),\n  createExitBreakPlugin(),\n  createResetNodePlugin(),\n  createNormalizerPlugin(),\n];\n\nexport const disableCorePlugins: PlateProps['disableCorePlugins'] = {\n  // Temporarily until the upstream issue is fixed.\n  // See: https://github.com/udecode/plate/issues/1329#issuecomment-1005935946\n  deserializeAst: true,\n  deserializeHtml: true,\n\n  // Note: Enabled by default since v9.0.0 but it causes Cypress's\n  // .click() command to fail\n  eventEditor: true,\n};\n","import { CustomText, TextOrCustomElement } from '../types';\n\nconst isTextElement = (node: TextOrCustomElement): node is CustomText => 'text' in node;\n\n/**\n * Ensures all nodes have a child leaf text element. This should be handled by\n * Slate but its behavior has proven to be buggy and unpredictable.\n */\nexport function sanitizeIncomingSlateDoc(nodes: TextOrCustomElement[] = []): TextOrCustomElement[] {\n  return nodes.map((node: TextOrCustomElement): TextOrCustomElement => {\n    if (isTextElement(node)) {\n      return node;\n    }\n    if (node.children?.length === 0) {\n      return {\n        ...node,\n        children: [{ text: '', data: {} }],\n      };\n    }\n    return {\n      ...node,\n      children: sanitizeIncomingSlateDoc(node.children),\n    };\n  });\n}\n","import { toSlatejsDocument } from '@contentful/contentful-slatejs-adapter';\nimport { EMPTY_DOCUMENT, Document } from '@contentful/rich-text-types';\nimport { createPlateEditor, CreatePlateEditorOptions } from '@udecode/plate-core';\nimport { Descendant, Editor, Node, Transforms } from 'slate';\nimport { RichTextEditor } from 'types';\n\nimport schema from './constants/Schema';\nimport { sanitizeIncomingSlateDoc } from './helpers/sanitizeIncomingSlateDoc';\n\n/**\n * For legacy reasons, a document may not have any content at all\n * e.g:\n *\n * {nodeType: document, data: {}, content: []}\n *\n * Rendering such document will break the Slate editor\n */\nexport const hasContent = (doc?: Document) => {\n  if (!doc) {\n    return false;\n  }\n\n  return doc.content.length > 0;\n};\n\n/*\n Plate api doesn't allow to modify (easily) the editor value programmatically\n after the editor instance is created \n\n This function is inspired to https://github.com/udecode/plate/issues/1269#issuecomment-1057643622\n */\nexport const setEditorContent = (editor: Editor, nodes?: Node[]): void => {\n  // Replaces editor content while keeping change history\n  Editor.withoutNormalizing(editor, () => {\n    const children = [...editor.children];\n    children.forEach((node) => editor.apply({ type: 'remove_node', path: [0], node }));\n\n    if (nodes) {\n      const nodesArray = Node.isNode(nodes) ? [nodes] : nodes;\n      nodesArray.forEach((node, i) => editor.apply({ type: 'insert_node', path: [i], node: node }));\n    }\n\n    const point = Editor.end(editor, []);\n    if (point) {\n      Transforms.select(editor, point);\n    }\n  });\n};\n\n/**\n * Converts a Contentful rich text document to the corresponding slate editor\n * value\n */\nexport const documentToEditorValue = (doc: any) => {\n  const slateDoc = toSlatejsDocument({\n    document: hasContent(doc) ? doc : EMPTY_DOCUMENT,\n    // TODO: get rid of schema, https://github.com/contentful/field-editors/pull/1065#discussion_r826723248\n    schema,\n  });\n\n  return sanitizeIncomingSlateDoc(slateDoc);\n};\n\nexport const normalizeEditorValue = (\n  value: Descendant[],\n  options?: Omit<CreatePlateEditorOptions<RichTextEditor>, 'id' | 'editor'>\n) => {\n  const editor = createPlateEditor(options);\n  editor.children = value;\n  Editor.normalize(editor, { force: true });\n  return editor.children;\n};\n","import tokens from '@contentful/f36-tokens';\nimport { css } from 'emotion';\n\nconst STYLE_EDITOR_BORDER = `1px solid ${tokens.gray400}`;\n\nexport const styles = {\n  root: css({\n    position: 'relative',\n  }),\n  editor: css({\n    borderRadius: `0 0 ${tokens.borderRadiusMedium} ${tokens.borderRadiusMedium}`,\n    border: STYLE_EDITOR_BORDER,\n    borderTop: 0,\n    padding: '20px',\n    fontSize: tokens.spacingM,\n    fontFamily: tokens.fontStackPrimary,\n    minHeight: '400px',\n    background: tokens.colorWhite,\n    outline: 'none',\n    whiteSpace: 'pre-wrap',\n    overflowWrap: 'break-word',\n    webkitUserModify: 'read-write-plaintext-only',\n    a: {\n      span: {\n        cursor: 'not-allowed',\n        '&:hover': {\n          cursor: 'not-allowed',\n        },\n      },\n    },\n    // We need to reset LIC style due to conflicts between PARAGRAPH styles\n    'ul > li > div': {\n      margin: 0,\n    },\n  }),\n  hiddenToolbar: css({\n    borderTop: STYLE_EDITOR_BORDER,\n  }),\n  enabled: css({\n    background: tokens.colorWhite,\n    a: {\n      span: {\n        cursor: 'pointer',\n        '&:hover': {\n          cursor: 'pointer',\n        },\n      },\n    },\n  }),\n  disabled: css({\n    background: tokens.gray100,\n    cursor: 'not-allowed',\n  }),\n};\n","import * as React from 'react';\n\nimport { Button, Menu } from '@contentful/f36-components';\nimport { PlusIcon, ChevronDownIcon } from '@contentful/f36-icons';\n\nexport interface EmbeddedEntityDropdownButtonProps {\n  children: React.ReactNode;\n  isDisabled: boolean | undefined;\n  isOpen: boolean;\n  onClose: () => void;\n  onToggle: () => void;\n}\n\nexport function EmbeddedEntityDropdownButton({\n  children,\n  isDisabled,\n  isOpen,\n  onClose,\n  onToggle,\n}: EmbeddedEntityDropdownButtonProps) {\n  return (\n    <Menu placement=\"bottom-end\" isOpen={isOpen} onClose={onClose} onOpen={onToggle}>\n      <Menu.Trigger>\n        <Button\n          endIcon={<ChevronDownIcon />}\n          testId=\"toolbar-entity-dropdown-toggle\"\n          variant=\"secondary\"\n          size=\"small\"\n          startIcon={<PlusIcon />}\n          isDisabled={isDisabled}>\n          Embed\n        </Button>\n      </Menu.Trigger>\n      <Menu.List className=\"toolbar-entity-dropdown-list\">{children}</Menu.List>\n    </Menu>\n  );\n}\n","import React, { useState } from 'react';\n\nimport { BLOCKS, INLINES } from '@contentful/rich-text-types';\n\nimport { useContentfulEditor } from '../../ContentfulEditorProvider';\nimport { isLinkActive } from '../../helpers/editor';\nimport { isNodeTypeEnabled } from '../../helpers/validations';\nimport { ToolbarIcon as EmbeddedEntityBlockToolbarIcon } from '../../plugins/EmbeddedEntityBlock';\nimport { ToolbarEmbeddedEntityInlineButton } from '../../plugins/EmbeddedEntityInline';\nimport { useSdkContext } from '../../SdkProvider';\nimport { EmbeddedEntityDropdownButton } from './EmbeddedEntityDropdownButton';\n\nexport interface EmbedEntityWidgetProps {\n  isDisabled?: boolean;\n  canInsertBlocks?: boolean;\n}\n\nexport const EmbedEntityWidget = ({ isDisabled, canInsertBlocks }: EmbedEntityWidgetProps) => {\n  const sdk = useSdkContext();\n  const editor = useContentfulEditor();\n\n  const [isEmbedDropdownOpen, setEmbedDropdownOpen] = useState(false);\n  const onCloseEntityDropdown = () => setEmbedDropdownOpen(false);\n  const onToggleEntityDropdown = () => setEmbedDropdownOpen(!isEmbedDropdownOpen);\n\n  const inlineEntryEmbedEnabled = isNodeTypeEnabled(sdk.field, INLINES.EMBEDDED_ENTRY);\n  const blockEntryEmbedEnabled =\n    isNodeTypeEnabled(sdk.field, BLOCKS.EMBEDDED_ENTRY) && canInsertBlocks;\n  // Removed access check following https://contentful.atlassian.net/browse/DANTE-486\n  // TODO: refine permissions check in order to account for tags in rules and then readd access.can('read', 'Asset')\n  const blockAssetEmbedEnabled =\n    isNodeTypeEnabled(sdk.field, BLOCKS.EMBEDDED_ASSET) && canInsertBlocks;\n\n  const actions = (\n    <>\n      {blockEntryEmbedEnabled && (\n        <EmbeddedEntityBlockToolbarIcon\n          isDisabled={!!isDisabled}\n          nodeType={BLOCKS.EMBEDDED_ENTRY}\n          onClose={onCloseEntityDropdown}\n        />\n      )}\n      {inlineEntryEmbedEnabled && (\n        <ToolbarEmbeddedEntityInlineButton\n          isDisabled={!!isDisabled || isLinkActive(editor)}\n          onClose={onCloseEntityDropdown}\n        />\n      )}\n      {blockAssetEmbedEnabled && (\n        <EmbeddedEntityBlockToolbarIcon\n          isDisabled={!!isDisabled}\n          nodeType={BLOCKS.EMBEDDED_ASSET}\n          onClose={onCloseEntityDropdown}\n        />\n      )}\n    </>\n  );\n\n  const showEmbedButton =\n    blockEntryEmbedEnabled || inlineEntryEmbedEnabled || blockAssetEmbedEnabled;\n\n  return showEmbedButton ? (\n    <EmbeddedEntityDropdownButton\n      isDisabled={isDisabled}\n      onClose={onCloseEntityDropdown}\n      onToggle={onToggleEntityDropdown}\n      isOpen={isEmbedDropdownOpen}>\n      {actions}\n    </EmbeddedEntityDropdownButton>\n  ) : null;\n};\n","import React from 'react';\n\nimport { FieldExtensionSDK } from '@contentful/app-sdk';\nimport { Flex } from '@contentful/f36-components';\nimport tokens from '@contentful/f36-tokens';\nimport { BLOCKS, INLINES, MARKS } from '@contentful/rich-text-types';\nimport { css } from 'emotion';\n\nimport { useContentfulEditor } from '../ContentfulEditorProvider';\nimport { isNodeTypeSelected } from '../helpers/editor';\nimport { isNodeTypeEnabled, isMarkEnabled } from '../helpers/validations';\nimport { ToolbarHeadingButton } from '../plugins/Heading';\nimport { ToolbarHrButton } from '../plugins/Hr';\nimport { ToolbarHyperlinkButton } from '../plugins/Hyperlink';\nimport { ToolbarListButton } from '../plugins/List';\nimport { ToolbarBoldButton } from '../plugins/Marks/Bold';\nimport { ToolbarCodeButton } from '../plugins/Marks/Code';\nimport { ToolbarItalicButton } from '../plugins/Marks/Italic';\nimport { ToolbarUnderlineButton } from '../plugins/Marks/Underline';\nimport { ToolbarQuoteButton } from '../plugins/Quote';\nimport { ToolbarTableButton } from '../plugins/Table';\nimport { useSdkContext } from '../SdkProvider';\nimport { EmbedEntityWidget } from './components/EmbedEntityWidget';\n\ntype ToolbarProps = {\n  isDisabled?: boolean;\n};\n\nconst styles = {\n  toolbar: css({\n    border: `1px solid ${tokens.gray400}`,\n    backgroundColor: tokens.gray100,\n    padding: tokens.spacingXs,\n    borderRadius: `${tokens.borderRadiusMedium} ${tokens.borderRadiusMedium} 0 0`,\n  }),\n  divider: css({\n    display: 'inline-block',\n    height: '21px',\n    width: '1px',\n    background: tokens.gray300,\n    margin: `0 ${tokens.spacing2Xs}`,\n  }),\n  embedActionsWrapper: css({\n    display: ['-webkit-box', '-ms-flexbox', 'flex'],\n    webkitAlignSelf: 'flex-start',\n    alignSelf: 'flex-start',\n    msFlexItemAlign: 'start',\n    marginLeft: 'auto',\n  }),\n  formattingOptionsWrapper: css({\n    display: ['-webkit-box', '-ms-flexbox', 'flex'],\n    msFlexAlign: 'center',\n    webkitBoxAlign: 'center',\n    alignItems: 'center',\n    msFlexWrap: 'wrap',\n    flexWrap: 'wrap',\n    marginRight: '20px',\n  }),\n};\n\nconst Toolbar = ({ isDisabled }: ToolbarProps) => {\n  const sdk = useSdkContext();\n  const editor = useContentfulEditor();\n  const canInsertBlocks = !isNodeTypeSelected(editor, BLOCKS.TABLE);\n  const validationInfo = React.useMemo(() => getValidationInfo(sdk.field), [sdk.field]);\n  const isListSelected =\n    isNodeTypeSelected(editor, BLOCKS.UL_LIST) || isNodeTypeSelected(editor, BLOCKS.OL_LIST);\n  const isBlockquoteSelected = isNodeTypeSelected(editor, BLOCKS.QUOTE);\n  const shouldDisableTables =\n    isDisabled || !canInsertBlocks || isListSelected || isBlockquoteSelected;\n\n  return (\n    <Flex testId=\"toolbar\" className={styles.toolbar} alignItems=\"center\">\n      <div className={styles.formattingOptionsWrapper}>\n        <ToolbarHeadingButton isDisabled={isDisabled || !canInsertBlocks} />\n\n        {validationInfo.isAnyMarkEnabled && <span className={styles.divider} />}\n\n        {isMarkEnabled(sdk.field, MARKS.BOLD) && <ToolbarBoldButton isDisabled={isDisabled} />}\n        {isMarkEnabled(sdk.field, MARKS.ITALIC) && <ToolbarItalicButton isDisabled={isDisabled} />}\n        {isMarkEnabled(sdk.field, MARKS.UNDERLINE) && (\n          <ToolbarUnderlineButton isDisabled={isDisabled} />\n        )}\n        {isMarkEnabled(sdk.field, MARKS.CODE) && <ToolbarCodeButton isDisabled={isDisabled} />}\n\n        {validationInfo.isAnyHyperlinkEnabled && (\n          <>\n            <span className={styles.divider} />\n            <ToolbarHyperlinkButton isDisabled={isDisabled} />\n          </>\n        )}\n\n        {validationInfo.isAnyBlockFormattingEnabled && <span className={styles.divider} />}\n\n        <ToolbarListButton isDisabled={isDisabled || !canInsertBlocks} />\n\n        {isNodeTypeEnabled(sdk.field, BLOCKS.QUOTE) && (\n          <ToolbarQuoteButton isDisabled={isDisabled || !canInsertBlocks} />\n        )}\n        {isNodeTypeEnabled(sdk.field, BLOCKS.HR) && (\n          <ToolbarHrButton isDisabled={isDisabled || !canInsertBlocks} />\n        )}\n        {isNodeTypeEnabled(sdk.field, BLOCKS.TABLE) && (\n          <ToolbarTableButton isDisabled={shouldDisableTables} />\n        )}\n      </div>\n      <div className={styles.embedActionsWrapper}>\n        <EmbedEntityWidget isDisabled={isDisabled} canInsertBlocks={canInsertBlocks} />\n      </div>\n    </Flex>\n  );\n};\n\nfunction getValidationInfo(field: FieldExtensionSDK['field']): {\n  isAnyMarkEnabled: boolean;\n  isAnyHyperlinkEnabled: boolean;\n  isAnyBlockFormattingEnabled: boolean;\n} {\n  const someWithValidation = (vals, validation) => vals.some((val) => validation(field, val));\n\n  const isAnyMarkEnabled = someWithValidation(Object.values(MARKS), isMarkEnabled);\n\n  const isAnyHyperlinkEnabled = someWithValidation(\n    [INLINES.HYPERLINK, INLINES.ASSET_HYPERLINK, INLINES.ENTRY_HYPERLINK],\n    isNodeTypeEnabled\n  );\n\n  const isAnyBlockFormattingEnabled = someWithValidation(\n    [BLOCKS.UL_LIST, BLOCKS.OL_LIST, BLOCKS.QUOTE, BLOCKS.HR],\n    isNodeTypeEnabled\n  );\n\n  return {\n    isAnyMarkEnabled,\n    isAnyHyperlinkEnabled,\n    isAnyBlockFormattingEnabled,\n  };\n}\n\nexport default Toolbar;\n","import React, { ReactNode } from 'react';\n\nimport { css } from 'emotion';\n\nconst styles = {\n  nativeSticky: css`\n    position: -webkit-sticky;\n    position: sticky;\n    top: -1px;\n    z-index: 2;\n  `,\n};\n\ntype StickyToolbarProps = {\n  isDisabled?: boolean;\n  children: ReactNode;\n};\n\nconst StickyToolbarWrapper = ({ isDisabled, children }: StickyToolbarProps) => (\n  <div className={isDisabled ? '' : styles.nativeSticky}>{children}</div>\n);\n\nexport default StickyToolbarWrapper;\n","import { useCallback, useMemo } from 'react';\n\nimport { toContentfulDocument } from '@contentful/contentful-slatejs-adapter';\nimport { Document } from '@contentful/rich-text-types';\nimport { getPlateSelectors } from '@udecode/plate-core';\nimport debounce from 'lodash/debounce';\nimport { Operation } from 'slate';\n\nimport schema from './constants/Schema';\n\n/**\n * Returns whether a given operation is relevant enough to trigger a save.\n */\nconst isRelevantOperation = (op: Operation) => {\n  if (op.type === 'set_selection') {\n    return false;\n  }\n\n  return true;\n};\n\nexport type OnValueChangedProps = {\n  editorId: string;\n  handler?: (value: Document) => unknown;\n  skip?: boolean;\n  onSkip?: VoidFunction;\n};\n\nexport const useOnValueChanged = ({ editorId, handler, skip, onSkip }: OnValueChangedProps) => {\n  const onChange = useMemo(\n    () =>\n      debounce((document: unknown) => {\n        handler?.(toContentfulDocument({ document, schema }));\n      }, 500),\n    [handler]\n  );\n\n  return useCallback(\n    (value: unknown) => {\n      const editor = getPlateSelectors(editorId).editor();\n      if (!editor) {\n        throw new Error(\n          'Editor change callback called but editor not defined. Editor id: ' + editorId\n        );\n      }\n      const operations = editor?.operations.filter(isRelevantOperation);\n\n      if (operations.length > 0) {\n        if (skip) {\n          onSkip?.();\n          return;\n        }\n        onChange(value);\n      }\n    },\n    [editorId, onChange, skip, onSkip]\n  );\n};\n","import React, { useCallback, useState, useEffect } from 'react';\n\nimport { FieldExtensionSDK } from '@contentful/app-sdk';\nimport { EntityProvider } from '@contentful/field-editor-reference';\nimport { FieldConnector } from '@contentful/field-editor-shared';\nimport * as Contentful from '@contentful/rich-text-types';\nimport { Plate, getPlateSelectors, getPlateActions } from '@udecode/plate-core';\nimport { css, cx } from 'emotion';\nimport deepEquals from 'fast-deep-equal';\nimport noop from 'lodash/noop';\n\nimport { ContentfulEditorIdProvider, getContentfulEditorId } from './ContentfulEditorProvider';\nimport { getPlugins, disableCorePlugins } from './plugins';\nimport { SlashCommandsPalette } from './plugins/SlashCommands';\nimport { RichTextTrackingActionHandler } from './plugins/Tracking';\nimport { documentToEditorValue, normalizeEditorValue, setEditorContent } from './prepareDocument';\nimport { styles } from './RichTextEditor.styles';\nimport { SdkProvider } from './SdkProvider';\nimport Toolbar from './Toolbar';\nimport StickyToolbarWrapper from './Toolbar/components/StickyToolbarWrapper';\nimport { useOnValueChanged } from './useOnValueChanged';\n\ntype ConnectedProps = {\n  sdk: FieldExtensionSDK;\n  onAction?: RichTextTrackingActionHandler;\n  minHeight?: string | number;\n  value?: object;\n  isDisabled?: boolean;\n  onChange?: (doc: Contentful.Document) => unknown;\n  isToolbarHidden?: boolean;\n  actionsDisabled?: boolean;\n};\n\nexport const ConnectedRichTextEditor = (props: ConnectedProps) => {\n  const id = getContentfulEditorId(props.sdk);\n  const plugins = React.useMemo(\n    () => getPlugins(props.sdk, props.onAction ?? noop),\n    [props.sdk, props.onAction]\n  );\n\n  const [isFirstRender, setIsFirstRender] = useState(true);\n  const [pendingExternalUpdate, setPendingExternalUpdate] = useState(false);\n\n  const onValueChanged = useOnValueChanged({\n    editorId: id,\n    handler: props.onChange,\n    skip: pendingExternalUpdate || isFirstRender,\n    onSkip: () => setPendingExternalUpdate(false),\n  });\n\n  useEffect(() => {\n    /*\n      This effect is called when the value prop changes. Normally\n      this happens when the value is changed outside of the editor,\n      like in snapshots restoration or remote updates\n      Plate won't update the displayed value on its own, see:\n       - https://github.com/ianstormtaylor/slate/pull/4540\n       - https://github.com/udecode/plate/issues/1169\n\n       The content is forcefully set to the new value and it's ensured\n       the change listener isn't invoked\n    */\n    setIsFirstRender(false);\n    const editor = getPlateSelectors(id).editor();\n    if (!editor) {\n      return;\n    }\n    setPendingExternalUpdate(true);\n    setEditorContent(editor, documentToEditorValue(props.value));\n  }, [props.value, id]);\n\n  const classNames = cx(\n    styles.editor,\n    props.minHeight !== undefined ? css({ minHeight: props.minHeight }) : undefined,\n    props.isDisabled ? styles.disabled : styles.enabled,\n    props.isToolbarHidden && styles.hiddenToolbar\n  );\n\n  useEffect(() => {\n    if (!isFirstRender) {\n      return;\n    }\n\n    getPlateActions(id).value(\n      normalizeEditorValue(documentToEditorValue(props.value), {\n        plugins,\n        disableCorePlugins,\n      })\n    );\n  }, [isFirstRender, plugins, id, props.value]);\n\n  return (\n    <SdkProvider sdk={props.sdk}>\n      <ContentfulEditorIdProvider value={id}>\n        <div className={styles.root} data-test-id=\"rich-text-editor\">\n          <Plate\n            id={id}\n            plugins={plugins}\n            disableCorePlugins={disableCorePlugins}\n            editableProps={{\n              className: classNames,\n              readOnly: props.isDisabled,\n            }}\n            onChange={onValueChanged}>\n            {!props.isToolbarHidden && (\n              <StickyToolbarWrapper isDisabled={props.isDisabled}>\n                <Toolbar isDisabled={props.isDisabled} />\n              </StickyToolbarWrapper>\n            )}\n\n            {/* We put it inside <Plate> so we can use some hooks such as `useContentfulEditor` */}\n            <SlashCommandsPalette editorId={id} />\n          </Plate>\n        </div>\n      </ContentfulEditorIdProvider>\n    </SdkProvider>\n  );\n};\n\ntype Props = ConnectedProps & { isInitiallyDisabled: boolean };\n\nconst RichTextEditor = (props: Props) => {\n  const { sdk, isInitiallyDisabled, onAction, ...otherProps } = props;\n  const isEmptyValue = useCallback(\n    (value) => !value || deepEquals(value, Contentful.EMPTY_DOCUMENT),\n    []\n  );\n\n  const id = getContentfulEditorId(props.sdk);\n  return (\n    <EntityProvider sdk={sdk}>\n      <FieldConnector\n        throttle={0}\n        field={sdk.field}\n        isInitiallyDisabled={isInitiallyDisabled}\n        isEmptyValue={isEmptyValue}\n        isEqualValues={deepEquals}>\n        {({ lastRemoteValue, disabled, setValue }) => (\n          <ConnectedRichTextEditor\n            {...otherProps}\n            key={`rich-text-editor-${id}`}\n            value={lastRemoteValue}\n            sdk={sdk}\n            onAction={onAction}\n            isDisabled={disabled}\n            onChange={setValue}\n          />\n        )}\n      </FieldConnector>\n    </EntityProvider>\n  );\n};\n\nexport default RichTextEditor;\n","import React from 'react';\n\nimport {\n  TextLink,\n  Button,\n  FormControl,\n  FormLabel,\n  Select,\n  TextInput,\n  Form,\n  ModalContent,\n  ModalControls,\n} from '@contentful/f36-components';\nimport tokens from '@contentful/f36-tokens';\nimport { EntityProvider } from '@contentful/field-editor-reference';\nimport { css } from 'emotion';\nimport PropTypes from 'prop-types';\n\nimport { FetchingWrappedAssetCard } from '../../plugins/shared/FetchingWrappedAssetCard';\nimport { FetchingWrappedEntryCard } from '../../plugins/shared/FetchingWrappedEntryCard';\n\nexport const LINK_TYPES = {\n  URI: 'uri',\n  ENTRY: 'Entry',\n  ASSET: 'Asset',\n};\n\nfunction isFeaturingEntitySelector(entitySelectorConfigs = {}) {\n  return !!entitySelectorConfigs.Entry || !!entitySelectorConfigs.Asset;\n}\n\nfunction entityToLink(entity) {\n  const { id, type } = entity.sys;\n  return { sys: { id, type: 'Link', linkType: type } };\n}\n\nexport class HyperlinkDialog extends React.Component {\n  static propTypes = {\n    sdk: PropTypes.object.isRequired,\n    labels: PropTypes.shape({\n      title: PropTypes.string,\n      confirm: PropTypes.string,\n    }),\n    value: PropTypes.shape({\n      text: PropTypes.string,\n      uri: PropTypes.string,\n      target: PropTypes.object,\n      // Will be overwritten accordingly if `uri` or `target.sys.linkType` are set.\n      type: PropTypes.oneOf(['uri', 'Entry', 'Asset']),\n    }),\n    entitySelectorConfigs: PropTypes.object,\n    allowedHyperlinkTypes: PropTypes.arrayOf(\n      PropTypes.oneOf([LINK_TYPES.ENTRY, LINK_TYPES.ASSET, LINK_TYPES.URI])\n    ),\n    hideText: PropTypes.bool,\n    onClose: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    labels: {\n      title: 'Insert link',\n      confirm: 'Insert link',\n    },\n    value: {},\n    hideText: false,\n    entitySelectorConfigs: {},\n    allowedHyperlinkTypes: [LINK_TYPES.ENTRY, LINK_TYPES.ASSET, LINK_TYPES.URI],\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { text, type, uri, target } = props.value;\n    const isEntityLink = Boolean(target);\n    const entityLinks = {\n      [LINK_TYPES.ENTRY]: null,\n      [LINK_TYPES.ASSET]: null,\n    };\n    let linkType = type;\n\n    if (isEntityLink) {\n      linkType = target.sys.linkType;\n      entityLinks[linkType] = target;\n    } else if (props.allowedHyperlinkTypes.includes(LINK_TYPES.URI)) {\n      linkType = LINK_TYPES.URI;\n    } else {\n      linkType = props.allowedHyperlinkTypes[0];\n    }\n\n    this.state = { text, uri, entityLinks, type: linkType };\n  }\n\n  setTargetEntity(type, entity) {\n    this.setState((state) => ({\n      entityLinks: {\n        ...state.entityLinks,\n        [type]: entity ? entityToLink(entity) : undefined,\n      },\n    }));\n  }\n\n  getValue() {\n    const { text, type, uri } = this.state;\n    const value = { type };\n    if (text) {\n      value.text = text;\n    }\n    if (type === LINK_TYPES.URI) {\n      value.uri = uri;\n    } else {\n      value.target = this.state.entityLinks[type];\n    }\n    return value;\n  }\n\n  isLinkComplete() {\n    const { text, type, uri, target } = this.getValue();\n    const requiresText = !this.props.hideText;\n    if (requiresText && !text) {\n      return false;\n    }\n    return (type === LINK_TYPES.URI && uri) || target;\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onClose(this.getValue());\n  };\n\n  selectEntry = async () => {\n    const { locale, contentTypes } = this.props.entitySelectorConfigs.Entry;\n    const entry = await this.props.sdk.dialogs.selectSingleEntry({ locale, contentTypes });\n    this.setTargetEntity(LINK_TYPES.ENTRY, entry);\n  };\n\n  selectAsset = async () => {\n    const { locale } = this.props.entitySelectorConfigs.Asset;\n    const asset = await this.props.sdk.dialogs.selectSingleAsset({ locale });\n    this.setTargetEntity(LINK_TYPES.ASSET, asset);\n  };\n\n  render() {\n    const { labels } = this.props;\n    return (\n      <EntityProvider sdk={this.props.sdk}>\n        <React.Fragment>\n          <ModalContent>{this.renderFields()}</ModalContent>\n          <ModalControls>\n            <Button\n              type=\"button\"\n              onClick={() => this.props.onClose(null)}\n              variant=\"secondary\"\n              testId=\"cancel-cta\"\n              size=\"small\">\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              variant=\"positive\"\n              onClick={this.handleSubmit}\n              isDisabled={!this.isLinkComplete()}\n              testId=\"confirm-cta\"\n              size=\"small\">\n              {labels.confirm}\n            </Button>\n          </ModalControls>\n        </React.Fragment>\n      </EntityProvider>\n    );\n  }\n\n  renderFields() {\n    const { hideText, allowedHyperlinkTypes, entitySelectorConfigs } = this.props;\n    const { uri, text, type } = this.state;\n    const isUriInputAutoFocused = type === LINK_TYPES.URI && (hideText || !!text);\n\n    return (\n      <Form>\n        {hideText ? null : (\n          <FormControl id=\"link-text\" isRequired>\n            <FormControl.Label>Link text</FormControl.Label>\n            <TextInput\n              testId=\"link-text-input\"\n              name=\"link-text\"\n              value={text || ''}\n              onChange={(e) => this.setState({ text: e.target.value })}\n              // eslint-disable-next-line jsx-a11y/no-autofocus\n              autoFocus={!isUriInputAutoFocused}\n            />\n          </FormControl>\n        )}\n        {isFeaturingEntitySelector(entitySelectorConfigs) && (\n          <FormControl id=\"link-type\" name=\"link-type\">\n            <FormControl.Label>Link type</FormControl.Label>\n            <Select\n              value={type}\n              onChange={(e) => this.setState({ type: e.target.value })}\n              testId=\"link-type-select\">\n              {/* Show the option if the link type is allowed or the current link is of type that is no longer valid */}\n              {allowedHyperlinkTypes.includes(LINK_TYPES.URI) || type === LINK_TYPES.URI ? (\n                <Select.Option value={LINK_TYPES.URI}>URL</Select.Option>\n              ) : null}\n              {allowedHyperlinkTypes.includes(LINK_TYPES.ENTRY) || type === LINK_TYPES.ENTRY ? (\n                <Select.Option value={LINK_TYPES.ENTRY}>Entry</Select.Option>\n              ) : null}\n              {allowedHyperlinkTypes.includes(LINK_TYPES.ASSET) || type === LINK_TYPES.ASSET ? (\n                <Select.Option value={LINK_TYPES.ASSET}>Asset</Select.Option>\n              ) : null}\n            </Select>\n          </FormControl>\n        )}\n        {type === LINK_TYPES.URI ? (\n          <FormControl id=\"link-uri\" isRequired>\n            <FormControl.Label>Link target</FormControl.Label>\n            <TextInput\n              testId=\"link-target-input\"\n              name=\"link-uri\"\n              value={uri || ''}\n              placeholder=\"https://\"\n              onChange={(e) => this.setState({ uri: e.target.value })}\n              // eslint-disable-next-line jsx-a11y/no-autofocus\n              autoFocus={isUriInputAutoFocused}\n            />\n            <FormControl.HelpText>A protocol may be required, e.g. https://</FormControl.HelpText>\n          </FormControl>\n        ) : (\n          this.renderEntityField()\n        )}\n      </Form>\n    );\n  }\n\n  renderEntityField() {\n    const { type, entityLinks } = this.state;\n    const resetEntity = () => this.setTargetEntity(type, null);\n    const entityLink = entityLinks[type];\n    const isEntitySelectorVisible = !entityLink;\n    return (\n      <div>\n        <FormLabel required htmlFor=\"\">\n          Link target\n        </FormLabel>\n        {!isEntitySelectorVisible && (\n          <TextLink\n            as=\"button\"\n            className={css({ marginLeft: tokens.spacingS })}\n            onClick={resetEntity}>\n            Remove selection\n          </TextLink>\n        )}\n        {entityLink && (\n          <div>\n            {type === LINK_TYPES.ENTRY && (\n              <FetchingWrappedEntryCard\n                sdk={this.props.sdk}\n                locale={this.props.entitySelectorConfigs.Entry.locale}\n                entryId={entityLink.sys.id}\n                isDisabled\n                isSelected={false}\n              />\n            )}\n            {type == LINK_TYPES.ASSET && (\n              <FetchingWrappedAssetCard\n                sdk={this.props.sdk}\n                locale={this.props.entitySelectorConfigs.Asset.locale}\n                assetId={entityLink.sys.id}\n                isDisabled\n                isSelected={false}\n              />\n            )}\n          </div>\n        )}\n        {/* Keep all entity selectors in the DOM for super fast types switching ux.*/}\n        {isEntitySelectorVisible && this.renderEntitySelector(type, isEntitySelectorVisible)}\n      </div>\n    );\n  }\n\n  renderEntitySelector(type) {\n    return (\n      <div className={css({ marginTop: tokens.spacingS })}>\n        {type === LINK_TYPES.ENTRY && (\n          <TextLink as=\"button\" onClick={this.selectEntry}>\n            Select entry\n          </TextLink>\n        )}\n        {type === LINK_TYPES.ASSET && (\n          <TextLink as=\"button\" onClick={this.selectAsset}>\n            Select asset\n          </TextLink>\n        )}\n      </div>\n    );\n  }\n}\n\nexport const openHyperlinkDialog = (\n  dialogs,\n  { value, showTextInput, allowedHyperlinkTypes, entitySelectorConfigs }\n) => {\n  const isNew = !(value.uri || value.target);\n  const props = {\n    labels: {\n      title: isNew ? 'Insert hyperlink' : 'Edit hyperlink',\n      confirm: isNew ? 'Insert' : 'Update',\n    },\n    value,\n    hideText: !showTextInput,\n    allowedHyperlinkTypes,\n    entitySelectorConfigs,\n  };\n\n  return dialogs.openCurrent({\n    title: props.labels.title,\n    width: 'large',\n    shouldCloseOnEscapePress: true,\n    shouldCloseOnOverlayClick: true,\n    allowHeightOverflow: true,\n    parameters: {\n      type: 'rich-text-hyperlink-dialog',\n      ...props,\n    },\n  });\n};\n","import React from 'react';\n\nimport { DialogExtensionSDK } from '@contentful/app-sdk';\nimport { ModalDialogLauncher } from '@contentful/field-editor-shared';\n\nimport { HyperlinkDialog } from './HypelinkDialog/HyperlinkDialog';\n\nexport const openRichTextDialog = (sdk: DialogExtensionSDK) => (options) => {\n  if (options.parameters?.type === 'rich-text-hyperlink-dialog') {\n    return ModalDialogLauncher.openDialog(options, ({ onClose }) => {\n      return <HyperlinkDialog {...options.parameters} onClose={onClose} sdk={sdk} />;\n    });\n  }\n  return Promise.reject();\n};\n","import React from 'react';\n\nimport { DialogExtensionSDK } from '@contentful/app-sdk';\n\nimport { HyperlinkDialog } from './HypelinkDialog/HyperlinkDialog';\n\nexport const renderRichTextDialog = (sdk: DialogExtensionSDK) => {\n  const parameters = sdk.parameters.invocation as Record<string, unknown>;\n  if (parameters?.type === 'rich-text-hyperlink-dialog') {\n    sdk.window.startAutoResizer();\n    return <HyperlinkDialog {...sdk.parameters.invocation} onClose={sdk.close} sdk={sdk} />;\n  }\n  return <div />;\n};\n"],"names":["getContentfulEditorId","sdk","entry","field","sys","getSys","id","locale","editorContext","createContext","ContentfulEditorIdProvider","Provider","useContentfulEditorId","contextId","useContext","Error","useContentfulEditor","editorId","editor","usePlateEditorState","useContentfulEditorRef","usePlateEditorRef","createSoftBreakPlugin","createDefaultSoftBreakPlugin","then","rules","plugins","flatMap","p","softBreak","options","createExitBreakPlugin","createDefaultExitBreakPlugin","exitBreak","createResetNodePlugin","createDefaultResetNodePlugin","resetNode","rule","defaultType","BLOCKS","PARAGRAPH","createDragAndDropPlugin","DRAGGABLE_TYPES","EMBEDDED_ENTRY","EMBEDDED_ASSET","HR","INLINES","ON_DROP_ALLOWED_TYPES","TABLE","key","handlers","onDrop","event","Array","from","getNodes","match","node","includes","type","draggingBlock","draggingNode","nativeEvent","target","dropDisallowed","getParents","some","nodeName","history","undos","push","el","parents","parentNode","unshift","IS_SAFARI","navigator","test","userAgent","IS_CHROME","LINK_TYPES","HYPERLINK","ENTRY_HYPERLINK","ASSET_HYPERLINK","isBlockSelected","Editor","nodes","Element","isElement","isRootLevel","path","length","getNodeEntryFromSelection","nodeTypeOrTypes","selection","focus","nodeTypes","isArray","i","nodeEntry","slice","isNodeTypeSelected","nodeType","moveToTheNextLine","Transforms","move","distance","unit","moveToTheNextChar","insertEmptyParagraph","emptyParagraph","children","text","data","isVoid","insertNodes","getElementFromCurrentSelection","at","flat","getTableSize","table","numRows","firstRow","numColumns","insertLink","wrapLink","isLinkActive","isEditor","link","unwrapLink","unwrapNodes","url","isCollapsed","Range","uri","setNodes","insertText","select","wrapNodes","split","collapse","edge","getAncestorPathFromSelection","undefined","Path","levels","find","level","INLINE_TYPES","Object","values","isInlineOrText","Text","isText","x","window","scrollX","y","scrollY","ReactEditor","setTimeout","scrollTo","toggleElement","editorOptions","toggleNodeType","withLinkTracking","Component","ComponentWithTracking","props","onEntityFetchComplete","React","useCallback","tracking","onViewportAction","useSdk","sdkMemo","constate","SdkProvider","useSdkContext","useFetchedEntity","useEntities","entries","assets","getOrLoadEntry","getOrLoadAsset","store","useState","entity","setEntity","useEffect","newValue","areEqual","InternalAssetCard","asset","AssetCard","size","isLoading","MissingEntityCard","entityType","isDisabled","onRemove","WrappedAssetCard","getEntityScheduledActions","loadEntityScheduledActions","isSelected","localeCode","defaultLocaleCode","locales","onEdit","isClickable","displayName","FetchingWrappedAssetCard","assetId","InternalEntryCard","EntryCard","contentType","space","getCachedContentTypes","WrappedEntryCard","getAsset","FetchingWrappedEntryCard","entryId","styles","root","css","marginBottom","display","container","verticalAlign","width","LinkedEntityBlock","attributes","element","useSelected","useReadOnly","entityId","linkType","handleEditClick","openEntity","openAsset","openEntry","slideIn","handleRemoveClick","pathToElement","findPath","removeNodes","className","contentEditable","draggable","runtime","exports","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","fn","arg","call","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","constructor","defineIteratorMethods","forEach","method","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","__await","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","unwrapped","error","previousPromise","enqueue","callInvokeWithMethodAndArg","async","Promise","iter","next","done","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","info","resultName","nextLoc","toString","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","keys","object","reverse","pop","iterable","iteratorMethod","isNaN","skipTempReset","prev","charAt","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","getLinkedContentTypeIdsForNodeType","flow","v","get","validations","newEntitySelectorConfigFromRichTextField","getEntityTypeFromRichTextNode","contentTypes","words","indexOf","selectEntityAndInsert","logAction","dialogs","baseConfig","selectEntity","selectSingleAsset","selectSingleEntry","config","withCreate","insertBlock","ensureFollowingParagraph","parent","above","voids","e","paragraph","TEXT_CONTAINERS","isChild","createNode","linkedEntityBlock","hasText","getText","icon","marginRight","EmbeddedEntityBlockToolbarIcon","onClose","handleClick","preventDefault","onToolbarAction","getEntityTypeFromNodeType","baseClass","Menu","Item","disabled","onClick","testId","Flex","alignItems","flexDirection","Icon","as","AssetIcon","EmbeddedEntryBlockIcon","variant","toLowerCase","entityTypes","getWithEmbeddedEntityEvents","hotkey","pathToSelectedElement","isDelete","isBackspace","isHotkey","onShortcutAction","createEmbeddedEntityPlugin","component","onKeyDown","deserializeHtml","validAttribute","withoutChildren","getNode","getAttribute","createEmbeddedEntryBlockPlugin","createEmbeddedAssetBlockPlugin","getEntryTitle","entityHelpers","getEntryStatus","scheduledIcon","tokens","spacing2Xs","FetchingWrappedInlineEntryCard","useMemo","allContentTypes","contentTypeName","title","defaultTitle","InlineEntryCard","status","actions","MenuItem","ScheduledIconWithTooltip","ClockIcon","createInlineEntryNode","margin","fontSize","span","userSelect","EmbeddedEntityInline","inlineEntryNode","setSelection","ToolbarEmbeddedEntityInlineButton","EmbeddedEntryInlineIcon","createEmbeddedEntityInlinePlugin","htmlAttributeName","isInline","getWithEmbeddedEntryInlineEvents","withEmbeddedEntryInlineEvents","handleEvent","VALIDATIONS","ENABLED_MARKS","ENABLED_NODE_TYPES","DEFAULT_ENABLED_NODE_TYPES","DOCUMENT","getRichTextValidation","validationType","isFormattingOptionEnabled","nodeTypeOrMark","enabledFormattings","concat","isNodeTypeEnabled","isMarkEnabled","dropdown","fontWeightDemiBold","fontSizeL","HEADING_1","HEADING_2","HEADING_3","HEADING_4","HEADING_5","HEADING_6","LABELS","ToolbarHeadingButton","isOpen","setOpen","selected","setSelected","operations","nodeTypesByEnablement","fromEntries","map","someHeadingsEnabled","filter","Boolean","handleOnSelectItem","prevOnChange","onChange","isActive","activeType","inactiveType","Trigger","Button","endIcon","ChevronDownIcon","List","isInitiallyFocused","cx","extractNodes","mode","extractParagraphs","transformRemove","transformParagraphs","transformUnwrap","transformWrapIn","transformLift","liftNodes","headings","fontWeightMedium","spacingS","createHeading","Tag","block","Heading","HeadingComponents","buildHeadingEventHandler","createHeadingPlugin","query","allow","HEADINGS","normalizer","validChildren","_","transform","end","start","getAbove","LIST_ITEM","idx","tagName","validNodeName","toUpperCase","button","height","marginLeft","tooltip","zIndex","Number","zIndexTooltip","ToolbarButton","startIcon","Tooltip","placement","content","spacingL","hr","spacingM","gray300","hrSelected","colorPrimary","withHrEvents","pathToSelectedHr","ToolbarHrButton","handleOnClick","HorizontalRuleIcon","Hr","Slate","isFocused","createHrPlugin","removeSelectionLabel","SYS_LINK_TYPES","LINK_TYPE_SELECTION_VALUES","HyperlinkModal","enabledLinkTypes","defaultLinkType","linkText","setLinkText","setLinkType","linkTarget","setLinkTarget","linkEntity","setLinkEntity","isLinkComplete","isRegularLink","entityLinks","isEntityLink","handleOnSubmit","entityToLink","selectEntry","selectAsset","resetLinkEntity","EntityProvider","ModalContent","Form","FormControl","isRequired","Label","TextInput","Select","readonly","Option","HelpText","FormLabel","htmlFor","TextLink","ModalControls","addOrEditLink","targetPath","isReadOnly","selectionBeforeBlur","string","selectionAfterFocus","currentLinkText","isEditing","ModalDialogLauncher","openDialog","shouldCloseOnEscapePress","shouldCloseOnOverlayClick","allowHeightOverflow","withoutNormalizing","ToolbarHyperlinkButton","LinkIcon","isAncestorEmpty","Node","trim","truncate","str","substr","replace","getEntityInfo","entityTitle","entityStatus","jobs","scheduledActions","getScheduleTooltipContent","job","jobsCount","fetchAllData","getEntity","getEntry","contentTypeId","ct","getAssetTitle","entityDescription","getEntityDescription","useRequestStatus","requestStatus","setRequestStatus","entityInfo","console","log","useEntityInfo","hyperlinkWrapper","position","a","hyperlink","fill","gray900","EntityHyperlink","tooltipContent","stopPropagation","toSlatePoint","exactMatch","suppressThrow","targetWrapperClassName","maxWidth","UrlHyperlink","href","rel","isAnchor","isEntryAnchor","isAssetAnchor","buildHyperlinkEventHandler","getNodeOfType","createHyperlinkPlugin","common","validNode","baseStyle","lineHeightDefault","UL_LIST","OL_LIST","createList","ListUL","ListOL","style","spacingXs","ListItem","moveListItemDown","list","listItem","listNode","listItemPath","previousListItemPath","previous","previousSiblingItem","previousPath","subList","n","getListTypes","newPath","getLastChildPath","moveNodes","to","moveListItems","increase","_nodes","getPluginType","ELEMENT_LIC","lics","highestLicPaths","highestLicPathRefs","lic","licPath","liPath","isAncestor","highestLiPath","pathRef","licPathRefsToMove","licPathRef","unref","liEntry","getListItemEntry","isListNested","moveListItemUp","hasUnliftedListItems","unwrapList","listTypes","toggleList","isRangeAcrossBlocks","res","ELEMENT_DEFAULT","edges","startPoint","endPoint","commonEntry","listType","startList","findNode","endList","rangeLength","Math","min","rootPathLength","onKeyDownList","listSelected","shiftKey","hotkeys","castArray","_hotkey","isList","hasListAsDirectParent","getParent","getNearestListAncestor","normalizeOrphanedListItem","parentList","parentListType","isNonEmptyListItem","listItemChildren","firstNodeIsNotList","_editor","firstNode","insertParagraphAsChild","replaceNodeWithListItems","isListTypeActive","isExpanded","getBlockAbove","emptyListItemNode","withChildren","marks","insertListItem","paragraphPath","listItemNode","isAtStart","isSelectionAtBlockStart","isAtEnd","isSelectionAtBlockEnd","isAtStartOfListItem","isFirstChild","shouldSplit","splitNodes","newListItemPath","fromPath","fromStartIndex","toPath","moveChildren","listBreak","moved","childNode","isBlockAboveEmpty","didReset","onKeyDownResetNode","mockPlugin","types","ELEMENT_LI","predicate","onReset","SIMULATE_BACKSPACE","inserted","insertListBreak","insertBreak","getFirstAncestorOfType","ancestor","isListRoot","trimList","listRoot","textEntries","texts","commonAncestorEntry","reduce","commonAncestor","textEntry","trimLiWrapper","unwrapTextContainerAtStart","insertListFragment","insertFragment","fragment","firstBlockIndex","findIndex","isBlock","inlines","blocks","filtered","deleteBackwardList","removeFirstListItem","removeListItem","deleteFragment","validLiChildrenTypes","LIST_ITEM_BLOCKS","withList","deleteBackward","deleteForward","deleteForwardList","deleteFragmentList","normalizeNode","normalizeList","createListPlugin","createPlateListPlugin","overrideByKey","ELEMENT_UL","withOverrides","ELEMENT_OL","ToolbarListButton","ListBulletedIcon","ListNumberedIcon","createMarkToolbarButton","Mark","isMarkActive","markType","toggleMark","buildMarkEventHandler","ToolbarBoldButton","MARKS","BOLD","FormatBoldIcon","bold","fontWeight","Bold","isGoogleBoldWrapper","startsWith","createBoldPlugin","createDefaultBoldPlugin","validStyle","someHtmlElement","ToolbarCodeButton","CODE","CodeIcon","code","fontFamily","Code","createCodePlugin","createDefaultCodePlugin","ToolbarItalicButton","ITALIC","FormatItalicIcon","italic","fontStyle","Italic","createItalicPlugin","createDefaultItalicPlugin","ToolbarUnderlineButton","UNDERLINE","FormatUnderlinedIcon","Underline","createUnderlinePlugin","createDefaultUnderlinePlugin","textDecoration","createMarksPlugin","isTextContainer","baseRules","NormalizerError","createValidatorFromTypes","getChildren","createTransformerFromObject","transforms","fallback","transformer","withNormalizer","_rules","_rule","isPlainObject","_transform","tr","isValidChild","invalidChildEntry","createNormalizerPlugin","Paragraph","isEmbedElement","hasAttribute","isEmptyElement","textContent","buildParagraphKeyDownHandler","createParagraphPlugin","createDefaultParagraphPlugin","sanitizeSheets","doc","supported","selector","querySelector","tables","querySelectorAll","row","remove","rows","colIndex","cells","cell","isEmpty","every","stripStyleTags","transformers","sanitizeHTML","html","cb","DOMParser","parseFromString","body","innerHTML","catchSlateFragment","getSlateFragmentAttribute","dataTransfer","htmlData","getData","ensureXSlateFragment","clipboardData","DataTransfer","setData","createPasteHTMLPlugin","insertData","inject","pluginsByKey","KEY_DESERIALIZE_HTML","format","transformData","borderLeft","gray200","paddingLeft","Quote","shouldResetQuoteOnBackspace","quote","QUOTE","hasSingleChild","isLastChild","toggleQuote","onKeyDownToggleQuote","plugin","withQuote","startingNode","startsWithBlockquote","containerEntry","containerIsNotEmpty","isContentSelected","Point","compare","anchor","createQuotePlugin","CONTAINERS","ToolbarQuoteButton","QuoteIcon","createSelectOnBackspacePlugin","createDefaultSelectPlugin","getCaretTopPoint","sel","document","getSelection","r","getRangeAt","rect","r2","startContainer","offset","startOffset","createRange","setStart","setEnd","getBoundingClientRect","left","right","top","getComputedStyle","lineHeight","parseInt","delta","closePanel","dispatchEvent","CustomEvent","detail","openPanel","SLASH_COMMANDS_PLUGIN_KEY","createSlashCommandsPlugin","boxShadow","borderRadius","SlashCommandsPalette","setPosition","setIsOpen","MAX_TRIES","currentTries","setCurrentTries","handler","topLeft","curr","addEventListener","removeEventListener","Card","addRow","getNextRowPath","someNode","ELEMENT_TABLE","currentRowItem","ELEMENT_TR","currentRowElem","currentRowPath","nextRowPath","getEmptyRowNode","header","colCount","addRowBelow","addRowAbove","addColumn","getNextCellPath","currentCellItem","ELEMENT_TD","ELEMENT_TH","currentTableItem","nextCellPath","newCellPath","replacePathPos","rowIdx","getEmptyCellNode","addColumnRight","currentCellPath","addColumnLeft","setHeader","enable","tableItem","TABLE_HEADER_CELL","TABLE_CELL","insertTableAndFocusFirstCell","insertTable","replaceEmptyParagraphWithTable","isTableActive","tableElements","isTableHeaderEnabled","tablePath","previousNode","isPreviousNodeTextEmpty","getNoOfMissingTableCellsInRow","rowPath","tableWidth","max","rowWidth","createEmptyTableCells","count","emptyTableCell","isNotEmpty","isTable","topRight","getCurrentTableSize","TableActions","isHeaderEnabled","setHeaderEnabled","close","canInsertRowAbove","headerCell","toggleHeader","action","tableSize","actionName","onOpen","IconButton","tabIndex","Divider","deleteRow","deleteColumn","deleteTable","gray400","Cell","fontWeightNormal","HeaderCell","Row","Table","trimUnnecessaryTableWrapper","insertTableFragment","fragments","isInsertingTable","isTableFirstFragment","currentLineHasText","onKeyDownTable","defaultHandler","defaultKeyDownTable","windowSelection","blockType","anchorNode","isBeforeTable","getTableCellEntry","tableElement","tableRow","tableCell","isLastCell","isLastRow","TOP_LEVEL_BLOCKS","VOID_BLOCKS","normalize","unwrapBlockByKey","getCharacterCount","contentfulSlateJSAdapter","schema","Schema","documentToPlainTextString","actionOrigin","TOOLBAR","SHORTCUT","VIEWPORT","COMMAND_PALETTE","getPastingSource","textHtml","createTrackingPlugin","onAction","trackingActions","origin","onCommandPaletteAction","isCopyAndPaste","characterCountSelection","characterCountBefore","characterCountAfter","source","hasTables","isTableHeaderCell","hasHeadersOutsideFirstRow","addTableTrackingEvents","markupBefore","markupAfter","tablePasted","withInvalidCellChildrenTracking","childEntry","createTablePlugin","createDefaultTablePlugin","withTable","isNestedTable","TABLE_ROW","howMany","ToolbarTableButton","TableIcon","createTextPlugin","onMouseUp","unhangRange","inlinePath","isEnd","point","after","deleteEmptyParagraph","fixPasteAsPlainText","deleteFunction","paragraphOrHeading","isTextEmpty","hasSiblings","prevNode","before","queryNode","prevCell","insertTextData","lines","line","always","createTrailingParagraphPlugin","createTrailingBlockPlugin","createVoidsPlugin","getPlugins","createDeserializeHtmlPlugin","createDeserializeAstPlugin","createDeserializeDocxPlugin","disableCorePlugins","deserializeAst","eventEditor","isTextElement","sanitizeIncomingSlateDoc","hasContent","setEditorContent","apply","nodesArray","isNode","documentToEditorValue","slateDoc","toSlatejsDocument","EMPTY_DOCUMENT","normalizeEditorValue","createPlateEditor","force","STYLE_EDITOR_BORDER","borderRadiusMedium","border","borderTop","padding","fontStackPrimary","minHeight","background","colorWhite","outline","whiteSpace","overflowWrap","webkitUserModify","cursor","hiddenToolbar","enabled","gray100","EmbeddedEntityDropdownButton","onToggle","PlusIcon","EmbedEntityWidget","canInsertBlocks","isEmbedDropdownOpen","setEmbedDropdownOpen","onCloseEntityDropdown","onToggleEntityDropdown","inlineEntryEmbedEnabled","blockEntryEmbedEnabled","blockAssetEmbedEnabled","showEmbedButton","toolbar","backgroundColor","divider","embedActionsWrapper","webkitAlignSelf","alignSelf","msFlexItemAlign","formattingOptionsWrapper","msFlexAlign","webkitBoxAlign","msFlexWrap","flexWrap","Toolbar","validationInfo","getValidationInfo","isListSelected","isBlockquoteSelected","shouldDisableTables","isAnyMarkEnabled","isAnyHyperlinkEnabled","isAnyBlockFormattingEnabled","someWithValidation","vals","validation","val","nativeSticky","StickyToolbarWrapper","isRelevantOperation","op","useOnValueChanged","skip","onSkip","debounce","toContentfulDocument","getPlateSelectors","ConnectedRichTextEditor","noop","isFirstRender","setIsFirstRender","pendingExternalUpdate","setPendingExternalUpdate","onValueChanged","classNames","isToolbarHidden","getPlateActions","Plate","editableProps","readOnly","RichTextEditor","isInitiallyDisabled","otherProps","isEmptyValue","deepEquals","Contentful","FieldConnector","throttle","isEqualValues","lastRemoteValue","setValue","URI","ENTRY","ASSET","isFeaturingEntitySelector","entitySelectorConfigs","Entry","Asset","HyperlinkDialog","handleSubmit","getValue","setTargetEntity","allowedHyperlinkTypes","setState","requiresText","hideText","render","labels","renderFields","confirm","isUriInputAutoFocused","renderEntityField","resetEntity","entityLink","isEntitySelectorVisible","renderEntitySelector","marginTop","propTypes","PropTypes","shape","oneOf","arrayOf","bool","func","defaultProps","openRichTextDialog","parameters","renderRichTextDialog","invocation","startAutoResizer"],"mappings":"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"}